{"ast":null,"code":"import _toConsumableArray from \"/Users/mac/WebstormProjects/github-page/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/mac/WebstormProjects/github-page/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mac/WebstormProjects/github-page/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/mac/WebstormProjects/github-page/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/mac/WebstormProjects/github-page/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { InjectionToken, ɵɵdefineInjectable, ɵɵinject, RendererFactory2, Injectable, Optional, Inject, Self, Directive, ElementRef, Renderer2, Input, NgModule } from '@angular/core';\nimport { __decorate, __metadata } from 'tslib';\nimport { IconService, IconDirective } from '@ant-design/icons-angular';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { DOCUMENT } from '@angular/common';\nimport { HttpBackend } from '@angular/common/http';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { NzConfigService } from 'ng-zorro-antd/core/config';\nimport { warn } from 'ng-zorro-antd/core/logger';\nimport { Subject } from 'rxjs';\nimport { BarsOutline, CalendarOutline, CaretUpFill, CaretUpOutline, CaretDownFill, CaretDownOutline, CheckCircleFill, CheckCircleOutline, CheckOutline, ClockCircleOutline, CloseCircleOutline, CloseCircleFill, CloseOutline, CopyOutline, DoubleLeftOutline, DoubleRightOutline, DownOutline, EditOutline, EllipsisOutline, ExclamationCircleFill, ExclamationCircleOutline, EyeOutline, FileFill, FileOutline, FilterFill, InfoCircleFill, InfoCircleOutline, LeftOutline, LoadingOutline, PaperClipOutline, QuestionCircleOutline, RightOutline, RotateRightOutline, RotateLeftOutline, StarFill, SearchOutline, UploadOutline, VerticalAlignTopOutline, UpOutline, SwapRightOutline, ZoomInOutline, ZoomOutOutline } from '@ant-design/icons-angular/icons';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/platform-browser';\nimport * as ɵngcc2 from 'ng-zorro-antd/core/config';\nimport * as ɵngcc3 from '@angular/common/http';\nvar NZ_ICONS_USED_BY_ZORRO = [BarsOutline, CalendarOutline, CaretUpFill, CaretUpOutline, CaretDownFill, CaretDownOutline, CheckCircleFill, CheckCircleOutline, CheckOutline, ClockCircleOutline, CloseCircleOutline, CloseCircleFill, CloseOutline, CopyOutline, DoubleLeftOutline, DoubleRightOutline, DownOutline, EditOutline, EllipsisOutline, ExclamationCircleFill, ExclamationCircleOutline, EyeOutline, FileFill, FileOutline, FilterFill, InfoCircleFill, InfoCircleOutline, LeftOutline, LoadingOutline, PaperClipOutline, QuestionCircleOutline, RightOutline, RotateRightOutline, RotateLeftOutline, StarFill, SearchOutline, StarFill, UploadOutline, VerticalAlignTopOutline, UpOutline, SwapRightOutline, ZoomInOutline, ZoomOutOutline];\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nvar NZ_ICONS = new InjectionToken('nz_icons');\nvar NZ_ICON_DEFAULT_TWOTONE_COLOR = new InjectionToken('nz_icon_default_twotone_color');\nvar DEFAULT_TWOTONE_COLOR = '#1890ff';\n/**\n * It should be a global singleton, otherwise registered icons could not be found.\n */\n\nvar NzIconService = /*#__PURE__*/function (_IconService) {\n  _inherits(NzIconService, _IconService);\n\n  var _super = _createSuper(NzIconService);\n\n  function NzIconService(rendererFactory, sanitizer, nzConfigService, handler, _document, icons) {\n    var _this2;\n\n    var _this;\n\n    _classCallCheck(this, NzIconService);\n\n    _this = _super.call(this, rendererFactory, handler, _document, sanitizer);\n    _this.nzConfigService = nzConfigService;\n    _this.configUpdated$ = new Subject();\n    _this.iconfontCache = new Set();\n\n    _this.onConfigChange();\n\n    (_this2 = _this).addIcon.apply(_this2, NZ_ICONS_USED_BY_ZORRO.concat(_toConsumableArray(icons || [])));\n\n    _this.configDefaultTwotoneColor();\n\n    _this.configDefaultTheme();\n\n    return _this;\n  }\n\n  _createClass(NzIconService, [{\n    key: \"normalizeSvgElement\",\n    value: function normalizeSvgElement(svg) {\n      if (!svg.getAttribute('viewBox')) {\n        this._renderer.setAttribute(svg, 'viewBox', '0 0 1024 1024');\n      }\n\n      if (!svg.getAttribute('width') || !svg.getAttribute('height')) {\n        this._renderer.setAttribute(svg, 'width', '1em');\n\n        this._renderer.setAttribute(svg, 'height', '1em');\n      }\n\n      if (!svg.getAttribute('fill')) {\n        this._renderer.setAttribute(svg, 'fill', 'currentColor');\n      }\n    }\n  }, {\n    key: \"fetchFromIconfont\",\n    value: function fetchFromIconfont(opt) {\n      var scriptUrl = opt.scriptUrl;\n\n      if (this._document && !this.iconfontCache.has(scriptUrl)) {\n        var script = this._renderer.createElement('script');\n\n        this._renderer.setAttribute(script, 'src', scriptUrl);\n\n        this._renderer.setAttribute(script, 'data-namespace', scriptUrl.replace(/^(https?|http):/g, ''));\n\n        this._renderer.appendChild(this._document.body, script);\n\n        this.iconfontCache.add(scriptUrl);\n      }\n    }\n  }, {\n    key: \"createIconfontIcon\",\n    value: function createIconfontIcon(type) {\n      return this._createSVGElementFromString(\"<svg><use xlink:href=\\\"\".concat(type, \"\\\"></svg>\"));\n    }\n  }, {\n    key: \"onConfigChange\",\n    value: function onConfigChange() {\n      var _this3 = this;\n\n      this.nzConfigService.getConfigChangeEventForComponent('icon').subscribe(function () {\n        _this3.configDefaultTwotoneColor();\n\n        _this3.configDefaultTheme();\n\n        _this3.configUpdated$.next();\n      });\n    }\n  }, {\n    key: \"configDefaultTheme\",\n    value: function configDefaultTheme() {\n      var iconConfig = this.getConfig();\n      this.defaultTheme = iconConfig.nzTheme || 'outline';\n    }\n  }, {\n    key: \"configDefaultTwotoneColor\",\n    value: function configDefaultTwotoneColor() {\n      var iconConfig = this.getConfig();\n      var defaultTwotoneColor = iconConfig.nzTwotoneColor || DEFAULT_TWOTONE_COLOR;\n      var primaryColor = DEFAULT_TWOTONE_COLOR;\n\n      if (defaultTwotoneColor) {\n        if (defaultTwotoneColor.startsWith('#')) {\n          primaryColor = defaultTwotoneColor;\n        } else {\n          warn('Twotone color must be a hex color!');\n        }\n      }\n\n      this.twoToneColor = {\n        primaryColor: primaryColor\n      };\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      return this.nzConfigService.getConfigForComponent('icon') || {};\n    }\n  }]);\n\n  return NzIconService;\n}(IconService);\n\nNzIconService.ɵfac = function NzIconService_Factory(t) {\n  return new (t || NzIconService)(ɵngcc0.ɵɵinject(ɵngcc0.RendererFactory2), ɵngcc0.ɵɵinject(ɵngcc1.DomSanitizer), ɵngcc0.ɵɵinject(ɵngcc2.NzConfigService), ɵngcc0.ɵɵinject(ɵngcc3.HttpBackend, 8), ɵngcc0.ɵɵinject(DOCUMENT, 8), ɵngcc0.ɵɵinject(NZ_ICONS, 8));\n};\n\nNzIconService.ɵprov = ɵɵdefineInjectable({\n  factory: function NzIconService_Factory() {\n    return new NzIconService(ɵɵinject(RendererFactory2), ɵɵinject(DomSanitizer), ɵɵinject(NzConfigService), ɵɵinject(HttpBackend, 8), ɵɵinject(DOCUMENT, 8), ɵɵinject(NZ_ICONS, 8));\n  },\n  token: NzIconService,\n  providedIn: \"root\"\n});\n\nNzIconService.ctorParameters = function () {\n  return [{\n    type: RendererFactory2\n  }, {\n    type: DomSanitizer\n  }, {\n    type: NzConfigService\n  }, {\n    type: HttpBackend,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: Array,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [NZ_ICONS]\n    }]\n  }];\n};\n\nvar NZ_ICONS_PATCH = new InjectionToken('nz_icons_patch');\n\nvar NzIconPatchService = /*#__PURE__*/function () {\n  function NzIconPatchService(extraIcons, rootIconService) {\n    _classCallCheck(this, NzIconPatchService);\n\n    this.extraIcons = extraIcons;\n    this.rootIconService = rootIconService;\n    this.patched = false;\n  }\n\n  _createClass(NzIconPatchService, [{\n    key: \"doPatch\",\n    value: function doPatch() {\n      var _this4 = this;\n\n      if (this.patched) {\n        return;\n      }\n\n      this.extraIcons.forEach(function (iconDefinition) {\n        return _this4.rootIconService.addIcon(iconDefinition);\n      });\n      this.patched = true;\n    }\n  }]);\n\n  return NzIconPatchService;\n}();\n\nNzIconPatchService.ɵfac = function NzIconPatchService_Factory(t) {\n  return new (t || NzIconPatchService)(ɵngcc0.ɵɵinject(NZ_ICONS_PATCH, 2), ɵngcc0.ɵɵinject(NzIconService));\n};\n\nNzIconPatchService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: NzIconPatchService,\n  factory: NzIconPatchService.ɵfac\n});\n\nNzIconPatchService.ctorParameters = function () {\n  return [{\n    type: Array,\n    decorators: [{\n      type: Self\n    }, {\n      type: Inject,\n      args: [NZ_ICONS_PATCH]\n    }]\n  }, {\n    type: NzIconService\n  }];\n};\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzIconDirective = /*#__PURE__*/function (_IconDirective) {\n  _inherits(NzIconDirective, _IconDirective);\n\n  var _super2 = _createSuper(NzIconDirective);\n\n  function NzIconDirective(elementRef, iconService, renderer, iconPatch) {\n    var _this5;\n\n    _classCallCheck(this, NzIconDirective);\n\n    _this5 = _super2.call(this, iconService, elementRef, renderer);\n    _this5.iconService = iconService;\n    _this5.renderer = renderer;\n    _this5.cacheClassName = null;\n    _this5.nzRotate = 0;\n    _this5.spin = false;\n\n    if (iconPatch) {\n      iconPatch.doPatch();\n    }\n\n    _this5.el = elementRef.nativeElement;\n    return _this5;\n  }\n\n  _createClass(NzIconDirective, [{\n    key: \"nzSpin\",\n    set: function set(value) {\n      this.spin = value;\n    }\n  }, {\n    key: \"nzType\",\n    set: function set(value) {\n      this.type = value;\n    }\n  }, {\n    key: \"nzTheme\",\n    set: function set(value) {\n      this.theme = value;\n    }\n  }, {\n    key: \"nzTwotoneColor\",\n    set: function set(value) {\n      this.twoToneColor = value;\n    }\n  }, {\n    key: \"nzIconfont\",\n    set: function set(value) {\n      this.iconfont = value;\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var nzType = changes.nzType,\n          nzTwotoneColor = changes.nzTwotoneColor,\n          nzSpin = changes.nzSpin,\n          nzTheme = changes.nzTheme,\n          nzRotate = changes.nzRotate;\n\n      if (nzType || nzTwotoneColor || nzSpin || nzTheme) {\n        this.changeIcon2();\n      } else if (nzRotate) {\n        this.handleRotate(this.el.firstChild);\n      } else {\n        this._setSVGElement(this.iconService.createIconfontIcon(\"#\".concat(this.iconfont)));\n      }\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.renderer.setAttribute(this.el, 'class', \"anticon \".concat(this.el.className).trim());\n    }\n    /**\n     * If custom content is provided, try to normalize SVG elements.\n     */\n\n  }, {\n    key: \"ngAfterContentChecked\",\n    value: function ngAfterContentChecked() {\n      if (!this.type) {\n        var children = this.el.children;\n        var length = children.length;\n\n        if (!this.type && children.length) {\n          while (length--) {\n            var child = children[length];\n\n            if (child.tagName.toLowerCase() === 'svg') {\n              this.iconService.normalizeSvgElement(child);\n            }\n          }\n        }\n      }\n    }\n    /**\n     * Replacement of `changeIcon` for more modifications.\n     */\n\n  }, {\n    key: \"changeIcon2\",\n    value: function changeIcon2() {\n      var _this6 = this;\n\n      this.setClassName();\n\n      this._changeIcon().then(function (svgOrRemove) {\n        if (svgOrRemove) {\n          _this6.setSVGData(svgOrRemove);\n\n          _this6.handleSpin(svgOrRemove);\n\n          _this6.handleRotate(svgOrRemove);\n        }\n      });\n    }\n  }, {\n    key: \"handleSpin\",\n    value: function handleSpin(svg) {\n      if (this.spin || this.type === 'loading') {\n        this.renderer.addClass(svg, 'anticon-spin');\n      } else {\n        this.renderer.removeClass(svg, 'anticon-spin');\n      }\n    }\n  }, {\n    key: \"handleRotate\",\n    value: function handleRotate(svg) {\n      if (this.nzRotate) {\n        this.renderer.setAttribute(svg, 'style', \"transform: rotate(\".concat(this.nzRotate, \"deg)\"));\n      } else {\n        this.renderer.removeAttribute(svg, 'style');\n      }\n    }\n  }, {\n    key: \"setClassName\",\n    value: function setClassName() {\n      if (this.cacheClassName) {\n        this.renderer.removeClass(this.el, this.cacheClassName);\n      }\n\n      this.cacheClassName = \"anticon-\".concat(this.type);\n      this.renderer.addClass(this.el, this.cacheClassName);\n    }\n  }, {\n    key: \"setSVGData\",\n    value: function setSVGData(svg) {\n      this.renderer.setAttribute(svg, 'data-icon', this.type);\n      this.renderer.setAttribute(svg, 'aria-hidden', 'true');\n    }\n  }]);\n\n  return NzIconDirective;\n}(IconDirective);\n\nNzIconDirective.ɵfac = function NzIconDirective_Factory(t) {\n  return new (t || NzIconDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(NzIconService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(NzIconPatchService, 8));\n};\n\nNzIconDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: NzIconDirective,\n  selectors: [[\"\", \"nz-icon\", \"\"]],\n  hostVars: 2,\n  hostBindings: function NzIconDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"anticon\", true);\n    }\n  },\n  inputs: {\n    nzRotate: \"nzRotate\",\n    nzSpin: \"nzSpin\",\n    nzType: \"nzType\",\n    nzTheme: \"nzTheme\",\n    nzTwotoneColor: \"nzTwotoneColor\",\n    nzIconfont: \"nzIconfont\"\n  },\n  exportAs: [\"nzIcon\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature]\n});\n\nNzIconDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: NzIconService\n  }, {\n    type: Renderer2\n  }, {\n    type: NzIconPatchService,\n    decorators: [{\n      type: Optional\n    }]\n  }];\n};\n\nNzIconDirective.propDecorators = {\n  nzSpin: [{\n    type: Input\n  }],\n  nzRotate: [{\n    type: Input\n  }],\n  nzType: [{\n    type: Input\n  }],\n  nzTheme: [{\n    type: Input\n  }],\n  nzTwotoneColor: [{\n    type: Input\n  }],\n  nzIconfont: [{\n    type: Input\n  }]\n};\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], NzIconDirective.prototype, \"nzSpin\", null);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzIconService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.RendererFactory2\n    }, {\n      type: ɵngcc1.DomSanitizer\n    }, {\n      type: ɵngcc2.NzConfigService\n    }, {\n      type: ɵngcc3.HttpBackend,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: Array,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [NZ_ICONS]\n      }]\n    }];\n  }, null);\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzIconPatchService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: Array,\n      decorators: [{\n        type: Self\n      }, {\n        type: Inject,\n        args: [NZ_ICONS_PATCH]\n      }]\n    }, {\n      type: NzIconService\n    }];\n  }, null);\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzIconDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[nz-icon]',\n      exportAs: 'nzIcon',\n      host: {\n        '[class.anticon]': 'true'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: NzIconService\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: NzIconPatchService,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    nzRotate: [{\n      type: Input\n    }],\n    nzSpin: [{\n      type: Input\n    }],\n    nzType: [{\n      type: Input\n    }],\n    nzTheme: [{\n      type: Input\n    }],\n    nzTwotoneColor: [{\n      type: Input\n    }],\n    nzIconfont: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzIconModule = /*#__PURE__*/function () {\n  function NzIconModule() {\n    _classCallCheck(this, NzIconModule);\n  }\n\n  _createClass(NzIconModule, null, [{\n    key: \"forRoot\",\n    value: function forRoot(icons) {\n      return {\n        ngModule: NzIconModule,\n        providers: [{\n          provide: NZ_ICONS,\n          useValue: icons\n        }]\n      };\n    }\n  }, {\n    key: \"forChild\",\n    value: function forChild(icons) {\n      return {\n        ngModule: NzIconModule,\n        providers: [NzIconPatchService, {\n          provide: NZ_ICONS_PATCH,\n          useValue: icons\n        }]\n      };\n    }\n  }]);\n\n  return NzIconModule;\n}();\n\nNzIconModule.ɵfac = function NzIconModule_Factory(t) {\n  return new (t || NzIconModule)();\n};\n\nNzIconModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: NzIconModule\n});\nNzIconModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [[PlatformModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzIconModule, [{\n    type: NgModule,\n    args: [{\n      exports: [NzIconDirective],\n      declarations: [NzIconDirective],\n      imports: [PlatformModule]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzIconModule, {\n    declarations: function declarations() {\n      return [NzIconDirective];\n    },\n    imports: function imports() {\n      return [PlatformModule];\n    },\n    exports: function exports() {\n      return [NzIconDirective];\n    }\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { DEFAULT_TWOTONE_COLOR, NZ_ICONS, NZ_ICONS_PATCH, NZ_ICONS_USED_BY_ZORRO, NZ_ICON_DEFAULT_TWOTONE_COLOR, NzIconDirective, NzIconModule, NzIconPatchService, NzIconService }; //# sourceMappingURL=ng-zorro-antd-icon.js.map","map":{"version":3,"sources":["/Users/mac/WebstormProjects/github-page/node_modules/ng-zorro-antd/__ivy_ngcc__/fesm2015/ng-zorro-antd-icon.js"],"names":["PlatformModule","InjectionToken","ɵɵdefineInjectable","ɵɵinject","RendererFactory2","Injectable","Optional","Inject","Self","Directive","ElementRef","Renderer2","Input","NgModule","__decorate","__metadata","IconService","IconDirective","InputBoolean","DOCUMENT","HttpBackend","DomSanitizer","NzConfigService","warn","Subject","BarsOutline","CalendarOutline","CaretUpFill","CaretUpOutline","CaretDownFill","CaretDownOutline","CheckCircleFill","CheckCircleOutline","CheckOutline","ClockCircleOutline","CloseCircleOutline","CloseCircleFill","CloseOutline","CopyOutline","DoubleLeftOutline","DoubleRightOutline","DownOutline","EditOutline","EllipsisOutline","ExclamationCircleFill","ExclamationCircleOutline","EyeOutline","FileFill","FileOutline","FilterFill","InfoCircleFill","InfoCircleOutline","LeftOutline","LoadingOutline","PaperClipOutline","QuestionCircleOutline","RightOutline","RotateRightOutline","RotateLeftOutline","StarFill","SearchOutline","UploadOutline","VerticalAlignTopOutline","UpOutline","SwapRightOutline","ZoomInOutline","ZoomOutOutline","ɵngcc0","ɵngcc1","ɵngcc2","ɵngcc3","NZ_ICONS_USED_BY_ZORRO","NZ_ICONS","NZ_ICON_DEFAULT_TWOTONE_COLOR","DEFAULT_TWOTONE_COLOR","NzIconService","rendererFactory","sanitizer","nzConfigService","handler","_document","icons","configUpdated$","iconfontCache","Set","onConfigChange","addIcon","configDefaultTwotoneColor","configDefaultTheme","svg","getAttribute","_renderer","setAttribute","opt","scriptUrl","has","script","createElement","replace","appendChild","body","add","type","_createSVGElementFromString","getConfigChangeEventForComponent","subscribe","next","iconConfig","getConfig","defaultTheme","nzTheme","defaultTwotoneColor","nzTwotoneColor","primaryColor","startsWith","twoToneColor","getConfigForComponent","ɵfac","NzIconService_Factory","t","ɵprov","factory","token","providedIn","ctorParameters","decorators","undefined","args","Array","NZ_ICONS_PATCH","NzIconPatchService","extraIcons","rootIconService","patched","forEach","iconDefinition","NzIconPatchService_Factory","NzIconDirective","elementRef","iconService","renderer","iconPatch","cacheClassName","nzRotate","spin","doPatch","el","nativeElement","value","theme","iconfont","changes","nzType","nzSpin","changeIcon2","handleRotate","firstChild","_setSVGElement","createIconfontIcon","className","trim","children","length","child","tagName","toLowerCase","normalizeSvgElement","setClassName","_changeIcon","then","svgOrRemove","setSVGData","handleSpin","addClass","removeClass","removeAttribute","NzIconDirective_Factory","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","selectors","hostVars","hostBindings","NzIconDirective_HostBindings","rf","ctx","ɵɵclassProp","inputs","nzIconfont","exportAs","features","ɵɵInheritDefinitionFeature","ɵɵNgOnChangesFeature","propDecorators","Boolean","prototype","ngDevMode","ɵsetClassMetadata","selector","host","NzIconModule","ngModule","providers","provide","useValue","NzIconModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations","ngJitMode","ɵɵsetNgModuleScope"],"mappings":"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","sourcesContent":["import { PlatformModule } from '@angular/cdk/platform';\nimport { InjectionToken, ɵɵdefineInjectable, ɵɵinject, RendererFactory2, Injectable, Optional, Inject, Self, Directive, ElementRef, Renderer2, Input, NgModule } from '@angular/core';\nimport { __decorate, __metadata } from 'tslib';\nimport { IconService, IconDirective } from '@ant-design/icons-angular';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { DOCUMENT } from '@angular/common';\nimport { HttpBackend } from '@angular/common/http';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { NzConfigService } from 'ng-zorro-antd/core/config';\nimport { warn } from 'ng-zorro-antd/core/logger';\nimport { Subject } from 'rxjs';\nimport { BarsOutline, CalendarOutline, CaretUpFill, CaretUpOutline, CaretDownFill, CaretDownOutline, CheckCircleFill, CheckCircleOutline, CheckOutline, ClockCircleOutline, CloseCircleOutline, CloseCircleFill, CloseOutline, CopyOutline, DoubleLeftOutline, DoubleRightOutline, DownOutline, EditOutline, EllipsisOutline, ExclamationCircleFill, ExclamationCircleOutline, EyeOutline, FileFill, FileOutline, FilterFill, InfoCircleFill, InfoCircleOutline, LeftOutline, LoadingOutline, PaperClipOutline, QuestionCircleOutline, RightOutline, RotateRightOutline, RotateLeftOutline, StarFill, SearchOutline, UploadOutline, VerticalAlignTopOutline, UpOutline, SwapRightOutline, ZoomInOutline, ZoomOutOutline } from '@ant-design/icons-angular/icons';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/platform-browser';\nimport * as ɵngcc2 from 'ng-zorro-antd/core/config';\nimport * as ɵngcc3 from '@angular/common/http';\nconst NZ_ICONS_USED_BY_ZORRO = [\n    BarsOutline,\n    CalendarOutline,\n    CaretUpFill,\n    CaretUpOutline,\n    CaretDownFill,\n    CaretDownOutline,\n    CheckCircleFill,\n    CheckCircleOutline,\n    CheckOutline,\n    ClockCircleOutline,\n    CloseCircleOutline,\n    CloseCircleFill,\n    CloseOutline,\n    CopyOutline,\n    DoubleLeftOutline,\n    DoubleRightOutline,\n    DownOutline,\n    EditOutline,\n    EllipsisOutline,\n    ExclamationCircleFill,\n    ExclamationCircleOutline,\n    EyeOutline,\n    FileFill,\n    FileOutline,\n    FilterFill,\n    InfoCircleFill,\n    InfoCircleOutline,\n    LeftOutline,\n    LoadingOutline,\n    PaperClipOutline,\n    QuestionCircleOutline,\n    RightOutline,\n    RotateRightOutline,\n    RotateLeftOutline,\n    StarFill,\n    SearchOutline,\n    StarFill,\n    UploadOutline,\n    VerticalAlignTopOutline,\n    UpOutline,\n    SwapRightOutline,\n    ZoomInOutline,\n    ZoomOutOutline\n];\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst NZ_ICONS = new InjectionToken('nz_icons');\nconst NZ_ICON_DEFAULT_TWOTONE_COLOR = new InjectionToken('nz_icon_default_twotone_color');\nconst DEFAULT_TWOTONE_COLOR = '#1890ff';\n/**\n * It should be a global singleton, otherwise registered icons could not be found.\n */\nclass NzIconService extends IconService {\n    constructor(rendererFactory, sanitizer, nzConfigService, handler, _document, icons) {\n        super(rendererFactory, handler, _document, sanitizer);\n        this.nzConfigService = nzConfigService;\n        this.configUpdated$ = new Subject();\n        this.iconfontCache = new Set();\n        this.onConfigChange();\n        this.addIcon(...NZ_ICONS_USED_BY_ZORRO, ...(icons || []));\n        this.configDefaultTwotoneColor();\n        this.configDefaultTheme();\n    }\n    normalizeSvgElement(svg) {\n        if (!svg.getAttribute('viewBox')) {\n            this._renderer.setAttribute(svg, 'viewBox', '0 0 1024 1024');\n        }\n        if (!svg.getAttribute('width') || !svg.getAttribute('height')) {\n            this._renderer.setAttribute(svg, 'width', '1em');\n            this._renderer.setAttribute(svg, 'height', '1em');\n        }\n        if (!svg.getAttribute('fill')) {\n            this._renderer.setAttribute(svg, 'fill', 'currentColor');\n        }\n    }\n    fetchFromIconfont(opt) {\n        const { scriptUrl } = opt;\n        if (this._document && !this.iconfontCache.has(scriptUrl)) {\n            const script = this._renderer.createElement('script');\n            this._renderer.setAttribute(script, 'src', scriptUrl);\n            this._renderer.setAttribute(script, 'data-namespace', scriptUrl.replace(/^(https?|http):/g, ''));\n            this._renderer.appendChild(this._document.body, script);\n            this.iconfontCache.add(scriptUrl);\n        }\n    }\n    createIconfontIcon(type) {\n        return this._createSVGElementFromString(`<svg><use xlink:href=\"${type}\"></svg>`);\n    }\n    onConfigChange() {\n        this.nzConfigService.getConfigChangeEventForComponent('icon').subscribe(() => {\n            this.configDefaultTwotoneColor();\n            this.configDefaultTheme();\n            this.configUpdated$.next();\n        });\n    }\n    configDefaultTheme() {\n        const iconConfig = this.getConfig();\n        this.defaultTheme = iconConfig.nzTheme || 'outline';\n    }\n    configDefaultTwotoneColor() {\n        const iconConfig = this.getConfig();\n        const defaultTwotoneColor = iconConfig.nzTwotoneColor || DEFAULT_TWOTONE_COLOR;\n        let primaryColor = DEFAULT_TWOTONE_COLOR;\n        if (defaultTwotoneColor) {\n            if (defaultTwotoneColor.startsWith('#')) {\n                primaryColor = defaultTwotoneColor;\n            }\n            else {\n                warn('Twotone color must be a hex color!');\n            }\n        }\n        this.twoToneColor = { primaryColor };\n    }\n    getConfig() {\n        return this.nzConfigService.getConfigForComponent('icon') || {};\n    }\n}\nNzIconService.ɵfac = function NzIconService_Factory(t) { return new (t || NzIconService)(ɵngcc0.ɵɵinject(ɵngcc0.RendererFactory2), ɵngcc0.ɵɵinject(ɵngcc1.DomSanitizer), ɵngcc0.ɵɵinject(ɵngcc2.NzConfigService), ɵngcc0.ɵɵinject(ɵngcc3.HttpBackend, 8), ɵngcc0.ɵɵinject(DOCUMENT, 8), ɵngcc0.ɵɵinject(NZ_ICONS, 8)); };\nNzIconService.ɵprov = ɵɵdefineInjectable({ factory: function NzIconService_Factory() { return new NzIconService(ɵɵinject(RendererFactory2), ɵɵinject(DomSanitizer), ɵɵinject(NzConfigService), ɵɵinject(HttpBackend, 8), ɵɵinject(DOCUMENT, 8), ɵɵinject(NZ_ICONS, 8)); }, token: NzIconService, providedIn: \"root\" });\nNzIconService.ctorParameters = () => [\n    { type: RendererFactory2 },\n    { type: DomSanitizer },\n    { type: NzConfigService },\n    { type: HttpBackend, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Inject, args: [NZ_ICONS,] }] }\n];\nconst NZ_ICONS_PATCH = new InjectionToken('nz_icons_patch');\nclass NzIconPatchService {\n    constructor(extraIcons, rootIconService) {\n        this.extraIcons = extraIcons;\n        this.rootIconService = rootIconService;\n        this.patched = false;\n    }\n    doPatch() {\n        if (this.patched) {\n            return;\n        }\n        this.extraIcons.forEach(iconDefinition => this.rootIconService.addIcon(iconDefinition));\n        this.patched = true;\n    }\n}\nNzIconPatchService.ɵfac = function NzIconPatchService_Factory(t) { return new (t || NzIconPatchService)(ɵngcc0.ɵɵinject(NZ_ICONS_PATCH, 2), ɵngcc0.ɵɵinject(NzIconService)); };\nNzIconPatchService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: NzIconPatchService, factory: NzIconPatchService.ɵfac });\nNzIconPatchService.ctorParameters = () => [\n    { type: Array, decorators: [{ type: Self }, { type: Inject, args: [NZ_ICONS_PATCH,] }] },\n    { type: NzIconService }\n];\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzIconDirective extends IconDirective {\n    constructor(elementRef, iconService, renderer, iconPatch) {\n        super(iconService, elementRef, renderer);\n        this.iconService = iconService;\n        this.renderer = renderer;\n        this.cacheClassName = null;\n        this.nzRotate = 0;\n        this.spin = false;\n        if (iconPatch) {\n            iconPatch.doPatch();\n        }\n        this.el = elementRef.nativeElement;\n    }\n    set nzSpin(value) {\n        this.spin = value;\n    }\n    set nzType(value) {\n        this.type = value;\n    }\n    set nzTheme(value) {\n        this.theme = value;\n    }\n    set nzTwotoneColor(value) {\n        this.twoToneColor = value;\n    }\n    set nzIconfont(value) {\n        this.iconfont = value;\n    }\n    ngOnChanges(changes) {\n        const { nzType, nzTwotoneColor, nzSpin, nzTheme, nzRotate } = changes;\n        if (nzType || nzTwotoneColor || nzSpin || nzTheme) {\n            this.changeIcon2();\n        }\n        else if (nzRotate) {\n            this.handleRotate(this.el.firstChild);\n        }\n        else {\n            this._setSVGElement(this.iconService.createIconfontIcon(`#${this.iconfont}`));\n        }\n    }\n    ngOnInit() {\n        this.renderer.setAttribute(this.el, 'class', `anticon ${this.el.className}`.trim());\n    }\n    /**\n     * If custom content is provided, try to normalize SVG elements.\n     */\n    ngAfterContentChecked() {\n        if (!this.type) {\n            const children = this.el.children;\n            let length = children.length;\n            if (!this.type && children.length) {\n                while (length--) {\n                    const child = children[length];\n                    if (child.tagName.toLowerCase() === 'svg') {\n                        this.iconService.normalizeSvgElement(child);\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Replacement of `changeIcon` for more modifications.\n     */\n    changeIcon2() {\n        this.setClassName();\n        this._changeIcon().then(svgOrRemove => {\n            if (svgOrRemove) {\n                this.setSVGData(svgOrRemove);\n                this.handleSpin(svgOrRemove);\n                this.handleRotate(svgOrRemove);\n            }\n        });\n    }\n    handleSpin(svg) {\n        if (this.spin || this.type === 'loading') {\n            this.renderer.addClass(svg, 'anticon-spin');\n        }\n        else {\n            this.renderer.removeClass(svg, 'anticon-spin');\n        }\n    }\n    handleRotate(svg) {\n        if (this.nzRotate) {\n            this.renderer.setAttribute(svg, 'style', `transform: rotate(${this.nzRotate}deg)`);\n        }\n        else {\n            this.renderer.removeAttribute(svg, 'style');\n        }\n    }\n    setClassName() {\n        if (this.cacheClassName) {\n            this.renderer.removeClass(this.el, this.cacheClassName);\n        }\n        this.cacheClassName = `anticon-${this.type}`;\n        this.renderer.addClass(this.el, this.cacheClassName);\n    }\n    setSVGData(svg) {\n        this.renderer.setAttribute(svg, 'data-icon', this.type);\n        this.renderer.setAttribute(svg, 'aria-hidden', 'true');\n    }\n}\nNzIconDirective.ɵfac = function NzIconDirective_Factory(t) { return new (t || NzIconDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(NzIconService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(NzIconPatchService, 8)); };\nNzIconDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: NzIconDirective, selectors: [[\"\", \"nz-icon\", \"\"]], hostVars: 2, hostBindings: function NzIconDirective_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"anticon\", true);\n    } }, inputs: { nzRotate: \"nzRotate\", nzSpin: \"nzSpin\", nzType: \"nzType\", nzTheme: \"nzTheme\", nzTwotoneColor: \"nzTwotoneColor\", nzIconfont: \"nzIconfont\" }, exportAs: [\"nzIcon\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\nNzIconDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NzIconService },\n    { type: Renderer2 },\n    { type: NzIconPatchService, decorators: [{ type: Optional }] }\n];\nNzIconDirective.propDecorators = {\n    nzSpin: [{ type: Input }],\n    nzRotate: [{ type: Input }],\n    nzType: [{ type: Input }],\n    nzTheme: [{ type: Input }],\n    nzTwotoneColor: [{ type: Input }],\n    nzIconfont: [{ type: Input }]\n};\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Boolean),\n    __metadata(\"design:paramtypes\", [Boolean])\n], NzIconDirective.prototype, \"nzSpin\", null);\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzIconService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return [{ type: ɵngcc0.RendererFactory2 }, { type: ɵngcc1.DomSanitizer }, { type: ɵngcc2.NzConfigService }, { type: ɵngcc3.HttpBackend, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [NZ_ICONS]\n            }] }]; }, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzIconPatchService, [{\n        type: Injectable\n    }], function () { return [{ type: Array, decorators: [{\n                type: Self\n            }, {\n                type: Inject,\n                args: [NZ_ICONS_PATCH]\n            }] }, { type: NzIconService }]; }, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzIconDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[nz-icon]',\n                exportAs: 'nzIcon',\n                host: {\n                    '[class.anticon]': 'true'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: NzIconService }, { type: ɵngcc0.Renderer2 }, { type: NzIconPatchService, decorators: [{\n                type: Optional\n            }] }]; }, { nzRotate: [{\n            type: Input\n        }], nzSpin: [{\n            type: Input\n        }], nzType: [{\n            type: Input\n        }], nzTheme: [{\n            type: Input\n        }], nzTwotoneColor: [{\n            type: Input\n        }], nzIconfont: [{\n            type: Input\n        }] }); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzIconModule {\n    static forRoot(icons) {\n        return {\n            ngModule: NzIconModule,\n            providers: [\n                {\n                    provide: NZ_ICONS,\n                    useValue: icons\n                }\n            ]\n        };\n    }\n    static forChild(icons) {\n        return {\n            ngModule: NzIconModule,\n            providers: [\n                NzIconPatchService,\n                {\n                    provide: NZ_ICONS_PATCH,\n                    useValue: icons\n                }\n            ]\n        };\n    }\n}\nNzIconModule.ɵfac = function NzIconModule_Factory(t) { return new (t || NzIconModule)(); };\nNzIconModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NzIconModule });\nNzIconModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[PlatformModule]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzIconModule, [{\n        type: NgModule,\n        args: [{\n                exports: [NzIconDirective],\n                declarations: [NzIconDirective],\n                imports: [PlatformModule]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzIconModule, { declarations: function () { return [NzIconDirective]; }, imports: function () { return [PlatformModule]; }, exports: function () { return [NzIconDirective]; } }); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DEFAULT_TWOTONE_COLOR, NZ_ICONS, NZ_ICONS_PATCH, NZ_ICONS_USED_BY_ZORRO, NZ_ICON_DEFAULT_TWOTONE_COLOR, NzIconDirective, NzIconModule, NzIconPatchService, NzIconService };\n\n//# sourceMappingURL=ng-zorro-antd-icon.js.map"]},"metadata":{},"sourceType":"module"}