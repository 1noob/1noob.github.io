{"ast":null,"code":"import _slicedToArray from \"/Users/mac/WebstormProjects/github-page/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Users/mac/WebstormProjects/github-page/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mac/WebstormProjects/github-page/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { CommonModule } from '@angular/common';\nimport { Pipe, NgModule } from '@angular/core';\nimport { timeUnits } from 'ng-zorro-antd/core/time';\nimport { padStart } from 'ng-zorro-antd/core/util';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport * as ɵngcc0 from '@angular/core';\n\nvar NzTimeRangePipe = /*#__PURE__*/function () {\n  function NzTimeRangePipe() {\n    _classCallCheck(this, NzTimeRangePipe);\n  }\n\n  _createClass(NzTimeRangePipe, [{\n    key: \"transform\",\n    value: function transform(value) {\n      var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'HH:mm:ss';\n      var duration = Number(value || 0);\n      return timeUnits.reduce(function (current, _ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            name = _ref2[0],\n            unit = _ref2[1];\n\n        if (current.indexOf(name) !== -1) {\n          var v = Math.floor(duration / unit);\n          duration -= v * unit;\n          return current.replace(new RegExp(\"\".concat(name, \"+\"), 'g'), function (match) {\n            return padStart(v.toString(), match.length, '0');\n          });\n        }\n\n        return current;\n      }, format);\n    }\n  }]);\n\n  return NzTimeRangePipe;\n}();\n\nNzTimeRangePipe.ɵfac = function NzTimeRangePipe_Factory(t) {\n  return new (t || NzTimeRangePipe)();\n};\n\nNzTimeRangePipe.ɵpipe = /*@__PURE__*/ɵngcc0.ɵɵdefinePipe({\n  name: \"nzTimeRange\",\n  type: NzTimeRangePipe,\n  pure: true\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzTimeRangePipe, [{\n    type: Pipe,\n    args: [{\n      name: 'nzTimeRange',\n      pure: true\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzPipesModule = function NzPipesModule() {\n  _classCallCheck(this, NzPipesModule);\n};\n\nNzPipesModule.ɵfac = function NzPipesModule_Factory(t) {\n  return new (t || NzPipesModule)();\n};\n\nNzPipesModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: NzPipesModule\n});\nNzPipesModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzPipesModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      exports: [NzTimeRangePipe],\n      declarations: [NzTimeRangePipe]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzPipesModule, {\n    declarations: function declarations() {\n      return [NzTimeRangePipe];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [NzTimeRangePipe];\n    }\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzPipesModule, NzTimeRangePipe }; //# sourceMappingURL=ng-zorro-antd-core-pipe.js.map","map":{"version":3,"sources":["/Users/mac/WebstormProjects/github-page/node_modules/ng-zorro-antd/__ivy_ngcc__/fesm2015/ng-zorro-antd-core-pipe.js"],"names":["CommonModule","Pipe","NgModule","timeUnits","padStart","ɵngcc0","NzTimeRangePipe","value","format","duration","Number","reduce","current","name","unit","indexOf","v","Math","floor","replace","RegExp","match","toString","length","ɵfac","NzTimeRangePipe_Factory","t","ɵpipe","ɵɵdefinePipe","type","pure","ngDevMode","ɵsetClassMetadata","args","NzPipesModule","NzPipesModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations","ngJitMode","ɵɵsetNgModuleScope"],"mappings":"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","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { Pipe, NgModule } from '@angular/core';\nimport { timeUnits } from 'ng-zorro-antd/core/time';\nimport { padStart } from 'ng-zorro-antd/core/util';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport * as ɵngcc0 from '@angular/core';\nclass NzTimeRangePipe {\n    transform(value, format = 'HH:mm:ss') {\n        let duration = Number(value || 0);\n        return timeUnits.reduce((current, [name, unit]) => {\n            if (current.indexOf(name) !== -1) {\n                const v = Math.floor(duration / unit);\n                duration -= v * unit;\n                return current.replace(new RegExp(`${name}+`, 'g'), (match) => {\n                    return padStart(v.toString(), match.length, '0');\n                });\n            }\n            return current;\n        }, format);\n    }\n}\nNzTimeRangePipe.ɵfac = function NzTimeRangePipe_Factory(t) { return new (t || NzTimeRangePipe)(); };\nNzTimeRangePipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: \"nzTimeRange\", type: NzTimeRangePipe, pure: true });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzTimeRangePipe, [{\n        type: Pipe,\n        args: [{\n                name: 'nzTimeRange',\n                pure: true\n            }]\n    }], null, null); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzPipesModule {\n}\nNzPipesModule.ɵfac = function NzPipesModule_Factory(t) { return new (t || NzPipesModule)(); };\nNzPipesModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NzPipesModule });\nNzPipesModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzPipesModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                exports: [NzTimeRangePipe],\n                declarations: [NzTimeRangePipe]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzPipesModule, { declarations: function () { return [NzTimeRangePipe]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NzTimeRangePipe]; } }); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzPipesModule, NzTimeRangePipe };\n\n//# sourceMappingURL=ng-zorro-antd-core-pipe.js.map"]},"metadata":{},"sourceType":"module"}