{"ast":null,"code":"import _classCallCheck from \"/Users/mac/WebstormProjects/github-page/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mac/WebstormProjects/github-page/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { CommonModule } from '@angular/common';\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, Optional, Input, NgModule } from '@angular/core';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { __rest, __decorate, __metadata } from 'tslib';\nimport { NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { isNotNil, InputNumber } from 'ng-zorro-antd/core/util';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'ng-zorro-antd/core/config';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from 'ng-zorro-antd/icon';\nimport * as ɵngcc5 from 'ng-zorro-antd/core/outlet';\n\nfunction NzProgressComponent_ng_template_0_span_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelement(1, \"i\", 8);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r5 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"nzType\", ctx_r5.icon);\n  }\n}\n\nfunction NzProgressComponent_ng_template_0_span_0_ng_template_2_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var formatter_r9 = ctx.$implicit;\n    var ctx_r8 = ɵngcc0.ɵɵnextContext(4);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", formatter_r9(ctx_r8.nzPercent), \" \");\n  }\n}\n\nvar _c0 = function _c0(a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nfunction NzProgressComponent_ng_template_0_span_0_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NzProgressComponent_ng_template_0_span_0_ng_template_2_ng_container_0_Template, 2, 1, \"ng-container\", 9);\n  }\n\n  if (rf & 2) {\n    var ctx_r7 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r7.formatter)(\"nzStringTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(2, _c0, ctx_r7.nzPercent));\n  }\n}\n\nfunction NzProgressComponent_ng_template_0_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 5);\n    ɵngcc0.ɵɵtemplate(1, NzProgressComponent_ng_template_0_span_0_ng_container_1_Template, 2, 1, \"ng-container\", 6);\n    ɵngcc0.ɵɵtemplate(2, NzProgressComponent_ng_template_0_span_0_ng_template_2_Template, 1, 4, \"ng-template\", null, 7, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var _r6 = ɵngcc0.ɵɵreference(3);\n\n    var ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", (ctx_r4.status === \"exception\" || ctx_r4.status === \"success\") && !ctx_r4.nzFormat)(\"ngIfElse\", _r6);\n  }\n}\n\nfunction NzProgressComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NzProgressComponent_ng_template_0_span_0_Template, 4, 2, \"span\", 4);\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.nzShowInfo);\n  }\n}\n\nfunction NzProgressComponent_div_3_ng_container_1_div_1_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 17);\n  }\n\n  if (rf & 2) {\n    var ctx_r14 = ɵngcc0.ɵɵnextContext(4);\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r14.nzSuccessPercent, \"%\")(\"border-radius\", ctx_r14.nzStrokeLinecap === \"round\" ? \"100px\" : \"0\")(\"height\", ctx_r14.strokeWidth, \"px\");\n  }\n}\n\nfunction NzProgressComponent_div_3_ng_container_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 13);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 14);\n    ɵngcc0.ɵɵelement(2, \"div\", 15);\n    ɵngcc0.ɵɵtemplate(3, NzProgressComponent_div_3_ng_container_1_div_1_div_3_Template, 1, 6, \"div\", 16);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r12 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r12.nzPercent, \"%\")(\"border-radius\", ctx_r12.nzStrokeLinecap === \"round\" ? \"100px\" : \"0\")(\"background\", !ctx_r12.isGradient ? ctx_r12.nzStrokeColor : null)(\"background-image\", ctx_r12.isGradient ? ctx_r12.lineGradient : null)(\"height\", ctx_r12.strokeWidth, \"px\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r12.nzSuccessPercent || ctx_r12.nzSuccessPercent === 0);\n  }\n}\n\nfunction NzProgressComponent_div_3_ng_container_1_ng_template_2_Template(rf, ctx) {}\n\nfunction NzProgressComponent_div_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NzProgressComponent_div_3_ng_container_1_div_1_Template, 4, 11, \"div\", 11);\n    ɵngcc0.ɵɵtemplate(2, NzProgressComponent_div_3_ng_container_1_ng_template_2_Template, 0, 0, \"ng-template\", 12);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n\n    var _r0 = ɵngcc0.ɵɵreference(1);\n\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r10.isSteps);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", _r0);\n  }\n}\n\nfunction NzProgressComponent_div_3_div_2_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 20);\n  }\n\n  if (rf & 2) {\n    var step_r17 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"ngStyle\", step_r17);\n  }\n}\n\nfunction NzProgressComponent_div_3_div_2_ng_template_2_Template(rf, ctx) {}\n\nfunction NzProgressComponent_div_3_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 18);\n    ɵngcc0.ɵɵtemplate(1, NzProgressComponent_div_3_div_2_div_1_Template, 1, 1, \"div\", 19);\n    ɵngcc0.ɵɵtemplate(2, NzProgressComponent_div_3_div_2_ng_template_2_Template, 0, 0, \"ng-template\", 12);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r11 = ɵngcc0.ɵɵnextContext(2);\n\n    var _r0 = ɵngcc0.ɵɵreference(1);\n\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r11.steps);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", _r0);\n  }\n}\n\nfunction NzProgressComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵtemplate(1, NzProgressComponent_div_3_ng_container_1_Template, 3, 2, \"ng-container\", 2);\n    ɵngcc0.ɵɵtemplate(2, NzProgressComponent_div_3_div_2_Template, 3, 2, \"div\", 10);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r2.isSteps);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.isSteps);\n  }\n}\n\nfunction NzProgressComponent_div_4__svg_defs_2__svg_stop_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"stop\");\n  }\n\n  if (rf & 2) {\n    var i_r23 = ctx.$implicit;\n    ɵngcc0.ɵɵattribute(\"offset\", i_r23.offset)(\"stop-color\", i_r23.color);\n  }\n}\n\nfunction NzProgressComponent_div_4__svg_defs_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(0, \"defs\");\n    ɵngcc0.ɵɵelementStart(1, \"linearGradient\", 24);\n    ɵngcc0.ɵɵtemplate(2, NzProgressComponent_div_4__svg_defs_2__svg_stop_2_Template, 1, 2, \"stop\", 25);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r19 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"id\", \"gradient-\" + ctx_r19.gradientId);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r19.circleGradient);\n  }\n}\n\nfunction NzProgressComponent_div_4__svg_path_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"path\", 26);\n  }\n\n  if (rf & 2) {\n    var p_r24 = ctx.$implicit;\n    var ctx_r20 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngStyle\", p_r24.strokePathStyle);\n    ɵngcc0.ɵɵattribute(\"d\", ctx_r20.pathString)(\"stroke-linecap\", ctx_r20.nzStrokeLinecap)(\"stroke\", p_r24.stroke)(\"stroke-width\", ctx_r20.nzPercent ? ctx_r20.strokeWidth : 0);\n  }\n}\n\nfunction NzProgressComponent_div_4_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n  }\n}\n\nfunction NzProgressComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 14);\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(1, \"svg\", 21);\n    ɵngcc0.ɵɵtemplate(2, NzProgressComponent_div_4__svg_defs_2_Template, 3, 2, \"defs\", 2);\n    ɵngcc0.ɵɵelement(3, \"path\", 22);\n    ɵngcc0.ɵɵtemplate(4, NzProgressComponent_div_4__svg_path_4_Template, 1, 5, \"path\", 23);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(5, NzProgressComponent_div_4_ng_template_5_Template, 0, 0, \"ng-template\", 12);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n\n    var _r0 = ɵngcc0.ɵɵreference(1);\n\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r3.nzWidth, \"px\")(\"height\", ctx_r3.nzWidth, \"px\")(\"font-size\", ctx_r3.nzWidth * 0.15 + 6, \"px\");\n    ɵngcc0.ɵɵclassProp(\"ant-progress-circle-gradient\", ctx_r3.isGradient);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r3.isGradient);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ctx_r3.trailPathStyle);\n    ɵngcc0.ɵɵattribute(\"stroke-width\", ctx_r3.strokeWidth)(\"d\", ctx_r3.pathString);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r3.progressCirclePath)(\"ngForTrackBy\", ctx_r3.trackByFn);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", _r0);\n  }\n}\n\nfunction stripPercentToNumber(percent) {\n  return +percent.replace('%', '');\n}\n\nvar sortGradient = function sortGradient(gradients) {\n  var tempArr = [];\n  Object.keys(gradients).forEach(function (key) {\n    var value = gradients[key];\n    var formatKey = stripPercentToNumber(key);\n\n    if (!isNaN(formatKey)) {\n      tempArr.push({\n        key: formatKey,\n        value: value\n      });\n    }\n  });\n  tempArr = tempArr.sort(function (a, b) {\n    return a.key - b.key;\n  });\n  return tempArr;\n};\n\nvar handleCircleGradient = function handleCircleGradient(strokeColor) {\n  return sortGradient(strokeColor).map(function (_ref) {\n    var key = _ref.key,\n        value = _ref.value;\n    return {\n      offset: \"\".concat(key, \"%\"),\n      color: value\n    };\n  });\n};\n\nvar handleLinearGradient = function handleLinearGradient(strokeColor) {\n  var _strokeColor$from = strokeColor.from,\n      from = _strokeColor$from === void 0 ? '#1890ff' : _strokeColor$from,\n      _strokeColor$to = strokeColor.to,\n      to = _strokeColor$to === void 0 ? '#1890ff' : _strokeColor$to,\n      _strokeColor$directio = strokeColor.direction,\n      direction = _strokeColor$directio === void 0 ? 'to right' : _strokeColor$directio,\n      rest = __rest(strokeColor, [\"from\", \"to\", \"direction\"]);\n\n  if (Object.keys(rest).length !== 0) {\n    var sortedGradients = sortGradient(rest).map(function (_ref2) {\n      var key = _ref2.key,\n          value = _ref2.value;\n      return \"\".concat(value, \" \").concat(key, \"%\");\n    }).join(', ');\n    return \"linear-gradient(\".concat(direction, \", \").concat(sortedGradients, \")\");\n  }\n\n  return \"linear-gradient(\".concat(direction, \", \").concat(from, \", \").concat(to, \")\");\n};\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar gradientIdSeed = 0;\nvar NZ_CONFIG_MODULE_NAME = 'progress';\nvar statusIconNameMap = new Map([['success', 'check'], ['exception', 'close']]);\nvar statusColorMap = new Map([['normal', '#108ee9'], ['exception', '#ff5500'], ['success', '#87d068']]);\n\nvar defaultFormatter = function defaultFormatter(p) {\n  return \"\".concat(p, \"%\");\n};\n\nvar ɵ0 = defaultFormatter;\n\nvar NzProgressComponent = /*#__PURE__*/function () {\n  function NzProgressComponent(cdr, nzConfigService, directionality) {\n    _classCallCheck(this, NzProgressComponent);\n\n    this.cdr = cdr;\n    this.nzConfigService = nzConfigService;\n    this.directionality = directionality;\n    this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n    this.nzShowInfo = true;\n    this.nzWidth = 132;\n    this.nzStrokeColor = undefined;\n    this.nzSize = 'default';\n    this.nzPercent = 0;\n    this.nzStrokeWidth = undefined;\n    this.nzGapDegree = undefined;\n    this.nzType = 'line';\n    this.nzGapPosition = 'top';\n    this.nzStrokeLinecap = 'round';\n    this.nzSteps = 0;\n    this.steps = [];\n    /** Gradient style when `nzType` is `line`. */\n\n    this.lineGradient = null;\n    /** If user uses gradient color. */\n\n    this.isGradient = false;\n    /** If the linear progress is a step progress. */\n\n    this.isSteps = false;\n    /**\n     * Each progress whose `nzType` is circle or dashboard should have unique id to\n     * define `<linearGradient>`.\n     */\n\n    this.gradientId = gradientIdSeed++;\n    /** Paths to rendered in the template. */\n\n    this.progressCirclePath = [];\n    this.trailPathStyle = null;\n    this.dir = 'ltr';\n\n    this.trackByFn = function (index) {\n      return \"\".concat(index);\n    };\n\n    this.cachedStatus = 'normal';\n    this.inferredStatus = 'normal';\n    this.destroy$ = new Subject();\n  }\n\n  _createClass(NzProgressComponent, [{\n    key: \"formatter\",\n    get: function get() {\n      return this.nzFormat || defaultFormatter;\n    }\n  }, {\n    key: \"status\",\n    get: function get() {\n      return this.nzStatus || this.inferredStatus;\n    }\n  }, {\n    key: \"strokeWidth\",\n    get: function get() {\n      return this.nzStrokeWidth || (this.nzType === 'line' && this.nzSize !== 'small' ? 8 : 6);\n    }\n  }, {\n    key: \"isCircleStyle\",\n    get: function get() {\n      return this.nzType === 'circle' || this.nzType === 'dashboard';\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var nzSteps = changes.nzSteps,\n          nzGapPosition = changes.nzGapPosition,\n          nzStrokeLinecap = changes.nzStrokeLinecap,\n          nzStrokeColor = changes.nzStrokeColor,\n          nzGapDegree = changes.nzGapDegree,\n          nzType = changes.nzType,\n          nzStatus = changes.nzStatus,\n          nzPercent = changes.nzPercent,\n          nzSuccessPercent = changes.nzSuccessPercent,\n          nzStrokeWidth = changes.nzStrokeWidth;\n\n      if (nzStatus) {\n        this.cachedStatus = this.nzStatus || this.cachedStatus;\n      }\n\n      if (nzPercent || nzSuccessPercent) {\n        var fillAll = parseInt(this.nzPercent.toString(), 10) >= 100;\n\n        if (fillAll) {\n          if (isNotNil(this.nzSuccessPercent) && this.nzSuccessPercent >= 100 || this.nzSuccessPercent === undefined) {\n            this.inferredStatus = 'success';\n          }\n        } else {\n          this.inferredStatus = this.cachedStatus;\n        }\n      }\n\n      if (nzStatus || nzPercent || nzSuccessPercent || nzStrokeColor) {\n        this.updateIcon();\n      }\n\n      if (nzStrokeColor) {\n        this.setStrokeColor();\n      }\n\n      if (nzGapPosition || nzStrokeLinecap || nzGapDegree || nzType || nzPercent || nzStrokeColor || nzStrokeColor) {\n        this.getCirclePaths();\n      }\n\n      if (nzPercent || nzSteps || nzStrokeWidth) {\n        this.isSteps = this.nzSteps > 0;\n\n        if (this.isSteps) {\n          this.getSteps();\n        }\n      }\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this = this;\n\n      var _a;\n\n      this.nzConfigService.getConfigChangeEventForComponent(NZ_CONFIG_MODULE_NAME).pipe(takeUntil(this.destroy$)).subscribe(function () {\n        _this.updateIcon();\n\n        _this.setStrokeColor();\n\n        _this.getCirclePaths();\n      });\n      (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe(function (direction) {\n        _this.dir = direction;\n\n        _this.cdr.detectChanges();\n      });\n      this.dir = this.directionality.value;\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n  }, {\n    key: \"updateIcon\",\n    value: function updateIcon() {\n      var ret = statusIconNameMap.get(this.status);\n      this.icon = ret ? ret + (this.isCircleStyle ? '-o' : '-circle-fill') : '';\n    }\n    /**\n     * Calculate step render configs.\n     */\n\n  }, {\n    key: \"getSteps\",\n    value: function getSteps() {\n      var current = Math.floor(this.nzSteps * (this.nzPercent / 100));\n      var stepWidth = this.nzSize === 'small' ? 2 : 14;\n      var steps = [];\n\n      for (var i = 0; i < this.nzSteps; i++) {\n        var color = void 0;\n\n        if (i <= current - 1) {\n          color = this.nzStrokeColor;\n        }\n\n        var stepStyle = {\n          backgroundColor: \"\".concat(color),\n          width: \"\".concat(stepWidth, \"px\"),\n          height: \"\".concat(this.strokeWidth, \"px\")\n        };\n        steps.push(stepStyle);\n      }\n\n      this.steps = steps;\n    }\n    /**\n     * Calculate paths when the type is circle or dashboard.\n     */\n\n  }, {\n    key: \"getCirclePaths\",\n    value: function getCirclePaths() {\n      var _this2 = this;\n\n      if (!this.isCircleStyle) {\n        return;\n      }\n\n      var values = isNotNil(this.nzSuccessPercent) ? [this.nzSuccessPercent, this.nzPercent] : [this.nzPercent]; // Calculate shared styles.\n\n      var radius = 50 - this.strokeWidth / 2;\n      var gapPosition = this.nzGapPosition || (this.nzType === 'circle' ? 'top' : 'bottom');\n      var len = Math.PI * 2 * radius;\n      var gapDegree = this.nzGapDegree || (this.nzType === 'circle' ? 0 : 75);\n      var beginPositionX = 0;\n      var beginPositionY = -radius;\n      var endPositionX = 0;\n      var endPositionY = radius * -2;\n\n      switch (gapPosition) {\n        case 'left':\n          beginPositionX = -radius;\n          beginPositionY = 0;\n          endPositionX = radius * 2;\n          endPositionY = 0;\n          break;\n\n        case 'right':\n          beginPositionX = radius;\n          beginPositionY = 0;\n          endPositionX = radius * -2;\n          endPositionY = 0;\n          break;\n\n        case 'bottom':\n          beginPositionY = radius;\n          endPositionY = radius * 2;\n          break;\n\n        default:\n      }\n\n      this.pathString = \"M 50,50 m \".concat(beginPositionX, \",\").concat(beginPositionY, \"\\n       a \").concat(radius, \",\").concat(radius, \" 0 1 1 \").concat(endPositionX, \",\").concat(-endPositionY, \"\\n       a \").concat(radius, \",\").concat(radius, \" 0 1 1 \").concat(-endPositionX, \",\").concat(endPositionY);\n      this.trailPathStyle = {\n        strokeDasharray: \"\".concat(len - gapDegree, \"px \").concat(len, \"px\"),\n        strokeDashoffset: \"-\".concat(gapDegree / 2, \"px\"),\n        transition: 'stroke-dashoffset .3s ease 0s, stroke-dasharray .3s ease 0s, stroke .3s'\n      }; // Calculate styles for each path.\n\n      this.progressCirclePath = values.map(function (value, index) {\n        var isSuccessPercent = values.length === 2 && index === 0;\n        return {\n          stroke: _this2.isGradient && !isSuccessPercent ? \"url(#gradient-\".concat(_this2.gradientId, \")\") : null,\n          strokePathStyle: {\n            stroke: !_this2.isGradient ? isSuccessPercent ? statusColorMap.get('success') : _this2.nzStrokeColor : null,\n            transition: 'stroke-dashoffset .3s ease 0s, stroke-dasharray .3s ease 0s, stroke .3s, stroke-width .06s ease .3s',\n            strokeDasharray: \"\".concat((value || 0) / 100 * (len - gapDegree), \"px \").concat(len, \"px\"),\n            strokeDashoffset: \"-\".concat(gapDegree / 2, \"px\")\n          }\n        };\n      }).reverse();\n    }\n  }, {\n    key: \"setStrokeColor\",\n    value: function setStrokeColor() {\n      var color = this.nzStrokeColor;\n      var isGradient = this.isGradient = !!color && typeof color !== 'string';\n\n      if (isGradient && !this.isCircleStyle) {\n        this.lineGradient = handleLinearGradient(color);\n      } else if (isGradient && this.isCircleStyle) {\n        this.circleGradient = handleCircleGradient(this.nzStrokeColor);\n      } else {\n        this.lineGradient = null;\n        this.circleGradient = [];\n      }\n    }\n  }]);\n\n  return NzProgressComponent;\n}();\n\nNzProgressComponent.ɵfac = function NzProgressComponent_Factory(t) {\n  return new (t || NzProgressComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NzConfigService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8));\n};\n\nNzProgressComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: NzProgressComponent,\n  selectors: [[\"nz-progress\"]],\n  inputs: {\n    nzShowInfo: \"nzShowInfo\",\n    nzWidth: \"nzWidth\",\n    nzStrokeColor: \"nzStrokeColor\",\n    nzSize: \"nzSize\",\n    nzPercent: \"nzPercent\",\n    nzStrokeWidth: \"nzStrokeWidth\",\n    nzGapDegree: \"nzGapDegree\",\n    nzType: \"nzType\",\n    nzGapPosition: \"nzGapPosition\",\n    nzStrokeLinecap: \"nzStrokeLinecap\",\n    nzSteps: \"nzSteps\",\n    nzFormat: \"nzFormat\",\n    nzSuccessPercent: \"nzSuccessPercent\",\n    nzStatus: \"nzStatus\"\n  },\n  exportAs: [\"nzProgress\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 5,\n  vars: 15,\n  consts: [[\"progressInfoTemplate\", \"\"], [3, \"ngClass\"], [4, \"ngIf\"], [\"class\", \"ant-progress-inner\", 3, \"width\", \"height\", \"fontSize\", \"ant-progress-circle-gradient\", 4, \"ngIf\"], [\"class\", \"ant-progress-text\", 4, \"ngIf\"], [1, \"ant-progress-text\"], [4, \"ngIf\", \"ngIfElse\"], [\"formatTemplate\", \"\"], [\"nz-icon\", \"\", 3, \"nzType\"], [4, \"nzStringTemplateOutlet\", \"nzStringTemplateOutletContext\"], [\"class\", \"ant-progress-steps-outer\", 4, \"ngIf\"], [\"class\", \"ant-progress-outer\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"], [1, \"ant-progress-outer\"], [1, \"ant-progress-inner\"], [1, \"ant-progress-bg\"], [\"class\", \"ant-progress-success-bg\", 3, \"width\", \"border-radius\", \"height\", 4, \"ngIf\"], [1, \"ant-progress-success-bg\"], [1, \"ant-progress-steps-outer\"], [\"class\", \"ant-progress-steps-item\", 3, \"ngStyle\", 4, \"ngFor\", \"ngForOf\"], [1, \"ant-progress-steps-item\", 3, \"ngStyle\"], [\"viewBox\", \"0 0 100 100\", 1, \"ant-progress-circle\"], [\"stroke\", \"#f3f3f3\", \"fill-opacity\", \"0\", 1, \"ant-progress-circle-trail\", 3, \"ngStyle\"], [\"class\", \"ant-progress-circle-path\", \"fill-opacity\", \"0\", 3, \"ngStyle\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"x1\", \"100%\", \"y1\", \"0%\", \"x2\", \"0%\", \"y2\", \"0%\", 3, \"id\"], [4, \"ngFor\", \"ngForOf\"], [\"fill-opacity\", \"0\", 1, \"ant-progress-circle-path\", 3, \"ngStyle\"]],\n  template: function NzProgressComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NzProgressComponent_ng_template_0_Template, 1, 1, \"ng-template\", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵelementStart(2, \"div\", 1);\n      ɵngcc0.ɵɵtemplate(3, NzProgressComponent_div_3_Template, 3, 2, \"div\", 2);\n      ɵngcc0.ɵɵtemplate(4, NzProgressComponent_div_4_Template, 6, 15, \"div\", 3);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵclassProp(\"ant-progress-line\", ctx.nzType == \"line\")(\"ant-progress-small\", ctx.nzSize == \"small\")(\"ant-progress-show-info\", ctx.nzShowInfo)(\"ant-progress-circle\", ctx.isCircleStyle)(\"ant-progress-steps\", ctx.isSteps)(\"ant-progress-rtl\", ctx.dir === \"rtl\");\n      ɵngcc0.ɵɵproperty(\"ngClass\", \"ant-progress ant-progress-status-\" + ctx.status);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzType === \"line\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isCircleStyle);\n    }\n  },\n  directives: [ɵngcc3.NgClass, ɵngcc3.NgIf, ɵngcc4.NzIconDirective, ɵngcc5.NzStringTemplateOutletDirective, ɵngcc3.NgTemplateOutlet, ɵngcc3.NgForOf, ɵngcc3.NgStyle],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNzProgressComponent.ctorParameters = function () {\n  return [{\n    type: ChangeDetectorRef\n  }, {\n    type: NzConfigService\n  }, {\n    type: Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }];\n};\n\nNzProgressComponent.propDecorators = {\n  nzShowInfo: [{\n    type: Input\n  }],\n  nzWidth: [{\n    type: Input\n  }],\n  nzStrokeColor: [{\n    type: Input\n  }],\n  nzSize: [{\n    type: Input\n  }],\n  nzFormat: [{\n    type: Input\n  }],\n  nzSuccessPercent: [{\n    type: Input\n  }],\n  nzPercent: [{\n    type: Input\n  }],\n  nzStrokeWidth: [{\n    type: Input\n  }],\n  nzGapDegree: [{\n    type: Input\n  }],\n  nzStatus: [{\n    type: Input\n  }],\n  nzType: [{\n    type: Input\n  }],\n  nzGapPosition: [{\n    type: Input\n  }],\n  nzStrokeLinecap: [{\n    type: Input\n  }],\n  nzSteps: [{\n    type: Input\n  }]\n};\n\n__decorate([WithConfig(), __metadata(\"design:type\", Boolean)], NzProgressComponent.prototype, \"nzShowInfo\", void 0);\n\n__decorate([WithConfig(), __metadata(\"design:type\", Object)], NzProgressComponent.prototype, \"nzStrokeColor\", void 0);\n\n__decorate([WithConfig(), __metadata(\"design:type\", String)], NzProgressComponent.prototype, \"nzSize\", void 0);\n\n__decorate([InputNumber(), __metadata(\"design:type\", Number)], NzProgressComponent.prototype, \"nzSuccessPercent\", void 0);\n\n__decorate([InputNumber(), __metadata(\"design:type\", Number)], NzProgressComponent.prototype, \"nzPercent\", void 0);\n\n__decorate([WithConfig(), InputNumber(), __metadata(\"design:type\", Number)], NzProgressComponent.prototype, \"nzStrokeWidth\", void 0);\n\n__decorate([WithConfig(), InputNumber(), __metadata(\"design:type\", Number)], NzProgressComponent.prototype, \"nzGapDegree\", void 0);\n\n__decorate([WithConfig(), __metadata(\"design:type\", String)], NzProgressComponent.prototype, \"nzGapPosition\", void 0);\n\n__decorate([WithConfig(), __metadata(\"design:type\", String)], NzProgressComponent.prototype, \"nzStrokeLinecap\", void 0);\n\n__decorate([InputNumber(), __metadata(\"design:type\", Number)], NzProgressComponent.prototype, \"nzSteps\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzProgressComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      selector: 'nz-progress',\n      exportAs: 'nzProgress',\n      preserveWhitespaces: false,\n      template: \"\\n    <ng-template #progressInfoTemplate>\\n      <span class=\\\"ant-progress-text\\\" *ngIf=\\\"nzShowInfo\\\">\\n        <ng-container *ngIf=\\\"(status === 'exception' || status === 'success') && !nzFormat; else formatTemplate\\\">\\n          <i nz-icon [nzType]=\\\"icon\\\"></i>\\n        </ng-container>\\n        <ng-template #formatTemplate>\\n          <ng-container *nzStringTemplateOutlet=\\\"formatter; context: { $implicit: nzPercent }; let formatter\\\">\\n            {{ formatter(nzPercent) }}\\n          </ng-container>\\n        </ng-template>\\n      </span>\\n    </ng-template>\\n\\n    <div\\n      [ngClass]=\\\"'ant-progress ant-progress-status-' + status\\\"\\n      [class.ant-progress-line]=\\\"nzType == 'line'\\\"\\n      [class.ant-progress-small]=\\\"nzSize == 'small'\\\"\\n      [class.ant-progress-show-info]=\\\"nzShowInfo\\\"\\n      [class.ant-progress-circle]=\\\"isCircleStyle\\\"\\n      [class.ant-progress-steps]=\\\"isSteps\\\"\\n      [class.ant-progress-rtl]=\\\"dir === 'rtl'\\\"\\n    >\\n      <!-- line progress -->\\n      <div *ngIf=\\\"nzType === 'line'\\\">\\n        <!-- normal line style -->\\n        <ng-container *ngIf=\\\"!isSteps\\\">\\n          <div class=\\\"ant-progress-outer\\\" *ngIf=\\\"!isSteps\\\">\\n            <div class=\\\"ant-progress-inner\\\">\\n              <div\\n                class=\\\"ant-progress-bg\\\"\\n                [style.width.%]=\\\"nzPercent\\\"\\n                [style.border-radius]=\\\"nzStrokeLinecap === 'round' ? '100px' : '0'\\\"\\n                [style.background]=\\\"!isGradient ? nzStrokeColor : null\\\"\\n                [style.background-image]=\\\"isGradient ? lineGradient : null\\\"\\n                [style.height.px]=\\\"strokeWidth\\\"\\n              ></div>\\n              <div\\n                *ngIf=\\\"nzSuccessPercent || nzSuccessPercent === 0\\\"\\n                class=\\\"ant-progress-success-bg\\\"\\n                [style.width.%]=\\\"nzSuccessPercent\\\"\\n                [style.border-radius]=\\\"nzStrokeLinecap === 'round' ? '100px' : '0'\\\"\\n                [style.height.px]=\\\"strokeWidth\\\"\\n              ></div>\\n            </div>\\n          </div>\\n          <ng-template [ngTemplateOutlet]=\\\"progressInfoTemplate\\\"></ng-template>\\n        </ng-container>\\n        <!-- step style -->\\n        <div class=\\\"ant-progress-steps-outer\\\" *ngIf=\\\"isSteps\\\">\\n          <div *ngFor=\\\"let step of steps; let i = index\\\" class=\\\"ant-progress-steps-item\\\" [ngStyle]=\\\"step\\\"></div>\\n          <ng-template [ngTemplateOutlet]=\\\"progressInfoTemplate\\\"></ng-template>\\n        </div>\\n      </div>\\n\\n      <!-- circle / dashboard progress -->\\n      <div\\n        [style.width.px]=\\\"this.nzWidth\\\"\\n        [style.height.px]=\\\"this.nzWidth\\\"\\n        [style.fontSize.px]=\\\"this.nzWidth * 0.15 + 6\\\"\\n        class=\\\"ant-progress-inner\\\"\\n        [class.ant-progress-circle-gradient]=\\\"isGradient\\\"\\n        *ngIf=\\\"isCircleStyle\\\"\\n      >\\n        <svg class=\\\"ant-progress-circle \\\" viewBox=\\\"0 0 100 100\\\">\\n          <defs *ngIf=\\\"isGradient\\\">\\n            <linearGradient [id]=\\\"'gradient-' + gradientId\\\" x1=\\\"100%\\\" y1=\\\"0%\\\" x2=\\\"0%\\\" y2=\\\"0%\\\">\\n              <stop *ngFor=\\\"let i of circleGradient\\\" [attr.offset]=\\\"i.offset\\\" [attr.stop-color]=\\\"i.color\\\"></stop>\\n            </linearGradient>\\n          </defs>\\n          <path\\n            class=\\\"ant-progress-circle-trail\\\"\\n            stroke=\\\"#f3f3f3\\\"\\n            fill-opacity=\\\"0\\\"\\n            [attr.stroke-width]=\\\"strokeWidth\\\"\\n            [attr.d]=\\\"pathString\\\"\\n            [ngStyle]=\\\"trailPathStyle\\\"\\n          ></path>\\n          <path\\n            *ngFor=\\\"let p of progressCirclePath; trackBy: trackByFn\\\"\\n            class=\\\"ant-progress-circle-path\\\"\\n            fill-opacity=\\\"0\\\"\\n            [attr.d]=\\\"pathString\\\"\\n            [attr.stroke-linecap]=\\\"nzStrokeLinecap\\\"\\n            [attr.stroke]=\\\"p.stroke\\\"\\n            [attr.stroke-width]=\\\"nzPercent ? strokeWidth : 0\\\"\\n            [ngStyle]=\\\"p.strokePathStyle\\\"\\n          ></path>\\n        </svg>\\n        <ng-template [ngTemplateOutlet]=\\\"progressInfoTemplate\\\"></ng-template>\\n      </div>\\n    </div>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc1.NzConfigService\n    }, {\n      type: ɵngcc2.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    nzShowInfo: [{\n      type: Input\n    }],\n    nzWidth: [{\n      type: Input\n    }],\n    nzStrokeColor: [{\n      type: Input\n    }],\n    nzSize: [{\n      type: Input\n    }],\n    nzPercent: [{\n      type: Input\n    }],\n    nzStrokeWidth: [{\n      type: Input\n    }],\n    nzGapDegree: [{\n      type: Input\n    }],\n    nzType: [{\n      type: Input\n    }],\n    nzGapPosition: [{\n      type: Input\n    }],\n    nzStrokeLinecap: [{\n      type: Input\n    }],\n    nzSteps: [{\n      type: Input\n    }],\n    nzFormat: [{\n      type: Input\n    }],\n    nzSuccessPercent: [{\n      type: Input\n    }],\n    nzStatus: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzProgressModule = function NzProgressModule() {\n  _classCallCheck(this, NzProgressModule);\n};\n\nNzProgressModule.ɵfac = function NzProgressModule_Factory(t) {\n  return new (t || NzProgressModule)();\n};\n\nNzProgressModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: NzProgressModule\n});\nNzProgressModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [[BidiModule, CommonModule, NzIconModule, NzOutletModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzProgressModule, [{\n    type: NgModule,\n    args: [{\n      exports: [NzProgressComponent],\n      declarations: [NzProgressComponent],\n      imports: [BidiModule, CommonModule, NzIconModule, NzOutletModule]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzProgressModule, {\n    declarations: function declarations() {\n      return [NzProgressComponent];\n    },\n    imports: function imports() {\n      return [BidiModule, CommonModule, NzIconModule, NzOutletModule];\n    },\n    exports: function exports() {\n      return [NzProgressComponent];\n    }\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzProgressComponent, NzProgressModule }; //# sourceMappingURL=ng-zorro-antd-progress.js.map","map":{"version":3,"sources":["/Users/mac/WebstormProjects/github-page/node_modules/ng-zorro-antd/__ivy_ngcc__/fesm2015/ng-zorro-antd-progress.js"],"names":["Directionality","BidiModule","CommonModule","Component","ChangeDetectionStrategy","ViewEncapsulation","ChangeDetectorRef","Optional","Input","NgModule","NzOutletModule","NzIconModule","__rest","__decorate","__metadata","NzConfigService","WithConfig","isNotNil","InputNumber","Subject","takeUntil","ɵngcc0","ɵngcc1","ɵngcc2","ɵngcc3","ɵngcc4","ɵngcc5","NzProgressComponent_ng_template_0_span_0_ng_container_1_Template","rf","ctx","ɵɵelementContainerStart","ɵɵelement","ɵɵelementContainerEnd","ctx_r5","ɵɵnextContext","ɵɵadvance","ɵɵproperty","icon","NzProgressComponent_ng_template_0_span_0_ng_template_2_ng_container_0_Template","ɵɵtext","formatter_r9","$implicit","ctx_r8","ɵɵtextInterpolate1","nzPercent","_c0","a0","NzProgressComponent_ng_template_0_span_0_ng_template_2_Template","ɵɵtemplate","ctx_r7","formatter","ɵɵpureFunction1","NzProgressComponent_ng_template_0_span_0_Template","ɵɵelementStart","ɵɵtemplateRefExtractor","ɵɵelementEnd","_r6","ɵɵreference","ctx_r4","status","nzFormat","NzProgressComponent_ng_template_0_Template","ctx_r1","nzShowInfo","NzProgressComponent_div_3_ng_container_1_div_1_div_3_Template","ctx_r14","ɵɵstyleProp","nzSuccessPercent","nzStrokeLinecap","strokeWidth","NzProgressComponent_div_3_ng_container_1_div_1_Template","ctx_r12","isGradient","nzStrokeColor","lineGradient","NzProgressComponent_div_3_ng_container_1_ng_template_2_Template","NzProgressComponent_div_3_ng_container_1_Template","ctx_r10","_r0","isSteps","NzProgressComponent_div_3_div_2_div_1_Template","step_r17","NzProgressComponent_div_3_div_2_ng_template_2_Template","NzProgressComponent_div_3_div_2_Template","ctx_r11","steps","NzProgressComponent_div_3_Template","ctx_r2","NzProgressComponent_div_4__svg_defs_2__svg_stop_2_Template","ɵɵnamespaceSVG","i_r23","ɵɵattribute","offset","color","NzProgressComponent_div_4__svg_defs_2_Template","ctx_r19","gradientId","circleGradient","NzProgressComponent_div_4__svg_path_4_Template","p_r24","ctx_r20","strokePathStyle","pathString","stroke","NzProgressComponent_div_4_ng_template_5_Template","NzProgressComponent_div_4_Template","ctx_r3","nzWidth","ɵɵclassProp","trailPathStyle","progressCirclePath","trackByFn","stripPercentToNumber","percent","replace","sortGradient","gradients","tempArr","Object","keys","forEach","key","value","formatKey","isNaN","push","sort","a","b","handleCircleGradient","strokeColor","map","handleLinearGradient","from","to","direction","rest","length","sortedGradients","join","gradientIdSeed","NZ_CONFIG_MODULE_NAME","statusIconNameMap","Map","statusColorMap","defaultFormatter","p","ɵ0","NzProgressComponent","cdr","nzConfigService","directionality","_nzModuleName","undefined","nzSize","nzStrokeWidth","nzGapDegree","nzType","nzGapPosition","nzSteps","dir","index","cachedStatus","inferredStatus","destroy$","nzStatus","changes","fillAll","parseInt","toString","updateIcon","setStrokeColor","getCirclePaths","getSteps","_a","getConfigChangeEventForComponent","pipe","subscribe","change","detectChanges","next","complete","ret","get","isCircleStyle","current","Math","floor","stepWidth","i","stepStyle","backgroundColor","width","height","values","radius","gapPosition","len","PI","gapDegree","beginPositionX","beginPositionY","endPositionX","endPositionY","strokeDasharray","strokeDashoffset","transition","isSuccessPercent","reverse","ɵfac","NzProgressComponent_Factory","t","ɵɵdirectiveInject","ɵcmp","ɵɵdefineComponent","type","selectors","inputs","exportAs","features","ɵɵNgOnChangesFeature","decls","vars","consts","template","NzProgressComponent_Template","directives","NgClass","NgIf","NzIconDirective","NzStringTemplateOutletDirective","NgTemplateOutlet","NgForOf","NgStyle","encapsulation","changeDetection","ctorParameters","decorators","propDecorators","Boolean","prototype","String","Number","ngDevMode","ɵsetClassMetadata","args","OnPush","None","selector","preserveWhitespaces","NzProgressModule","NzProgressModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations","ngJitMode","ɵɵsetNgModuleScope"],"mappings":"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","sourcesContent":["import { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { CommonModule } from '@angular/common';\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, Optional, Input, NgModule } from '@angular/core';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { __rest, __decorate, __metadata } from 'tslib';\nimport { NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { isNotNil, InputNumber } from 'ng-zorro-antd/core/util';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'ng-zorro-antd/core/config';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from 'ng-zorro-antd/icon';\nimport * as ɵngcc5 from 'ng-zorro-antd/core/outlet';\n\nfunction NzProgressComponent_ng_template_0_span_0_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelement(1, \"i\", 8);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"nzType\", ctx_r5.icon);\n} }\nfunction NzProgressComponent_ng_template_0_span_0_ng_template_2_ng_container_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const formatter_r9 = ctx.$implicit;\n    const ctx_r8 = ɵngcc0.ɵɵnextContext(4);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", formatter_r9(ctx_r8.nzPercent), \" \");\n} }\nconst _c0 = function (a0) { return { $implicit: a0 }; };\nfunction NzProgressComponent_ng_template_0_span_0_ng_template_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NzProgressComponent_ng_template_0_span_0_ng_template_2_ng_container_0_Template, 2, 1, \"ng-container\", 9);\n} if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r7.formatter)(\"nzStringTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(2, _c0, ctx_r7.nzPercent));\n} }\nfunction NzProgressComponent_ng_template_0_span_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 5);\n    ɵngcc0.ɵɵtemplate(1, NzProgressComponent_ng_template_0_span_0_ng_container_1_Template, 2, 1, \"ng-container\", 6);\n    ɵngcc0.ɵɵtemplate(2, NzProgressComponent_ng_template_0_span_0_ng_template_2_Template, 1, 4, \"ng-template\", null, 7, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const _r6 = ɵngcc0.ɵɵreference(3);\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", (ctx_r4.status === \"exception\" || ctx_r4.status === \"success\") && !ctx_r4.nzFormat)(\"ngIfElse\", _r6);\n} }\nfunction NzProgressComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NzProgressComponent_ng_template_0_span_0_Template, 4, 2, \"span\", 4);\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.nzShowInfo);\n} }\nfunction NzProgressComponent_div_3_ng_container_1_div_1_div_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 17);\n} if (rf & 2) {\n    const ctx_r14 = ɵngcc0.ɵɵnextContext(4);\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r14.nzSuccessPercent, \"%\")(\"border-radius\", ctx_r14.nzStrokeLinecap === \"round\" ? \"100px\" : \"0\")(\"height\", ctx_r14.strokeWidth, \"px\");\n} }\nfunction NzProgressComponent_div_3_ng_container_1_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 13);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 14);\n    ɵngcc0.ɵɵelement(2, \"div\", 15);\n    ɵngcc0.ɵɵtemplate(3, NzProgressComponent_div_3_ng_container_1_div_1_div_3_Template, 1, 6, \"div\", 16);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r12 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r12.nzPercent, \"%\")(\"border-radius\", ctx_r12.nzStrokeLinecap === \"round\" ? \"100px\" : \"0\")(\"background\", !ctx_r12.isGradient ? ctx_r12.nzStrokeColor : null)(\"background-image\", ctx_r12.isGradient ? ctx_r12.lineGradient : null)(\"height\", ctx_r12.strokeWidth, \"px\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r12.nzSuccessPercent || ctx_r12.nzSuccessPercent === 0);\n} }\nfunction NzProgressComponent_div_3_ng_container_1_ng_template_2_Template(rf, ctx) { }\nfunction NzProgressComponent_div_3_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NzProgressComponent_div_3_ng_container_1_div_1_Template, 4, 11, \"div\", 11);\n    ɵngcc0.ɵɵtemplate(2, NzProgressComponent_div_3_ng_container_1_ng_template_2_Template, 0, 0, \"ng-template\", 12);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n    const _r0 = ɵngcc0.ɵɵreference(1);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r10.isSteps);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", _r0);\n} }\nfunction NzProgressComponent_div_3_div_2_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 20);\n} if (rf & 2) {\n    const step_r17 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"ngStyle\", step_r17);\n} }\nfunction NzProgressComponent_div_3_div_2_ng_template_2_Template(rf, ctx) { }\nfunction NzProgressComponent_div_3_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 18);\n    ɵngcc0.ɵɵtemplate(1, NzProgressComponent_div_3_div_2_div_1_Template, 1, 1, \"div\", 19);\n    ɵngcc0.ɵɵtemplate(2, NzProgressComponent_div_3_div_2_ng_template_2_Template, 0, 0, \"ng-template\", 12);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r11 = ɵngcc0.ɵɵnextContext(2);\n    const _r0 = ɵngcc0.ɵɵreference(1);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r11.steps);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", _r0);\n} }\nfunction NzProgressComponent_div_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵtemplate(1, NzProgressComponent_div_3_ng_container_1_Template, 3, 2, \"ng-container\", 2);\n    ɵngcc0.ɵɵtemplate(2, NzProgressComponent_div_3_div_2_Template, 3, 2, \"div\", 10);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r2.isSteps);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.isSteps);\n} }\nfunction NzProgressComponent_div_4__svg_defs_2__svg_stop_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"stop\");\n} if (rf & 2) {\n    const i_r23 = ctx.$implicit;\n    ɵngcc0.ɵɵattribute(\"offset\", i_r23.offset)(\"stop-color\", i_r23.color);\n} }\nfunction NzProgressComponent_div_4__svg_defs_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(0, \"defs\");\n    ɵngcc0.ɵɵelementStart(1, \"linearGradient\", 24);\n    ɵngcc0.ɵɵtemplate(2, NzProgressComponent_div_4__svg_defs_2__svg_stop_2_Template, 1, 2, \"stop\", 25);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r19 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"id\", \"gradient-\" + ctx_r19.gradientId);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r19.circleGradient);\n} }\nfunction NzProgressComponent_div_4__svg_path_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"path\", 26);\n} if (rf & 2) {\n    const p_r24 = ctx.$implicit;\n    const ctx_r20 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngStyle\", p_r24.strokePathStyle);\n    ɵngcc0.ɵɵattribute(\"d\", ctx_r20.pathString)(\"stroke-linecap\", ctx_r20.nzStrokeLinecap)(\"stroke\", p_r24.stroke)(\"stroke-width\", ctx_r20.nzPercent ? ctx_r20.strokeWidth : 0);\n} }\nfunction NzProgressComponent_div_4_ng_template_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n} }\nfunction NzProgressComponent_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 14);\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(1, \"svg\", 21);\n    ɵngcc0.ɵɵtemplate(2, NzProgressComponent_div_4__svg_defs_2_Template, 3, 2, \"defs\", 2);\n    ɵngcc0.ɵɵelement(3, \"path\", 22);\n    ɵngcc0.ɵɵtemplate(4, NzProgressComponent_div_4__svg_path_4_Template, 1, 5, \"path\", 23);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(5, NzProgressComponent_div_4_ng_template_5_Template, 0, 0, \"ng-template\", 12);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    const _r0 = ɵngcc0.ɵɵreference(1);\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r3.nzWidth, \"px\")(\"height\", ctx_r3.nzWidth, \"px\")(\"font-size\", ctx_r3.nzWidth * 0.15 + 6, \"px\");\n    ɵngcc0.ɵɵclassProp(\"ant-progress-circle-gradient\", ctx_r3.isGradient);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r3.isGradient);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ctx_r3.trailPathStyle);\n    ɵngcc0.ɵɵattribute(\"stroke-width\", ctx_r3.strokeWidth)(\"d\", ctx_r3.pathString);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r3.progressCirclePath)(\"ngForTrackBy\", ctx_r3.trackByFn);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", _r0);\n} }\nfunction stripPercentToNumber(percent) {\n    return +percent.replace('%', '');\n}\nconst sortGradient = (gradients) => {\n    let tempArr = [];\n    Object.keys(gradients).forEach(key => {\n        const value = gradients[key];\n        const formatKey = stripPercentToNumber(key);\n        if (!isNaN(formatKey)) {\n            tempArr.push({\n                key: formatKey,\n                value\n            });\n        }\n    });\n    tempArr = tempArr.sort((a, b) => a.key - b.key);\n    return tempArr;\n};\nconst handleCircleGradient = (strokeColor) => {\n    return sortGradient(strokeColor).map(({ key, value }) => ({ offset: `${key}%`, color: value }));\n};\nconst handleLinearGradient = (strokeColor) => {\n    const { from = '#1890ff', to = '#1890ff', direction = 'to right' } = strokeColor, rest = __rest(strokeColor, [\"from\", \"to\", \"direction\"]);\n    if (Object.keys(rest).length !== 0) {\n        const sortedGradients = sortGradient(rest)\n            .map(({ key, value }) => `${value} ${key}%`)\n            .join(', ');\n        return `linear-gradient(${direction}, ${sortedGradients})`;\n    }\n    return `linear-gradient(${direction}, ${from}, ${to})`;\n};\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nlet gradientIdSeed = 0;\nconst NZ_CONFIG_MODULE_NAME = 'progress';\nconst statusIconNameMap = new Map([\n    ['success', 'check'],\n    ['exception', 'close']\n]);\nconst statusColorMap = new Map([\n    ['normal', '#108ee9'],\n    ['exception', '#ff5500'],\n    ['success', '#87d068']\n]);\nconst defaultFormatter = (p) => `${p}%`;\nconst ɵ0 = defaultFormatter;\nclass NzProgressComponent {\n    constructor(cdr, nzConfigService, directionality) {\n        this.cdr = cdr;\n        this.nzConfigService = nzConfigService;\n        this.directionality = directionality;\n        this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n        this.nzShowInfo = true;\n        this.nzWidth = 132;\n        this.nzStrokeColor = undefined;\n        this.nzSize = 'default';\n        this.nzPercent = 0;\n        this.nzStrokeWidth = undefined;\n        this.nzGapDegree = undefined;\n        this.nzType = 'line';\n        this.nzGapPosition = 'top';\n        this.nzStrokeLinecap = 'round';\n        this.nzSteps = 0;\n        this.steps = [];\n        /** Gradient style when `nzType` is `line`. */\n        this.lineGradient = null;\n        /** If user uses gradient color. */\n        this.isGradient = false;\n        /** If the linear progress is a step progress. */\n        this.isSteps = false;\n        /**\n         * Each progress whose `nzType` is circle or dashboard should have unique id to\n         * define `<linearGradient>`.\n         */\n        this.gradientId = gradientIdSeed++;\n        /** Paths to rendered in the template. */\n        this.progressCirclePath = [];\n        this.trailPathStyle = null;\n        this.dir = 'ltr';\n        this.trackByFn = (index) => `${index}`;\n        this.cachedStatus = 'normal';\n        this.inferredStatus = 'normal';\n        this.destroy$ = new Subject();\n    }\n    get formatter() {\n        return this.nzFormat || defaultFormatter;\n    }\n    get status() {\n        return this.nzStatus || this.inferredStatus;\n    }\n    get strokeWidth() {\n        return this.nzStrokeWidth || (this.nzType === 'line' && this.nzSize !== 'small' ? 8 : 6);\n    }\n    get isCircleStyle() {\n        return this.nzType === 'circle' || this.nzType === 'dashboard';\n    }\n    ngOnChanges(changes) {\n        const { nzSteps, nzGapPosition, nzStrokeLinecap, nzStrokeColor, nzGapDegree, nzType, nzStatus, nzPercent, nzSuccessPercent, nzStrokeWidth } = changes;\n        if (nzStatus) {\n            this.cachedStatus = this.nzStatus || this.cachedStatus;\n        }\n        if (nzPercent || nzSuccessPercent) {\n            const fillAll = parseInt(this.nzPercent.toString(), 10) >= 100;\n            if (fillAll) {\n                if ((isNotNil(this.nzSuccessPercent) && this.nzSuccessPercent >= 100) || this.nzSuccessPercent === undefined) {\n                    this.inferredStatus = 'success';\n                }\n            }\n            else {\n                this.inferredStatus = this.cachedStatus;\n            }\n        }\n        if (nzStatus || nzPercent || nzSuccessPercent || nzStrokeColor) {\n            this.updateIcon();\n        }\n        if (nzStrokeColor) {\n            this.setStrokeColor();\n        }\n        if (nzGapPosition || nzStrokeLinecap || nzGapDegree || nzType || nzPercent || nzStrokeColor || nzStrokeColor) {\n            this.getCirclePaths();\n        }\n        if (nzPercent || nzSteps || nzStrokeWidth) {\n            this.isSteps = this.nzSteps > 0;\n            if (this.isSteps) {\n                this.getSteps();\n            }\n        }\n    }\n    ngOnInit() {\n        var _a;\n        this.nzConfigService\n            .getConfigChangeEventForComponent(NZ_CONFIG_MODULE_NAME)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(() => {\n            this.updateIcon();\n            this.setStrokeColor();\n            this.getCirclePaths();\n        });\n        (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe((direction) => {\n            this.dir = direction;\n            this.cdr.detectChanges();\n        });\n        this.dir = this.directionality.value;\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n    updateIcon() {\n        const ret = statusIconNameMap.get(this.status);\n        this.icon = ret ? ret + (this.isCircleStyle ? '-o' : '-circle-fill') : '';\n    }\n    /**\n     * Calculate step render configs.\n     */\n    getSteps() {\n        const current = Math.floor(this.nzSteps * (this.nzPercent / 100));\n        const stepWidth = this.nzSize === 'small' ? 2 : 14;\n        const steps = [];\n        for (let i = 0; i < this.nzSteps; i++) {\n            let color;\n            if (i <= current - 1) {\n                color = this.nzStrokeColor;\n            }\n            const stepStyle = {\n                backgroundColor: `${color}`,\n                width: `${stepWidth}px`,\n                height: `${this.strokeWidth}px`\n            };\n            steps.push(stepStyle);\n        }\n        this.steps = steps;\n    }\n    /**\n     * Calculate paths when the type is circle or dashboard.\n     */\n    getCirclePaths() {\n        if (!this.isCircleStyle) {\n            return;\n        }\n        const values = isNotNil(this.nzSuccessPercent) ? [this.nzSuccessPercent, this.nzPercent] : [this.nzPercent];\n        // Calculate shared styles.\n        const radius = 50 - this.strokeWidth / 2;\n        const gapPosition = this.nzGapPosition || (this.nzType === 'circle' ? 'top' : 'bottom');\n        const len = Math.PI * 2 * radius;\n        const gapDegree = this.nzGapDegree || (this.nzType === 'circle' ? 0 : 75);\n        let beginPositionX = 0;\n        let beginPositionY = -radius;\n        let endPositionX = 0;\n        let endPositionY = radius * -2;\n        switch (gapPosition) {\n            case 'left':\n                beginPositionX = -radius;\n                beginPositionY = 0;\n                endPositionX = radius * 2;\n                endPositionY = 0;\n                break;\n            case 'right':\n                beginPositionX = radius;\n                beginPositionY = 0;\n                endPositionX = radius * -2;\n                endPositionY = 0;\n                break;\n            case 'bottom':\n                beginPositionY = radius;\n                endPositionY = radius * 2;\n                break;\n            default:\n        }\n        this.pathString = `M 50,50 m ${beginPositionX},${beginPositionY}\n       a ${radius},${radius} 0 1 1 ${endPositionX},${-endPositionY}\n       a ${radius},${radius} 0 1 1 ${-endPositionX},${endPositionY}`;\n        this.trailPathStyle = {\n            strokeDasharray: `${len - gapDegree}px ${len}px`,\n            strokeDashoffset: `-${gapDegree / 2}px`,\n            transition: 'stroke-dashoffset .3s ease 0s, stroke-dasharray .3s ease 0s, stroke .3s'\n        };\n        // Calculate styles for each path.\n        this.progressCirclePath = values\n            .map((value, index) => {\n            const isSuccessPercent = values.length === 2 && index === 0;\n            return {\n                stroke: this.isGradient && !isSuccessPercent ? `url(#gradient-${this.gradientId})` : null,\n                strokePathStyle: {\n                    stroke: !this.isGradient ? (isSuccessPercent ? statusColorMap.get('success') : this.nzStrokeColor) : null,\n                    transition: 'stroke-dashoffset .3s ease 0s, stroke-dasharray .3s ease 0s, stroke .3s, stroke-width .06s ease .3s',\n                    strokeDasharray: `${((value || 0) / 100) * (len - gapDegree)}px ${len}px`,\n                    strokeDashoffset: `-${gapDegree / 2}px`\n                }\n            };\n        })\n            .reverse();\n    }\n    setStrokeColor() {\n        const color = this.nzStrokeColor;\n        const isGradient = (this.isGradient = !!color && typeof color !== 'string');\n        if (isGradient && !this.isCircleStyle) {\n            this.lineGradient = handleLinearGradient(color);\n        }\n        else if (isGradient && this.isCircleStyle) {\n            this.circleGradient = handleCircleGradient(this.nzStrokeColor);\n        }\n        else {\n            this.lineGradient = null;\n            this.circleGradient = [];\n        }\n    }\n}\nNzProgressComponent.ɵfac = function NzProgressComponent_Factory(t) { return new (t || NzProgressComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NzConfigService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8)); };\nNzProgressComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NzProgressComponent, selectors: [[\"nz-progress\"]], inputs: { nzShowInfo: \"nzShowInfo\", nzWidth: \"nzWidth\", nzStrokeColor: \"nzStrokeColor\", nzSize: \"nzSize\", nzPercent: \"nzPercent\", nzStrokeWidth: \"nzStrokeWidth\", nzGapDegree: \"nzGapDegree\", nzType: \"nzType\", nzGapPosition: \"nzGapPosition\", nzStrokeLinecap: \"nzStrokeLinecap\", nzSteps: \"nzSteps\", nzFormat: \"nzFormat\", nzSuccessPercent: \"nzSuccessPercent\", nzStatus: \"nzStatus\" }, exportAs: [\"nzProgress\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 5, vars: 15, consts: [[\"progressInfoTemplate\", \"\"], [3, \"ngClass\"], [4, \"ngIf\"], [\"class\", \"ant-progress-inner\", 3, \"width\", \"height\", \"fontSize\", \"ant-progress-circle-gradient\", 4, \"ngIf\"], [\"class\", \"ant-progress-text\", 4, \"ngIf\"], [1, \"ant-progress-text\"], [4, \"ngIf\", \"ngIfElse\"], [\"formatTemplate\", \"\"], [\"nz-icon\", \"\", 3, \"nzType\"], [4, \"nzStringTemplateOutlet\", \"nzStringTemplateOutletContext\"], [\"class\", \"ant-progress-steps-outer\", 4, \"ngIf\"], [\"class\", \"ant-progress-outer\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"], [1, \"ant-progress-outer\"], [1, \"ant-progress-inner\"], [1, \"ant-progress-bg\"], [\"class\", \"ant-progress-success-bg\", 3, \"width\", \"border-radius\", \"height\", 4, \"ngIf\"], [1, \"ant-progress-success-bg\"], [1, \"ant-progress-steps-outer\"], [\"class\", \"ant-progress-steps-item\", 3, \"ngStyle\", 4, \"ngFor\", \"ngForOf\"], [1, \"ant-progress-steps-item\", 3, \"ngStyle\"], [\"viewBox\", \"0 0 100 100\", 1, \"ant-progress-circle\"], [\"stroke\", \"#f3f3f3\", \"fill-opacity\", \"0\", 1, \"ant-progress-circle-trail\", 3, \"ngStyle\"], [\"class\", \"ant-progress-circle-path\", \"fill-opacity\", \"0\", 3, \"ngStyle\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"x1\", \"100%\", \"y1\", \"0%\", \"x2\", \"0%\", \"y2\", \"0%\", 3, \"id\"], [4, \"ngFor\", \"ngForOf\"], [\"fill-opacity\", \"0\", 1, \"ant-progress-circle-path\", 3, \"ngStyle\"]], template: function NzProgressComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NzProgressComponent_ng_template_0_Template, 1, 1, \"ng-template\", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(3, NzProgressComponent_div_3_Template, 3, 2, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(4, NzProgressComponent_div_4_Template, 6, 15, \"div\", 3);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"ant-progress-line\", ctx.nzType == \"line\")(\"ant-progress-small\", ctx.nzSize == \"small\")(\"ant-progress-show-info\", ctx.nzShowInfo)(\"ant-progress-circle\", ctx.isCircleStyle)(\"ant-progress-steps\", ctx.isSteps)(\"ant-progress-rtl\", ctx.dir === \"rtl\");\n        ɵngcc0.ɵɵproperty(\"ngClass\", \"ant-progress ant-progress-status-\" + ctx.status);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzType === \"line\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isCircleStyle);\n    } }, directives: [ɵngcc3.NgClass, ɵngcc3.NgIf, ɵngcc4.NzIconDirective, ɵngcc5.NzStringTemplateOutletDirective, ɵngcc3.NgTemplateOutlet, ɵngcc3.NgForOf, ɵngcc3.NgStyle], encapsulation: 2, changeDetection: 0 });\nNzProgressComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: NzConfigService },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nNzProgressComponent.propDecorators = {\n    nzShowInfo: [{ type: Input }],\n    nzWidth: [{ type: Input }],\n    nzStrokeColor: [{ type: Input }],\n    nzSize: [{ type: Input }],\n    nzFormat: [{ type: Input }],\n    nzSuccessPercent: [{ type: Input }],\n    nzPercent: [{ type: Input }],\n    nzStrokeWidth: [{ type: Input }],\n    nzGapDegree: [{ type: Input }],\n    nzStatus: [{ type: Input }],\n    nzType: [{ type: Input }],\n    nzGapPosition: [{ type: Input }],\n    nzStrokeLinecap: [{ type: Input }],\n    nzSteps: [{ type: Input }]\n};\n__decorate([\n    WithConfig(),\n    __metadata(\"design:type\", Boolean)\n], NzProgressComponent.prototype, \"nzShowInfo\", void 0);\n__decorate([\n    WithConfig(),\n    __metadata(\"design:type\", Object)\n], NzProgressComponent.prototype, \"nzStrokeColor\", void 0);\n__decorate([\n    WithConfig(),\n    __metadata(\"design:type\", String)\n], NzProgressComponent.prototype, \"nzSize\", void 0);\n__decorate([\n    InputNumber(),\n    __metadata(\"design:type\", Number)\n], NzProgressComponent.prototype, \"nzSuccessPercent\", void 0);\n__decorate([\n    InputNumber(),\n    __metadata(\"design:type\", Number)\n], NzProgressComponent.prototype, \"nzPercent\", void 0);\n__decorate([\n    WithConfig(),\n    InputNumber(),\n    __metadata(\"design:type\", Number)\n], NzProgressComponent.prototype, \"nzStrokeWidth\", void 0);\n__decorate([\n    WithConfig(),\n    InputNumber(),\n    __metadata(\"design:type\", Number)\n], NzProgressComponent.prototype, \"nzGapDegree\", void 0);\n__decorate([\n    WithConfig(),\n    __metadata(\"design:type\", String)\n], NzProgressComponent.prototype, \"nzGapPosition\", void 0);\n__decorate([\n    WithConfig(),\n    __metadata(\"design:type\", String)\n], NzProgressComponent.prototype, \"nzStrokeLinecap\", void 0);\n__decorate([\n    InputNumber(),\n    __metadata(\"design:type\", Number)\n], NzProgressComponent.prototype, \"nzSteps\", void 0);\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzProgressComponent, [{\n        type: Component,\n        args: [{\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                selector: 'nz-progress',\n                exportAs: 'nzProgress',\n                preserveWhitespaces: false,\n                template: `\n    <ng-template #progressInfoTemplate>\n      <span class=\"ant-progress-text\" *ngIf=\"nzShowInfo\">\n        <ng-container *ngIf=\"(status === 'exception' || status === 'success') && !nzFormat; else formatTemplate\">\n          <i nz-icon [nzType]=\"icon\"></i>\n        </ng-container>\n        <ng-template #formatTemplate>\n          <ng-container *nzStringTemplateOutlet=\"formatter; context: { $implicit: nzPercent }; let formatter\">\n            {{ formatter(nzPercent) }}\n          </ng-container>\n        </ng-template>\n      </span>\n    </ng-template>\n\n    <div\n      [ngClass]=\"'ant-progress ant-progress-status-' + status\"\n      [class.ant-progress-line]=\"nzType == 'line'\"\n      [class.ant-progress-small]=\"nzSize == 'small'\"\n      [class.ant-progress-show-info]=\"nzShowInfo\"\n      [class.ant-progress-circle]=\"isCircleStyle\"\n      [class.ant-progress-steps]=\"isSteps\"\n      [class.ant-progress-rtl]=\"dir === 'rtl'\"\n    >\n      <!-- line progress -->\n      <div *ngIf=\"nzType === 'line'\">\n        <!-- normal line style -->\n        <ng-container *ngIf=\"!isSteps\">\n          <div class=\"ant-progress-outer\" *ngIf=\"!isSteps\">\n            <div class=\"ant-progress-inner\">\n              <div\n                class=\"ant-progress-bg\"\n                [style.width.%]=\"nzPercent\"\n                [style.border-radius]=\"nzStrokeLinecap === 'round' ? '100px' : '0'\"\n                [style.background]=\"!isGradient ? nzStrokeColor : null\"\n                [style.background-image]=\"isGradient ? lineGradient : null\"\n                [style.height.px]=\"strokeWidth\"\n              ></div>\n              <div\n                *ngIf=\"nzSuccessPercent || nzSuccessPercent === 0\"\n                class=\"ant-progress-success-bg\"\n                [style.width.%]=\"nzSuccessPercent\"\n                [style.border-radius]=\"nzStrokeLinecap === 'round' ? '100px' : '0'\"\n                [style.height.px]=\"strokeWidth\"\n              ></div>\n            </div>\n          </div>\n          <ng-template [ngTemplateOutlet]=\"progressInfoTemplate\"></ng-template>\n        </ng-container>\n        <!-- step style -->\n        <div class=\"ant-progress-steps-outer\" *ngIf=\"isSteps\">\n          <div *ngFor=\"let step of steps; let i = index\" class=\"ant-progress-steps-item\" [ngStyle]=\"step\"></div>\n          <ng-template [ngTemplateOutlet]=\"progressInfoTemplate\"></ng-template>\n        </div>\n      </div>\n\n      <!-- circle / dashboard progress -->\n      <div\n        [style.width.px]=\"this.nzWidth\"\n        [style.height.px]=\"this.nzWidth\"\n        [style.fontSize.px]=\"this.nzWidth * 0.15 + 6\"\n        class=\"ant-progress-inner\"\n        [class.ant-progress-circle-gradient]=\"isGradient\"\n        *ngIf=\"isCircleStyle\"\n      >\n        <svg class=\"ant-progress-circle \" viewBox=\"0 0 100 100\">\n          <defs *ngIf=\"isGradient\">\n            <linearGradient [id]=\"'gradient-' + gradientId\" x1=\"100%\" y1=\"0%\" x2=\"0%\" y2=\"0%\">\n              <stop *ngFor=\"let i of circleGradient\" [attr.offset]=\"i.offset\" [attr.stop-color]=\"i.color\"></stop>\n            </linearGradient>\n          </defs>\n          <path\n            class=\"ant-progress-circle-trail\"\n            stroke=\"#f3f3f3\"\n            fill-opacity=\"0\"\n            [attr.stroke-width]=\"strokeWidth\"\n            [attr.d]=\"pathString\"\n            [ngStyle]=\"trailPathStyle\"\n          ></path>\n          <path\n            *ngFor=\"let p of progressCirclePath; trackBy: trackByFn\"\n            class=\"ant-progress-circle-path\"\n            fill-opacity=\"0\"\n            [attr.d]=\"pathString\"\n            [attr.stroke-linecap]=\"nzStrokeLinecap\"\n            [attr.stroke]=\"p.stroke\"\n            [attr.stroke-width]=\"nzPercent ? strokeWidth : 0\"\n            [ngStyle]=\"p.strokePathStyle\"\n          ></path>\n        </svg>\n        <ng-template [ngTemplateOutlet]=\"progressInfoTemplate\"></ng-template>\n      </div>\n    </div>\n  `\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.NzConfigService }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { nzShowInfo: [{\n            type: Input\n        }], nzWidth: [{\n            type: Input\n        }], nzStrokeColor: [{\n            type: Input\n        }], nzSize: [{\n            type: Input\n        }], nzPercent: [{\n            type: Input\n        }], nzStrokeWidth: [{\n            type: Input\n        }], nzGapDegree: [{\n            type: Input\n        }], nzType: [{\n            type: Input\n        }], nzGapPosition: [{\n            type: Input\n        }], nzStrokeLinecap: [{\n            type: Input\n        }], nzSteps: [{\n            type: Input\n        }], nzFormat: [{\n            type: Input\n        }], nzSuccessPercent: [{\n            type: Input\n        }], nzStatus: [{\n            type: Input\n        }] }); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzProgressModule {\n}\nNzProgressModule.ɵfac = function NzProgressModule_Factory(t) { return new (t || NzProgressModule)(); };\nNzProgressModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NzProgressModule });\nNzProgressModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[BidiModule, CommonModule, NzIconModule, NzOutletModule]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzProgressModule, [{\n        type: NgModule,\n        args: [{\n                exports: [NzProgressComponent],\n                declarations: [NzProgressComponent],\n                imports: [BidiModule, CommonModule, NzIconModule, NzOutletModule]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzProgressModule, { declarations: function () { return [NzProgressComponent]; }, imports: function () { return [BidiModule, CommonModule, NzIconModule, NzOutletModule]; }, exports: function () { return [NzProgressComponent]; } }); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzProgressComponent, NzProgressModule };\n\n//# sourceMappingURL=ng-zorro-antd-progress.js.map"]},"metadata":{},"sourceType":"module"}