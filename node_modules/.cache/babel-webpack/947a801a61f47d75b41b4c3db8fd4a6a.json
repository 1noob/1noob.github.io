{"ast":null,"code":"import _toConsumableArray from \"/Users/mac/WebstormProjects/github-page/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/mac/WebstormProjects/github-page/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mac/WebstormProjects/github-page/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { CommonModule } from '@angular/common';\nimport { Pipe, NgModule } from '@angular/core';\nimport { sum, isNumberFinite, toDecimal, isNil } from 'ng-zorro-antd/core/util';\nimport { DomSanitizer } from '@angular/platform-browser';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/platform-browser';\n\nvar NzAggregatePipe = /*#__PURE__*/function () {\n  function NzAggregatePipe() {\n    _classCallCheck(this, NzAggregatePipe);\n  }\n\n  _createClass(NzAggregatePipe, [{\n    key: \"transform\",\n    value: function transform(value, method) {\n      if (!Array.isArray(value)) {\n        return value;\n      }\n\n      if (value.length === 0) {\n        return undefined;\n      }\n\n      switch (method) {\n        case 'sum':\n          return sum(value);\n\n        case 'avg':\n          return sum(value) / value.length;\n\n        case 'max':\n          return Math.max.apply(Math, _toConsumableArray(value));\n\n        case 'min':\n          return Math.min.apply(Math, _toConsumableArray(value));\n\n        default:\n          throw Error(\"Invalid Pipe Arguments: Aggregate pipe doesn't support this type\");\n      }\n    }\n  }]);\n\n  return NzAggregatePipe;\n}();\n\nNzAggregatePipe.ɵfac = function NzAggregatePipe_Factory(t) {\n  return new (t || NzAggregatePipe)();\n};\n\nNzAggregatePipe.ɵpipe = /*@__PURE__*/ɵngcc0.ɵɵdefinePipe({\n  name: \"nzAggregate\",\n  type: NzAggregatePipe,\n  pure: true\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzAggregatePipe, [{\n    type: Pipe,\n    args: [{\n      name: 'nzAggregate'\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzBytesPipe = /*#__PURE__*/function () {\n  function NzBytesPipe() {\n    _classCallCheck(this, NzBytesPipe);\n  }\n\n  _createClass(NzBytesPipe, [{\n    key: \"transform\",\n    value: function transform(input) {\n      var decimal = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var from = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'B';\n      var to = arguments.length > 3 ? arguments[3] : undefined;\n\n      if (!(isNumberFinite(input) && isNumberFinite(decimal) && decimal % 1 === 0 && decimal >= 0)) {\n        return input;\n      }\n\n      var bytes = input;\n      var unit = from;\n\n      while (unit !== 'B') {\n        bytes *= 1024;\n        unit = NzBytesPipe.formats[unit].prev;\n      }\n\n      if (to) {\n        var format = NzBytesPipe.formats[to];\n        var result = toDecimal(NzBytesPipe.calculateResult(format, bytes), decimal);\n        return NzBytesPipe.formatResult(result, to);\n      }\n\n      for (var key in NzBytesPipe.formats) {\n        if (NzBytesPipe.formats.hasOwnProperty(key)) {\n          var _format = NzBytesPipe.formats[key];\n\n          if (bytes < _format.max) {\n            var _result = toDecimal(NzBytesPipe.calculateResult(_format, bytes), decimal);\n\n            return NzBytesPipe.formatResult(_result, key);\n          }\n        }\n      }\n    }\n  }], [{\n    key: \"formatResult\",\n    value: function formatResult(result, unit) {\n      return \"\".concat(result, \" \").concat(unit);\n    }\n  }, {\n    key: \"calculateResult\",\n    value: function calculateResult(format, bytes) {\n      var prev = format.prev ? NzBytesPipe.formats[format.prev] : undefined;\n      return prev ? bytes / prev.max : bytes;\n    }\n  }]);\n\n  return NzBytesPipe;\n}();\n\nNzBytesPipe.ɵfac = function NzBytesPipe_Factory(t) {\n  return new (t || NzBytesPipe)();\n};\n\nNzBytesPipe.ɵpipe = /*@__PURE__*/ɵngcc0.ɵɵdefinePipe({\n  name: \"nzBytes\",\n  type: NzBytesPipe,\n  pure: true\n});\nNzBytesPipe.formats = {\n  B: {\n    max: 1024\n  },\n  kB: {\n    max: Math.pow(1024, 2),\n    prev: 'B'\n  },\n  KB: {\n    max: Math.pow(1024, 2),\n    prev: 'B'\n  },\n  MB: {\n    max: Math.pow(1024, 3),\n    prev: 'kB'\n  },\n  GB: {\n    max: Math.pow(1024, 4),\n    prev: 'MB'\n  },\n  TB: {\n    max: Number.MAX_SAFE_INTEGER,\n    prev: 'GB'\n  }\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzBytesPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'nzBytes'\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzToCssUnitPipe = /*#__PURE__*/function () {\n  function NzToCssUnitPipe() {\n    _classCallCheck(this, NzToCssUnitPipe);\n  }\n\n  _createClass(NzToCssUnitPipe, [{\n    key: \"transform\",\n    value: function transform(value) {\n      var defaultUnit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'px';\n      var absoluteLengthUnit = ['cm', 'mm', 'Q', 'in', 'pc', 'pt', 'px'];\n      var relativeLengthUnit = ['em', 'ex', 'ch', 'rem', '1h', 'vw', 'vh', 'vmin', 'vmax'];\n      var percentagesUnit = ['%'];\n      var listOfUnit = [].concat(absoluteLengthUnit, relativeLengthUnit, percentagesUnit);\n      var unit = 'px';\n\n      if (listOfUnit.some(function (u) {\n        return u === defaultUnit;\n      })) {\n        unit = defaultUnit;\n      }\n\n      return typeof value === 'number' ? \"\".concat(value).concat(unit) : \"\".concat(value);\n    }\n  }]);\n\n  return NzToCssUnitPipe;\n}();\n\nNzToCssUnitPipe.ɵfac = function NzToCssUnitPipe_Factory(t) {\n  return new (t || NzToCssUnitPipe)();\n};\n\nNzToCssUnitPipe.ɵpipe = /*@__PURE__*/ɵngcc0.ɵɵdefinePipe({\n  name: \"nzToCssUnit\",\n  type: NzToCssUnitPipe,\n  pure: true\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzToCssUnitPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'nzToCssUnit'\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzEllipsisPipe = /*#__PURE__*/function () {\n  function NzEllipsisPipe() {\n    _classCallCheck(this, NzEllipsisPipe);\n  }\n\n  _createClass(NzEllipsisPipe, [{\n    key: \"transform\",\n    value: function transform(value, length) {\n      var suffix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n\n      if (typeof value !== 'string') {\n        return value;\n      }\n\n      var len = typeof length === 'undefined' ? value.length : length;\n\n      if (value.length <= len) {\n        return value;\n      }\n\n      return value.substring(0, len) + suffix;\n    }\n  }]);\n\n  return NzEllipsisPipe;\n}();\n\nNzEllipsisPipe.ɵfac = function NzEllipsisPipe_Factory(t) {\n  return new (t || NzEllipsisPipe)();\n};\n\nNzEllipsisPipe.ɵpipe = /*@__PURE__*/ɵngcc0.ɵɵdefinePipe({\n  name: \"nzEllipsis\",\n  type: NzEllipsisPipe,\n  pure: true\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzEllipsisPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'nzEllipsis'\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzSafeNullPipe = /*#__PURE__*/function () {\n  function NzSafeNullPipe() {\n    _classCallCheck(this, NzSafeNullPipe);\n  }\n\n  _createClass(NzSafeNullPipe, [{\n    key: \"transform\",\n    value: function transform(value) {\n      var replace = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n      if (isNil(value)) {\n        return replace;\n      }\n\n      return value;\n    }\n  }]);\n\n  return NzSafeNullPipe;\n}();\n\nNzSafeNullPipe.ɵfac = function NzSafeNullPipe_Factory(t) {\n  return new (t || NzSafeNullPipe)();\n};\n\nNzSafeNullPipe.ɵpipe = /*@__PURE__*/ɵngcc0.ɵɵdefinePipe({\n  name: \"nzSafeNull\",\n  type: NzSafeNullPipe,\n  pure: true\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzSafeNullPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'nzSafeNull'\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzSanitizerPipe = /*#__PURE__*/function () {\n  function NzSanitizerPipe(sanitizer) {\n    _classCallCheck(this, NzSanitizerPipe);\n\n    this.sanitizer = sanitizer;\n  }\n\n  _createClass(NzSanitizerPipe, [{\n    key: \"transform\",\n    value: function transform(value) {\n      var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'html';\n\n      switch (type) {\n        case 'html':\n          return this.sanitizer.bypassSecurityTrustHtml(value);\n\n        case 'style':\n          return this.sanitizer.bypassSecurityTrustStyle(value);\n\n        case 'url':\n          return this.sanitizer.bypassSecurityTrustUrl(value);\n\n        case 'resourceUrl':\n          return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n\n        default:\n          throw new Error(\"Invalid safe type specified\");\n      }\n    }\n  }]);\n\n  return NzSanitizerPipe;\n}();\n\nNzSanitizerPipe.ɵfac = function NzSanitizerPipe_Factory(t) {\n  return new (t || NzSanitizerPipe)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DomSanitizer, 16));\n};\n\nNzSanitizerPipe.ɵpipe = /*@__PURE__*/ɵngcc0.ɵɵdefinePipe({\n  name: \"nzSanitizer\",\n  type: NzSanitizerPipe,\n  pure: true\n});\n\nNzSanitizerPipe.ctorParameters = function () {\n  return [{\n    type: DomSanitizer\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzSanitizerPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'nzSanitizer'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc1.DomSanitizer\n    }];\n  }, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzTrimPipe = /*#__PURE__*/function () {\n  function NzTrimPipe() {\n    _classCallCheck(this, NzTrimPipe);\n  }\n\n  _createClass(NzTrimPipe, [{\n    key: \"transform\",\n    value: // TODO(chensimeng) trimEnd, trimStart\n    function transform(text) {\n      return text.trim();\n    }\n  }]);\n\n  return NzTrimPipe;\n}();\n\nNzTrimPipe.ɵfac = function NzTrimPipe_Factory(t) {\n  return new (t || NzTrimPipe)();\n};\n\nNzTrimPipe.ɵpipe = /*@__PURE__*/ɵngcc0.ɵɵdefinePipe({\n  name: \"nzTrim\",\n  type: NzTrimPipe,\n  pure: true\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzTrimPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'nzTrim'\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar pipes = [NzToCssUnitPipe, NzSafeNullPipe, NzSanitizerPipe, NzTrimPipe, NzBytesPipe, NzAggregatePipe, NzEllipsisPipe];\n\nvar NzPipesModule = function NzPipesModule() {\n  _classCallCheck(this, NzPipesModule);\n};\n\nNzPipesModule.ɵfac = function NzPipesModule_Factory(t) {\n  return new (t || NzPipesModule)();\n};\n\nNzPipesModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: NzPipesModule\n});\nNzPipesModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzPipesModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      exports: [pipes],\n      declarations: [pipes]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzPipesModule, {\n    declarations: function declarations() {\n      return [NzToCssUnitPipe, NzSafeNullPipe, NzSanitizerPipe, NzTrimPipe, NzBytesPipe, NzAggregatePipe, NzEllipsisPipe];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [NzToCssUnitPipe, NzSafeNullPipe, NzSanitizerPipe, NzTrimPipe, NzBytesPipe, NzAggregatePipe, NzEllipsisPipe];\n    }\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzAggregatePipe, NzBytesPipe, NzEllipsisPipe, NzPipesModule, NzSafeNullPipe, NzSanitizerPipe, NzToCssUnitPipe, NzTrimPipe }; //# sourceMappingURL=ng-zorro-antd-pipes.js.map","map":{"version":3,"sources":["/Users/mac/WebstormProjects/github-page/node_modules/ng-zorro-antd/__ivy_ngcc__/fesm2015/ng-zorro-antd-pipes.js"],"names":["CommonModule","Pipe","NgModule","sum","isNumberFinite","toDecimal","isNil","DomSanitizer","ɵngcc0","ɵngcc1","NzAggregatePipe","value","method","Array","isArray","length","undefined","Math","max","min","Error","ɵfac","NzAggregatePipe_Factory","t","ɵpipe","ɵɵdefinePipe","name","type","pure","ngDevMode","ɵsetClassMetadata","args","NzBytesPipe","input","decimal","from","to","bytes","unit","formats","prev","format","result","calculateResult","formatResult","key","hasOwnProperty","NzBytesPipe_Factory","B","kB","pow","KB","MB","GB","TB","Number","MAX_SAFE_INTEGER","NzToCssUnitPipe","defaultUnit","absoluteLengthUnit","relativeLengthUnit","percentagesUnit","listOfUnit","some","u","NzToCssUnitPipe_Factory","NzEllipsisPipe","suffix","len","substring","NzEllipsisPipe_Factory","NzSafeNullPipe","replace","NzSafeNullPipe_Factory","NzSanitizerPipe","sanitizer","bypassSecurityTrustHtml","bypassSecurityTrustStyle","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","NzSanitizerPipe_Factory","ɵɵdirectiveInject","ctorParameters","NzTrimPipe","text","trim","NzTrimPipe_Factory","pipes","NzPipesModule","NzPipesModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations","ngJitMode","ɵɵsetNgModuleScope"],"mappings":"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","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { Pipe, NgModule } from '@angular/core';\nimport { sum, isNumberFinite, toDecimal, isNil } from 'ng-zorro-antd/core/util';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/platform-browser';\nclass NzAggregatePipe {\n    transform(value, method) {\n        if (!Array.isArray(value)) {\n            return value;\n        }\n        if (value.length === 0) {\n            return undefined;\n        }\n        switch (method) {\n            case 'sum':\n                return sum(value);\n            case 'avg':\n                return sum(value) / value.length;\n            case 'max':\n                return Math.max(...value);\n            case 'min':\n                return Math.min(...value);\n            default:\n                throw Error(`Invalid Pipe Arguments: Aggregate pipe doesn't support this type`);\n        }\n    }\n}\nNzAggregatePipe.ɵfac = function NzAggregatePipe_Factory(t) { return new (t || NzAggregatePipe)(); };\nNzAggregatePipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: \"nzAggregate\", type: NzAggregatePipe, pure: true });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzAggregatePipe, [{\n        type: Pipe,\n        args: [{\n                name: 'nzAggregate'\n            }]\n    }], null, null); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzBytesPipe {\n    transform(input, decimal = 0, from = 'B', to) {\n        if (!(isNumberFinite(input) && isNumberFinite(decimal) && decimal % 1 === 0 && decimal >= 0)) {\n            return input;\n        }\n        let bytes = input;\n        let unit = from;\n        while (unit !== 'B') {\n            bytes *= 1024;\n            unit = NzBytesPipe.formats[unit].prev;\n        }\n        if (to) {\n            const format = NzBytesPipe.formats[to];\n            const result = toDecimal(NzBytesPipe.calculateResult(format, bytes), decimal);\n            return NzBytesPipe.formatResult(result, to);\n        }\n        for (const key in NzBytesPipe.formats) {\n            if (NzBytesPipe.formats.hasOwnProperty(key)) {\n                const format = NzBytesPipe.formats[key];\n                if (bytes < format.max) {\n                    const result = toDecimal(NzBytesPipe.calculateResult(format, bytes), decimal);\n                    return NzBytesPipe.formatResult(result, key);\n                }\n            }\n        }\n    }\n    static formatResult(result, unit) {\n        return `${result} ${unit}`;\n    }\n    static calculateResult(format, bytes) {\n        const prev = format.prev ? NzBytesPipe.formats[format.prev] : undefined;\n        return prev ? bytes / prev.max : bytes;\n    }\n}\nNzBytesPipe.ɵfac = function NzBytesPipe_Factory(t) { return new (t || NzBytesPipe)(); };\nNzBytesPipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: \"nzBytes\", type: NzBytesPipe, pure: true });\nNzBytesPipe.formats = {\n    B: { max: 1024 },\n    kB: { max: Math.pow(1024, 2), prev: 'B' },\n    KB: { max: Math.pow(1024, 2), prev: 'B' },\n    MB: { max: Math.pow(1024, 3), prev: 'kB' },\n    GB: { max: Math.pow(1024, 4), prev: 'MB' },\n    TB: { max: Number.MAX_SAFE_INTEGER, prev: 'GB' }\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzBytesPipe, [{\n        type: Pipe,\n        args: [{\n                name: 'nzBytes'\n            }]\n    }], null, null); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzToCssUnitPipe {\n    transform(value, defaultUnit = 'px') {\n        const absoluteLengthUnit = ['cm', 'mm', 'Q', 'in', 'pc', 'pt', 'px'];\n        const relativeLengthUnit = ['em', 'ex', 'ch', 'rem', '1h', 'vw', 'vh', 'vmin', 'vmax'];\n        const percentagesUnit = ['%'];\n        const listOfUnit = [...absoluteLengthUnit, ...relativeLengthUnit, ...percentagesUnit];\n        let unit = 'px';\n        if (listOfUnit.some(u => u === defaultUnit)) {\n            unit = defaultUnit;\n        }\n        return typeof value === 'number' ? `${value}${unit}` : `${value}`;\n    }\n}\nNzToCssUnitPipe.ɵfac = function NzToCssUnitPipe_Factory(t) { return new (t || NzToCssUnitPipe)(); };\nNzToCssUnitPipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: \"nzToCssUnit\", type: NzToCssUnitPipe, pure: true });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzToCssUnitPipe, [{\n        type: Pipe,\n        args: [{\n                name: 'nzToCssUnit'\n            }]\n    }], null, null); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzEllipsisPipe {\n    transform(value, length, suffix = '') {\n        if (typeof value !== 'string') {\n            return value;\n        }\n        const len = typeof length === 'undefined' ? value.length : length;\n        if (value.length <= len) {\n            return value;\n        }\n        return value.substring(0, len) + suffix;\n    }\n}\nNzEllipsisPipe.ɵfac = function NzEllipsisPipe_Factory(t) { return new (t || NzEllipsisPipe)(); };\nNzEllipsisPipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: \"nzEllipsis\", type: NzEllipsisPipe, pure: true });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzEllipsisPipe, [{\n        type: Pipe,\n        args: [{\n                name: 'nzEllipsis'\n            }]\n    }], null, null); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzSafeNullPipe {\n    transform(value, replace = '') {\n        if (isNil(value)) {\n            return replace;\n        }\n        return value;\n    }\n}\nNzSafeNullPipe.ɵfac = function NzSafeNullPipe_Factory(t) { return new (t || NzSafeNullPipe)(); };\nNzSafeNullPipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: \"nzSafeNull\", type: NzSafeNullPipe, pure: true });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzSafeNullPipe, [{\n        type: Pipe,\n        args: [{\n                name: 'nzSafeNull'\n            }]\n    }], null, null); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzSanitizerPipe {\n    constructor(sanitizer) {\n        this.sanitizer = sanitizer;\n    }\n    transform(value, type = 'html') {\n        switch (type) {\n            case 'html':\n                return this.sanitizer.bypassSecurityTrustHtml(value);\n            case 'style':\n                return this.sanitizer.bypassSecurityTrustStyle(value);\n            case 'url':\n                return this.sanitizer.bypassSecurityTrustUrl(value);\n            case 'resourceUrl':\n                return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n            default:\n                throw new Error(`Invalid safe type specified`);\n        }\n    }\n}\nNzSanitizerPipe.ɵfac = function NzSanitizerPipe_Factory(t) { return new (t || NzSanitizerPipe)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DomSanitizer, 16)); };\nNzSanitizerPipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: \"nzSanitizer\", type: NzSanitizerPipe, pure: true });\nNzSanitizerPipe.ctorParameters = () => [\n    { type: DomSanitizer }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzSanitizerPipe, [{\n        type: Pipe,\n        args: [{\n                name: 'nzSanitizer'\n            }]\n    }], function () { return [{ type: ɵngcc1.DomSanitizer }]; }, null); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTrimPipe {\n    // TODO(chensimeng) trimEnd, trimStart\n    transform(text) {\n        return text.trim();\n    }\n}\nNzTrimPipe.ɵfac = function NzTrimPipe_Factory(t) { return new (t || NzTrimPipe)(); };\nNzTrimPipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: \"nzTrim\", type: NzTrimPipe, pure: true });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzTrimPipe, [{\n        type: Pipe,\n        args: [{\n                name: 'nzTrim'\n            }]\n    }], null, null); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst pipes = [NzToCssUnitPipe, NzSafeNullPipe, NzSanitizerPipe, NzTrimPipe, NzBytesPipe, NzAggregatePipe, NzEllipsisPipe];\nclass NzPipesModule {\n}\nNzPipesModule.ɵfac = function NzPipesModule_Factory(t) { return new (t || NzPipesModule)(); };\nNzPipesModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NzPipesModule });\nNzPipesModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzPipesModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                exports: [pipes],\n                declarations: [pipes]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzPipesModule, { declarations: function () { return [NzToCssUnitPipe, NzSafeNullPipe, NzSanitizerPipe, NzTrimPipe, NzBytesPipe, NzAggregatePipe, NzEllipsisPipe]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NzToCssUnitPipe, NzSafeNullPipe, NzSanitizerPipe, NzTrimPipe, NzBytesPipe, NzAggregatePipe, NzEllipsisPipe]; } }); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzAggregatePipe, NzBytesPipe, NzEllipsisPipe, NzPipesModule, NzSafeNullPipe, NzSanitizerPipe, NzToCssUnitPipe, NzTrimPipe };\n\n//# sourceMappingURL=ng-zorro-antd-pipes.js.map"]},"metadata":{},"sourceType":"module"}