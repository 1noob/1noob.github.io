{"ast":null,"code":"import _classCallCheck from \"/Users/mac/WebstormProjects/github-page/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mac/WebstormProjects/github-page/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _slicedToArray from \"/Users/mac/WebstormProjects/github-page/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { startOfWeek, startOfMonth, setYear as _setYear, addYears as _addYears, setMonth as _setMonth, addMonths as _addMonths, setDay as _setDay, isSameDay, isSameSecond, isSameMinute, isSameHour, isSameMonth, isSameYear, differenceInCalendarDays, differenceInSeconds, differenceInMinutes, differenceInHours, differenceInCalendarMonths, differenceInCalendarYears, isToday as _isToday, isValid as _isValid, isFirstDayOfMonth as _isFirstDayOfMonth, isLastDayOfMonth as _isLastDayOfMonth } from 'date-fns';\nimport { warn } from 'ng-zorro-antd/core/logger';\nimport { getLocaleDayPeriods, FormStyle, TranslationWidth } from '@angular/common';\nimport { isNotNil } from 'ng-zorro-antd/core/util';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nfunction wrongSortOrder(rangeValue) {\n  var _rangeValue = _slicedToArray(rangeValue, 2),\n      start = _rangeValue[0],\n      end = _rangeValue[1];\n\n  return !!start && !!end && end.isBeforeDay(start);\n}\n\nfunction normalizeRangeValue(value, hasTimePicker) {\n  var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'month';\n  var activePart = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'left';\n\n  var _value = _slicedToArray(value, 2),\n      start = _value[0],\n      end = _value[1];\n\n  var newStart = start || new CandyDate();\n  var newEnd = end || (hasTimePicker ? newStart : newStart.add(1, type));\n\n  if (start && !end) {\n    newStart = start;\n    newEnd = hasTimePicker ? start : start.add(1, type);\n  } else if (!start && end) {\n    newStart = hasTimePicker ? end : end.add(-1, type);\n    newEnd = end;\n  } else if (start && end && !hasTimePicker) {\n    if (start.isSame(end, type)) {\n      newEnd = newStart.add(1, type);\n    } else {\n      if (activePart === 'left') {\n        newEnd = newStart.add(1, type);\n      } else {\n        newStart = newEnd.add(-1, type);\n      }\n    }\n  }\n\n  return [newStart, newEnd];\n}\n\nfunction cloneDate(value) {\n  if (Array.isArray(value)) {\n    return value.map(function (v) {\n      return v instanceof CandyDate ? v.clone() : null;\n    });\n  } else {\n    return value instanceof CandyDate ? value.clone() : null;\n  }\n}\n/**\n * Wrapping kind APIs for date operating and unify\n * NOTE: every new API return new CandyDate object without side effects to the former Date object\n * NOTE: most APIs are based on local time other than customized locale id (this needs tobe support in future)\n * TODO: support format() against to angular's core API\n */\n\n\nvar CandyDate = /*#__PURE__*/function () {\n  // locale: string; // Custom specified locale ID\n  function CandyDate(date) {\n    _classCallCheck(this, CandyDate);\n\n    if (date) {\n      if (date instanceof Date) {\n        this.nativeDate = date;\n      } else if (typeof date === 'string' || typeof date === 'number') {\n        warn('The string type is not recommended for date-picker, use \"Date\" type');\n        this.nativeDate = new Date(date);\n      } else {\n        throw new Error('The input date type is not supported (\"Date\" is now recommended)');\n      }\n    } else {\n      this.nativeDate = new Date();\n    }\n  }\n\n  _createClass(CandyDate, [{\n    key: \"calendarStart\",\n    value: function calendarStart(options) {\n      return new CandyDate(startOfWeek(startOfMonth(this.nativeDate), options));\n    } // ---------------------------------------------------------------------\n    // | Native shortcuts\n    // -----------------------------------------------------------------------------\\\n\n  }, {\n    key: \"getYear\",\n    value: function getYear() {\n      return this.nativeDate.getFullYear();\n    }\n  }, {\n    key: \"getMonth\",\n    value: function getMonth() {\n      return this.nativeDate.getMonth();\n    }\n  }, {\n    key: \"getDay\",\n    value: function getDay() {\n      return this.nativeDate.getDay();\n    }\n  }, {\n    key: \"getTime\",\n    value: function getTime() {\n      return this.nativeDate.getTime();\n    }\n  }, {\n    key: \"getDate\",\n    value: function getDate() {\n      return this.nativeDate.getDate();\n    }\n  }, {\n    key: \"getHours\",\n    value: function getHours() {\n      return this.nativeDate.getHours();\n    }\n  }, {\n    key: \"getMinutes\",\n    value: function getMinutes() {\n      return this.nativeDate.getMinutes();\n    }\n  }, {\n    key: \"getSeconds\",\n    value: function getSeconds() {\n      return this.nativeDate.getSeconds();\n    }\n  }, {\n    key: \"getMilliseconds\",\n    value: function getMilliseconds() {\n      return this.nativeDate.getMilliseconds();\n    } // ---------------------------------------------------------------------\n    // | New implementing APIs\n    // ---------------------------------------------------------------------\n\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new CandyDate(new Date(this.nativeDate));\n    }\n  }, {\n    key: \"setHms\",\n    value: function setHms(hour, minute, second) {\n      var newDate = new Date(this.nativeDate.setHours(hour, minute, second));\n      return new CandyDate(newDate);\n    }\n  }, {\n    key: \"setYear\",\n    value: function setYear(year) {\n      return new CandyDate(_setYear(this.nativeDate, year));\n    }\n  }, {\n    key: \"addYears\",\n    value: function addYears(amount) {\n      return new CandyDate(_addYears(this.nativeDate, amount));\n    } // NOTE: month starts from 0\n    // NOTE: Don't use the native API for month manipulation as it not restrict the date when it overflows, eg. (new Date('2018-7-31')).setMonth(1) will be date of 2018-3-03 instead of 2018-2-28\n\n  }, {\n    key: \"setMonth\",\n    value: function setMonth(month) {\n      return new CandyDate(_setMonth(this.nativeDate, month));\n    }\n  }, {\n    key: \"addMonths\",\n    value: function addMonths(amount) {\n      return new CandyDate(_addMonths(this.nativeDate, amount));\n    }\n  }, {\n    key: \"setDay\",\n    value: function setDay(day, options) {\n      return new CandyDate(_setDay(this.nativeDate, day, options));\n    }\n  }, {\n    key: \"setDate\",\n    value: function setDate(amount) {\n      var date = new Date(this.nativeDate);\n      date.setDate(amount);\n      return new CandyDate(date);\n    }\n  }, {\n    key: \"addDays\",\n    value: function addDays(amount) {\n      return this.setDate(this.getDate() + amount);\n    }\n  }, {\n    key: \"add\",\n    value: function add(amount, mode) {\n      switch (mode) {\n        case 'decade':\n          return this.addYears(amount * 10);\n\n        case 'year':\n          return this.addYears(amount);\n\n        case 'month':\n          return this.addMonths(amount);\n\n        default:\n          return this.addMonths(amount);\n      }\n    }\n  }, {\n    key: \"isSame\",\n    value: function isSame(date) {\n      var grain = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'day';\n      var fn;\n\n      switch (grain) {\n        case 'decade':\n          fn = function fn(pre, next) {\n            return Math.abs(pre.getFullYear() - next.getFullYear()) < 11;\n          };\n\n          break;\n\n        case 'year':\n          fn = isSameYear;\n          break;\n\n        case 'month':\n          fn = isSameMonth;\n          break;\n\n        case 'day':\n          fn = isSameDay;\n          break;\n\n        case 'hour':\n          fn = isSameHour;\n          break;\n\n        case 'minute':\n          fn = isSameMinute;\n          break;\n\n        case 'second':\n          fn = isSameSecond;\n          break;\n\n        default:\n          fn = isSameDay;\n          break;\n      }\n\n      return fn(this.nativeDate, this.toNativeDate(date));\n    }\n  }, {\n    key: \"isSameYear\",\n    value: function isSameYear(date) {\n      return this.isSame(date, 'year');\n    }\n  }, {\n    key: \"isSameMonth\",\n    value: function isSameMonth(date) {\n      return this.isSame(date, 'month');\n    }\n  }, {\n    key: \"isSameDay\",\n    value: function isSameDay(date) {\n      return this.isSame(date, 'day');\n    }\n  }, {\n    key: \"isSameHour\",\n    value: function isSameHour(date) {\n      return this.isSame(date, 'hour');\n    }\n  }, {\n    key: \"isSameMinute\",\n    value: function isSameMinute(date) {\n      return this.isSame(date, 'minute');\n    }\n  }, {\n    key: \"isSameSecond\",\n    value: function isSameSecond(date) {\n      return this.isSame(date, 'second');\n    }\n  }, {\n    key: \"isBefore\",\n    value: function isBefore(date) {\n      var grain = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'day';\n\n      if (date === null) {\n        return false;\n      }\n\n      var fn;\n\n      switch (grain) {\n        case 'year':\n          fn = differenceInCalendarYears;\n          break;\n\n        case 'month':\n          fn = differenceInCalendarMonths;\n          break;\n\n        case 'day':\n          fn = differenceInCalendarDays;\n          break;\n\n        case 'hour':\n          fn = differenceInHours;\n          break;\n\n        case 'minute':\n          fn = differenceInMinutes;\n          break;\n\n        case 'second':\n          fn = differenceInSeconds;\n          break;\n\n        default:\n          fn = differenceInCalendarDays;\n          break;\n      }\n\n      return fn(this.nativeDate, this.toNativeDate(date)) < 0;\n    }\n  }, {\n    key: \"isBeforeYear\",\n    value: function isBeforeYear(date) {\n      return this.isBefore(date, 'year');\n    }\n  }, {\n    key: \"isBeforeMonth\",\n    value: function isBeforeMonth(date) {\n      return this.isBefore(date, 'month');\n    }\n  }, {\n    key: \"isBeforeDay\",\n    value: function isBeforeDay(date) {\n      return this.isBefore(date, 'day');\n    } // Equal to today accurate to \"day\"\n\n  }, {\n    key: \"isToday\",\n    value: function isToday() {\n      return _isToday(this.nativeDate);\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid() {\n      return _isValid(this.nativeDate);\n    }\n  }, {\n    key: \"isFirstDayOfMonth\",\n    value: function isFirstDayOfMonth() {\n      return _isFirstDayOfMonth(this.nativeDate);\n    }\n  }, {\n    key: \"isLastDayOfMonth\",\n    value: function isLastDayOfMonth() {\n      return _isLastDayOfMonth(this.nativeDate);\n    }\n  }, {\n    key: \"toNativeDate\",\n    value: function toNativeDate(date) {\n      return date instanceof CandyDate ? date.nativeDate : date;\n    }\n  }]);\n\n  return CandyDate;\n}();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar timeUnits = [['Y', 1000 * 60 * 60 * 24 * 365], ['M', 1000 * 60 * 60 * 24 * 30], ['D', 1000 * 60 * 60 * 24], ['H', 1000 * 60 * 60], ['m', 1000 * 60], ['s', 1000], ['S', 1] // million seconds\n];\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nvar NgTimeParser = /*#__PURE__*/function () {\n  function NgTimeParser(format, localeId) {\n    _classCallCheck(this, NgTimeParser);\n\n    this.format = format;\n    this.localeId = localeId;\n    this.regex = null;\n    this.matchMap = {\n      hour: null,\n      minute: null,\n      second: null,\n      periodNarrow: null,\n      periodWide: null,\n      periodAbbreviated: null\n    };\n    this.genRegexp();\n  }\n\n  _createClass(NgTimeParser, [{\n    key: \"toDate\",\n    value: function toDate(str) {\n      var result = this.getTimeResult(str);\n      var time = new Date();\n\n      if (isNotNil(result === null || result === void 0 ? void 0 : result.hour)) {\n        time.setHours(result.hour);\n      }\n\n      if (isNotNil(result === null || result === void 0 ? void 0 : result.minute)) {\n        time.setMinutes(result.minute);\n      }\n\n      if (isNotNil(result === null || result === void 0 ? void 0 : result.second)) {\n        time.setSeconds(result.second);\n      }\n\n      if ((result === null || result === void 0 ? void 0 : result.period) === 1 && time.getHours() < 12) {\n        time.setHours(time.getHours() + 12);\n      }\n\n      return time;\n    }\n  }, {\n    key: \"getTimeResult\",\n    value: function getTimeResult(str) {\n      var match = this.regex.exec(str);\n      var period = null;\n\n      if (match) {\n        if (isNotNil(this.matchMap.periodNarrow)) {\n          period = getLocaleDayPeriods(this.localeId, FormStyle.Format, TranslationWidth.Narrow).indexOf(match[this.matchMap.periodNarrow + 1]);\n        }\n\n        if (isNotNil(this.matchMap.periodWide)) {\n          period = getLocaleDayPeriods(this.localeId, FormStyle.Format, TranslationWidth.Wide).indexOf(match[this.matchMap.periodWide + 1]);\n        }\n\n        if (isNotNil(this.matchMap.periodAbbreviated)) {\n          period = getLocaleDayPeriods(this.localeId, FormStyle.Format, TranslationWidth.Abbreviated).indexOf(match[this.matchMap.periodAbbreviated + 1]);\n        }\n\n        return {\n          hour: isNotNil(this.matchMap.hour) ? Number.parseInt(match[this.matchMap.hour + 1], 10) : null,\n          minute: isNotNil(this.matchMap.minute) ? Number.parseInt(match[this.matchMap.minute + 1], 10) : null,\n          second: isNotNil(this.matchMap.second) ? Number.parseInt(match[this.matchMap.second + 1], 10) : null,\n          period: period\n        };\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"genRegexp\",\n    value: function genRegexp() {\n      var _this = this;\n\n      var regexStr = this.format.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$&');\n      var hourRegex = /h{1,2}/i;\n      var minuteRegex = /m{1,2}/;\n      var secondRegex = /s{1,2}/;\n      var periodNarrow = /aaaaa/;\n      var periodWide = /aaaa/;\n      var periodAbbreviated = /a{1,3}/;\n      var hourMatch = hourRegex.exec(this.format);\n      var minuteMatch = minuteRegex.exec(this.format);\n      var secondMatch = secondRegex.exec(this.format);\n      var periodNarrowMatch = periodNarrow.exec(this.format);\n      var periodWideMatch = null;\n      var periodAbbreviatedMatch = null;\n\n      if (!periodNarrowMatch) {\n        periodWideMatch = periodWide.exec(this.format);\n      }\n\n      if (!periodWideMatch && !periodNarrowMatch) {\n        periodAbbreviatedMatch = periodAbbreviated.exec(this.format);\n      }\n\n      var matchs = [hourMatch, minuteMatch, secondMatch, periodNarrowMatch, periodWideMatch, periodAbbreviatedMatch].filter(function (m) {\n        return !!m;\n      }).sort(function (a, b) {\n        return a.index - b.index;\n      });\n      matchs.forEach(function (match, index) {\n        switch (match) {\n          case hourMatch:\n            _this.matchMap.hour = index;\n            regexStr = regexStr.replace(hourRegex, '(\\\\d{1,2})');\n            break;\n\n          case minuteMatch:\n            _this.matchMap.minute = index;\n            regexStr = regexStr.replace(minuteRegex, '(\\\\d{1,2})');\n            break;\n\n          case secondMatch:\n            _this.matchMap.second = index;\n            regexStr = regexStr.replace(secondRegex, '(\\\\d{1,2})');\n            break;\n\n          case periodNarrowMatch:\n            _this.matchMap.periodNarrow = index;\n            var periodsNarrow = getLocaleDayPeriods(_this.localeId, FormStyle.Format, TranslationWidth.Narrow).join('|');\n            regexStr = regexStr.replace(periodNarrow, \"(\".concat(periodsNarrow, \")\"));\n            break;\n\n          case periodWideMatch:\n            _this.matchMap.periodWide = index;\n            var periodsWide = getLocaleDayPeriods(_this.localeId, FormStyle.Format, TranslationWidth.Wide).join('|');\n            regexStr = regexStr.replace(periodWide, \"(\".concat(periodsWide, \")\"));\n            break;\n\n          case periodAbbreviatedMatch:\n            _this.matchMap.periodAbbreviated = index;\n            var periodsAbbreviated = getLocaleDayPeriods(_this.localeId, FormStyle.Format, TranslationWidth.Abbreviated).join('|');\n            regexStr = regexStr.replace(periodAbbreviated, \"(\".concat(periodsAbbreviated, \")\"));\n            break;\n        }\n      });\n      this.regex = new RegExp(regexStr);\n    }\n  }]);\n\n  return NgTimeParser;\n}();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { CandyDate, cloneDate, normalizeRangeValue, timeUnits, wrongSortOrder, NgTimeParser as ɵNgTimeParser }; //# sourceMappingURL=ng-zorro-antd-core-time.js.map","map":{"version":3,"sources":["/Users/mac/WebstormProjects/github-page/node_modules/ng-zorro-antd/__ivy_ngcc__/fesm2015/ng-zorro-antd-core-time.js"],"names":["startOfWeek","startOfMonth","setYear","addYears","setMonth","addMonths","setDay","isSameDay","isSameSecond","isSameMinute","isSameHour","isSameMonth","isSameYear","differenceInCalendarDays","differenceInSeconds","differenceInMinutes","differenceInHours","differenceInCalendarMonths","differenceInCalendarYears","isToday","isValid","isFirstDayOfMonth","isLastDayOfMonth","warn","getLocaleDayPeriods","FormStyle","TranslationWidth","isNotNil","wrongSortOrder","rangeValue","start","end","isBeforeDay","normalizeRangeValue","value","hasTimePicker","type","activePart","newStart","CandyDate","newEnd","add","isSame","cloneDate","Array","isArray","map","v","clone","date","Date","nativeDate","Error","options","getFullYear","getMonth","getDay","getTime","getDate","getHours","getMinutes","getSeconds","getMilliseconds","hour","minute","second","newDate","setHours","year","amount","month","day","setDate","mode","grain","fn","pre","next","Math","abs","toNativeDate","isBefore","timeUnits","NgTimeParser","format","localeId","regex","matchMap","periodNarrow","periodWide","periodAbbreviated","genRegexp","str","result","getTimeResult","time","setMinutes","setSeconds","period","match","exec","Format","Narrow","indexOf","Wide","Abbreviated","Number","parseInt","regexStr","replace","hourRegex","minuteRegex","secondRegex","hourMatch","minuteMatch","secondMatch","periodNarrowMatch","periodWideMatch","periodAbbreviatedMatch","matchs","filter","m","sort","a","b","index","forEach","periodsNarrow","join","periodsWide","periodsAbbreviated","RegExp","ɵNgTimeParser"],"mappings":"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","sourcesContent":["import { startOfWeek, startOfMonth, setYear, addYears, setMonth, addMonths, setDay, isSameDay, isSameSecond, isSameMinute, isSameHour, isSameMonth, isSameYear, differenceInCalendarDays, differenceInSeconds, differenceInMinutes, differenceInHours, differenceInCalendarMonths, differenceInCalendarYears, isToday, isValid, isFirstDayOfMonth, isLastDayOfMonth } from 'date-fns';\nimport { warn } from 'ng-zorro-antd/core/logger';\nimport { getLocaleDayPeriods, FormStyle, TranslationWidth } from '@angular/common';\nimport { isNotNil } from 'ng-zorro-antd/core/util';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nfunction wrongSortOrder(rangeValue) {\n    const [start, end] = rangeValue;\n    return !!start && !!end && end.isBeforeDay(start);\n}\nfunction normalizeRangeValue(value, hasTimePicker, type = 'month', activePart = 'left') {\n    const [start, end] = value;\n    let newStart = start || new CandyDate();\n    let newEnd = end || (hasTimePicker ? newStart : newStart.add(1, type));\n    if (start && !end) {\n        newStart = start;\n        newEnd = hasTimePicker ? start : start.add(1, type);\n    }\n    else if (!start && end) {\n        newStart = hasTimePicker ? end : end.add(-1, type);\n        newEnd = end;\n    }\n    else if (start && end && !hasTimePicker) {\n        if (start.isSame(end, type)) {\n            newEnd = newStart.add(1, type);\n        }\n        else {\n            if (activePart === 'left') {\n                newEnd = newStart.add(1, type);\n            }\n            else {\n                newStart = newEnd.add(-1, type);\n            }\n        }\n    }\n    return [newStart, newEnd];\n}\nfunction cloneDate(value) {\n    if (Array.isArray(value)) {\n        return value.map(v => (v instanceof CandyDate ? v.clone() : null));\n    }\n    else {\n        return value instanceof CandyDate ? value.clone() : null;\n    }\n}\n/**\n * Wrapping kind APIs for date operating and unify\n * NOTE: every new API return new CandyDate object without side effects to the former Date object\n * NOTE: most APIs are based on local time other than customized locale id (this needs tobe support in future)\n * TODO: support format() against to angular's core API\n */\nclass CandyDate {\n    // locale: string; // Custom specified locale ID\n    constructor(date) {\n        if (date) {\n            if (date instanceof Date) {\n                this.nativeDate = date;\n            }\n            else if (typeof date === 'string' || typeof date === 'number') {\n                warn('The string type is not recommended for date-picker, use \"Date\" type');\n                this.nativeDate = new Date(date);\n            }\n            else {\n                throw new Error('The input date type is not supported (\"Date\" is now recommended)');\n            }\n        }\n        else {\n            this.nativeDate = new Date();\n        }\n    }\n    calendarStart(options) {\n        return new CandyDate(startOfWeek(startOfMonth(this.nativeDate), options));\n    }\n    // ---------------------------------------------------------------------\n    // | Native shortcuts\n    // -----------------------------------------------------------------------------\\\n    getYear() {\n        return this.nativeDate.getFullYear();\n    }\n    getMonth() {\n        return this.nativeDate.getMonth();\n    }\n    getDay() {\n        return this.nativeDate.getDay();\n    }\n    getTime() {\n        return this.nativeDate.getTime();\n    }\n    getDate() {\n        return this.nativeDate.getDate();\n    }\n    getHours() {\n        return this.nativeDate.getHours();\n    }\n    getMinutes() {\n        return this.nativeDate.getMinutes();\n    }\n    getSeconds() {\n        return this.nativeDate.getSeconds();\n    }\n    getMilliseconds() {\n        return this.nativeDate.getMilliseconds();\n    }\n    // ---------------------------------------------------------------------\n    // | New implementing APIs\n    // ---------------------------------------------------------------------\n    clone() {\n        return new CandyDate(new Date(this.nativeDate));\n    }\n    setHms(hour, minute, second) {\n        const newDate = new Date(this.nativeDate.setHours(hour, minute, second));\n        return new CandyDate(newDate);\n    }\n    setYear(year) {\n        return new CandyDate(setYear(this.nativeDate, year));\n    }\n    addYears(amount) {\n        return new CandyDate(addYears(this.nativeDate, amount));\n    }\n    // NOTE: month starts from 0\n    // NOTE: Don't use the native API for month manipulation as it not restrict the date when it overflows, eg. (new Date('2018-7-31')).setMonth(1) will be date of 2018-3-03 instead of 2018-2-28\n    setMonth(month) {\n        return new CandyDate(setMonth(this.nativeDate, month));\n    }\n    addMonths(amount) {\n        return new CandyDate(addMonths(this.nativeDate, amount));\n    }\n    setDay(day, options) {\n        return new CandyDate(setDay(this.nativeDate, day, options));\n    }\n    setDate(amount) {\n        const date = new Date(this.nativeDate);\n        date.setDate(amount);\n        return new CandyDate(date);\n    }\n    addDays(amount) {\n        return this.setDate(this.getDate() + amount);\n    }\n    add(amount, mode) {\n        switch (mode) {\n            case 'decade':\n                return this.addYears(amount * 10);\n            case 'year':\n                return this.addYears(amount);\n            case 'month':\n                return this.addMonths(amount);\n            default:\n                return this.addMonths(amount);\n        }\n    }\n    isSame(date, grain = 'day') {\n        let fn;\n        switch (grain) {\n            case 'decade':\n                fn = (pre, next) => Math.abs(pre.getFullYear() - next.getFullYear()) < 11;\n                break;\n            case 'year':\n                fn = isSameYear;\n                break;\n            case 'month':\n                fn = isSameMonth;\n                break;\n            case 'day':\n                fn = isSameDay;\n                break;\n            case 'hour':\n                fn = isSameHour;\n                break;\n            case 'minute':\n                fn = isSameMinute;\n                break;\n            case 'second':\n                fn = isSameSecond;\n                break;\n            default:\n                fn = isSameDay;\n                break;\n        }\n        return fn(this.nativeDate, this.toNativeDate(date));\n    }\n    isSameYear(date) {\n        return this.isSame(date, 'year');\n    }\n    isSameMonth(date) {\n        return this.isSame(date, 'month');\n    }\n    isSameDay(date) {\n        return this.isSame(date, 'day');\n    }\n    isSameHour(date) {\n        return this.isSame(date, 'hour');\n    }\n    isSameMinute(date) {\n        return this.isSame(date, 'minute');\n    }\n    isSameSecond(date) {\n        return this.isSame(date, 'second');\n    }\n    isBefore(date, grain = 'day') {\n        if (date === null) {\n            return false;\n        }\n        let fn;\n        switch (grain) {\n            case 'year':\n                fn = differenceInCalendarYears;\n                break;\n            case 'month':\n                fn = differenceInCalendarMonths;\n                break;\n            case 'day':\n                fn = differenceInCalendarDays;\n                break;\n            case 'hour':\n                fn = differenceInHours;\n                break;\n            case 'minute':\n                fn = differenceInMinutes;\n                break;\n            case 'second':\n                fn = differenceInSeconds;\n                break;\n            default:\n                fn = differenceInCalendarDays;\n                break;\n        }\n        return fn(this.nativeDate, this.toNativeDate(date)) < 0;\n    }\n    isBeforeYear(date) {\n        return this.isBefore(date, 'year');\n    }\n    isBeforeMonth(date) {\n        return this.isBefore(date, 'month');\n    }\n    isBeforeDay(date) {\n        return this.isBefore(date, 'day');\n    }\n    // Equal to today accurate to \"day\"\n    isToday() {\n        return isToday(this.nativeDate);\n    }\n    isValid() {\n        return isValid(this.nativeDate);\n    }\n    isFirstDayOfMonth() {\n        return isFirstDayOfMonth(this.nativeDate);\n    }\n    isLastDayOfMonth() {\n        return isLastDayOfMonth(this.nativeDate);\n    }\n    toNativeDate(date) {\n        return date instanceof CandyDate ? date.nativeDate : date;\n    }\n}\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst timeUnits = [\n    ['Y', 1000 * 60 * 60 * 24 * 365],\n    ['M', 1000 * 60 * 60 * 24 * 30],\n    ['D', 1000 * 60 * 60 * 24],\n    ['H', 1000 * 60 * 60],\n    ['m', 1000 * 60],\n    ['s', 1000],\n    ['S', 1] // million seconds\n];\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NgTimeParser {\n    constructor(format, localeId) {\n        this.format = format;\n        this.localeId = localeId;\n        this.regex = null;\n        this.matchMap = {\n            hour: null,\n            minute: null,\n            second: null,\n            periodNarrow: null,\n            periodWide: null,\n            periodAbbreviated: null\n        };\n        this.genRegexp();\n    }\n    toDate(str) {\n        const result = this.getTimeResult(str);\n        const time = new Date();\n        if (isNotNil(result === null || result === void 0 ? void 0 : result.hour)) {\n            time.setHours(result.hour);\n        }\n        if (isNotNil(result === null || result === void 0 ? void 0 : result.minute)) {\n            time.setMinutes(result.minute);\n        }\n        if (isNotNil(result === null || result === void 0 ? void 0 : result.second)) {\n            time.setSeconds(result.second);\n        }\n        if ((result === null || result === void 0 ? void 0 : result.period) === 1 && time.getHours() < 12) {\n            time.setHours(time.getHours() + 12);\n        }\n        return time;\n    }\n    getTimeResult(str) {\n        const match = this.regex.exec(str);\n        let period = null;\n        if (match) {\n            if (isNotNil(this.matchMap.periodNarrow)) {\n                period = getLocaleDayPeriods(this.localeId, FormStyle.Format, TranslationWidth.Narrow).indexOf(match[this.matchMap.periodNarrow + 1]);\n            }\n            if (isNotNil(this.matchMap.periodWide)) {\n                period = getLocaleDayPeriods(this.localeId, FormStyle.Format, TranslationWidth.Wide).indexOf(match[this.matchMap.periodWide + 1]);\n            }\n            if (isNotNil(this.matchMap.periodAbbreviated)) {\n                period = getLocaleDayPeriods(this.localeId, FormStyle.Format, TranslationWidth.Abbreviated).indexOf(match[this.matchMap.periodAbbreviated + 1]);\n            }\n            return {\n                hour: isNotNil(this.matchMap.hour) ? Number.parseInt(match[this.matchMap.hour + 1], 10) : null,\n                minute: isNotNil(this.matchMap.minute) ? Number.parseInt(match[this.matchMap.minute + 1], 10) : null,\n                second: isNotNil(this.matchMap.second) ? Number.parseInt(match[this.matchMap.second + 1], 10) : null,\n                period\n            };\n        }\n        else {\n            return null;\n        }\n    }\n    genRegexp() {\n        let regexStr = this.format.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$&');\n        const hourRegex = /h{1,2}/i;\n        const minuteRegex = /m{1,2}/;\n        const secondRegex = /s{1,2}/;\n        const periodNarrow = /aaaaa/;\n        const periodWide = /aaaa/;\n        const periodAbbreviated = /a{1,3}/;\n        const hourMatch = hourRegex.exec(this.format);\n        const minuteMatch = minuteRegex.exec(this.format);\n        const secondMatch = secondRegex.exec(this.format);\n        const periodNarrowMatch = periodNarrow.exec(this.format);\n        let periodWideMatch = null;\n        let periodAbbreviatedMatch = null;\n        if (!periodNarrowMatch) {\n            periodWideMatch = periodWide.exec(this.format);\n        }\n        if (!periodWideMatch && !periodNarrowMatch) {\n            periodAbbreviatedMatch = periodAbbreviated.exec(this.format);\n        }\n        const matchs = [hourMatch, minuteMatch, secondMatch, periodNarrowMatch, periodWideMatch, periodAbbreviatedMatch]\n            .filter(m => !!m)\n            .sort((a, b) => a.index - b.index);\n        matchs.forEach((match, index) => {\n            switch (match) {\n                case hourMatch:\n                    this.matchMap.hour = index;\n                    regexStr = regexStr.replace(hourRegex, '(\\\\d{1,2})');\n                    break;\n                case minuteMatch:\n                    this.matchMap.minute = index;\n                    regexStr = regexStr.replace(minuteRegex, '(\\\\d{1,2})');\n                    break;\n                case secondMatch:\n                    this.matchMap.second = index;\n                    regexStr = regexStr.replace(secondRegex, '(\\\\d{1,2})');\n                    break;\n                case periodNarrowMatch:\n                    this.matchMap.periodNarrow = index;\n                    const periodsNarrow = getLocaleDayPeriods(this.localeId, FormStyle.Format, TranslationWidth.Narrow).join('|');\n                    regexStr = regexStr.replace(periodNarrow, `(${periodsNarrow})`);\n                    break;\n                case periodWideMatch:\n                    this.matchMap.periodWide = index;\n                    const periodsWide = getLocaleDayPeriods(this.localeId, FormStyle.Format, TranslationWidth.Wide).join('|');\n                    regexStr = regexStr.replace(periodWide, `(${periodsWide})`);\n                    break;\n                case periodAbbreviatedMatch:\n                    this.matchMap.periodAbbreviated = index;\n                    const periodsAbbreviated = getLocaleDayPeriods(this.localeId, FormStyle.Format, TranslationWidth.Abbreviated).join('|');\n                    regexStr = regexStr.replace(periodAbbreviated, `(${periodsAbbreviated})`);\n                    break;\n            }\n        });\n        this.regex = new RegExp(regexStr);\n    }\n}\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CandyDate, cloneDate, normalizeRangeValue, timeUnits, wrongSortOrder, NgTimeParser as ɵNgTimeParser };\n\n//# sourceMappingURL=ng-zorro-antd-core-time.js.map"]},"metadata":{},"sourceType":"module"}