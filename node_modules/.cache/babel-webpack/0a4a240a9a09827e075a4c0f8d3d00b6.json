{"ast":null,"code":"import _classCallCheck from \"/Users/mac/WebstormProjects/github-page/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mac/WebstormProjects/github-page/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Platform, PlatformModule } from '@angular/cdk/platform';\nimport { InjectionToken, Directive, NgZone, ElementRef, Optional, Inject, PLATFORM_ID, Input, NgModule } from '@angular/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport * as ɵngcc0 from '@angular/core';\n\nvar NzWaveRenderer = /*#__PURE__*/function () {\n  function NzWaveRenderer(triggerElement, ngZone, insertExtraNode, platformId) {\n    var _this = this;\n\n    _classCallCheck(this, NzWaveRenderer);\n\n    this.triggerElement = triggerElement;\n    this.ngZone = ngZone;\n    this.insertExtraNode = insertExtraNode;\n    this.platformId = platformId;\n    this.waveTransitionDuration = 400;\n    this.styleForPseudo = null;\n    this.extraNode = null;\n    this.lastTime = 0;\n\n    this.onClick = function (event) {\n      if (!_this.triggerElement || !_this.triggerElement.getAttribute || _this.triggerElement.getAttribute('disabled') || event.target.tagName === 'INPUT' || _this.triggerElement.className.indexOf('disabled') >= 0) {\n        return;\n      }\n\n      _this.fadeOutWave();\n    };\n\n    this.platform = new Platform(this.platformId);\n    this.clickHandler = this.onClick.bind(this);\n    this.bindTriggerEvent();\n  }\n\n  _createClass(NzWaveRenderer, [{\n    key: \"waveAttributeName\",\n    get: function get() {\n      return this.insertExtraNode ? 'ant-click-animating' : 'ant-click-animating-without-extra-node';\n    }\n  }, {\n    key: \"bindTriggerEvent\",\n    value: function bindTriggerEvent() {\n      var _this2 = this;\n\n      if (this.platform.isBrowser) {\n        this.ngZone.runOutsideAngular(function () {\n          _this2.removeTriggerEvent();\n\n          if (_this2.triggerElement) {\n            _this2.triggerElement.addEventListener('click', _this2.clickHandler, true);\n          }\n        });\n      }\n    }\n  }, {\n    key: \"removeTriggerEvent\",\n    value: function removeTriggerEvent() {\n      if (this.triggerElement) {\n        this.triggerElement.removeEventListener('click', this.clickHandler, true);\n      }\n    }\n  }, {\n    key: \"removeStyleAndExtraNode\",\n    value: function removeStyleAndExtraNode() {\n      if (this.styleForPseudo && document.body.contains(this.styleForPseudo)) {\n        document.body.removeChild(this.styleForPseudo);\n        this.styleForPseudo = null;\n      }\n\n      if (this.insertExtraNode && this.triggerElement.contains(this.extraNode)) {\n        this.triggerElement.removeChild(this.extraNode);\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.removeTriggerEvent();\n      this.removeStyleAndExtraNode();\n    }\n  }, {\n    key: \"fadeOutWave\",\n    value: function fadeOutWave() {\n      var _this3 = this;\n\n      var node = this.triggerElement;\n      var waveColor = this.getWaveColor(node);\n      node.setAttribute(this.waveAttributeName, 'true');\n\n      if (Date.now() < this.lastTime + this.waveTransitionDuration) {\n        return;\n      }\n\n      if (this.isValidColor(waveColor)) {\n        if (!this.styleForPseudo) {\n          this.styleForPseudo = document.createElement('style');\n        }\n\n        this.styleForPseudo.innerHTML = \"\\n      [ant-click-animating-without-extra-node='true']::after, .ant-click-animating-node {\\n        --antd-wave-shadow-color: \".concat(waveColor, \";\\n      }\");\n        document.body.appendChild(this.styleForPseudo);\n      }\n\n      if (this.insertExtraNode) {\n        if (!this.extraNode) {\n          this.extraNode = document.createElement('div');\n        }\n\n        this.extraNode.className = 'ant-click-animating-node';\n        node.appendChild(this.extraNode);\n      }\n\n      this.lastTime = Date.now();\n      this.runTimeoutOutsideZone(function () {\n        node.removeAttribute(_this3.waveAttributeName);\n\n        _this3.removeStyleAndExtraNode();\n      }, this.waveTransitionDuration);\n    }\n  }, {\n    key: \"isValidColor\",\n    value: function isValidColor(color) {\n      return !!color && color !== '#ffffff' && color !== 'rgb(255, 255, 255)' && this.isNotGrey(color) && !/rgba\\(\\d*, \\d*, \\d*, 0\\)/.test(color) && color !== 'transparent';\n    }\n  }, {\n    key: \"isNotGrey\",\n    value: function isNotGrey(color) {\n      var match = color.match(/rgba?\\((\\d*), (\\d*), (\\d*)(, [\\.\\d]*)?\\)/);\n\n      if (match && match[1] && match[2] && match[3]) {\n        return !(match[1] === match[2] && match[2] === match[3]);\n      }\n\n      return true;\n    }\n  }, {\n    key: \"getWaveColor\",\n    value: function getWaveColor(node) {\n      var nodeStyle = getComputedStyle(node);\n      return nodeStyle.getPropertyValue('border-top-color') || // Firefox Compatible\n      nodeStyle.getPropertyValue('border-color') || nodeStyle.getPropertyValue('background-color');\n    }\n  }, {\n    key: \"runTimeoutOutsideZone\",\n    value: function runTimeoutOutsideZone(fn, delay) {\n      this.ngZone.runOutsideAngular(function () {\n        return setTimeout(fn, delay);\n      });\n    }\n  }]);\n\n  return NzWaveRenderer;\n}();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NZ_WAVE_GLOBAL_DEFAULT_CONFIG = {\n  disabled: false\n};\nvar NZ_WAVE_GLOBAL_CONFIG = new InjectionToken('nz-wave-global-options', {\n  providedIn: 'root',\n  factory: NZ_WAVE_GLOBAL_CONFIG_FACTORY\n});\n\nfunction NZ_WAVE_GLOBAL_CONFIG_FACTORY() {\n  return NZ_WAVE_GLOBAL_DEFAULT_CONFIG;\n}\n\nvar NzWaveDirective = /*#__PURE__*/function () {\n  function NzWaveDirective(ngZone, elementRef, config, animationType, platformId) {\n    _classCallCheck(this, NzWaveDirective);\n\n    this.ngZone = ngZone;\n    this.elementRef = elementRef;\n    this.config = config;\n    this.animationType = animationType;\n    this.platformId = platformId;\n    this.nzWaveExtraNode = false;\n    this.waveDisabled = false;\n    this.waveDisabled = this.isConfigDisabled();\n  }\n\n  _createClass(NzWaveDirective, [{\n    key: \"disabled\",\n    get: function get() {\n      return this.waveDisabled;\n    }\n  }, {\n    key: \"rendererRef\",\n    get: function get() {\n      return this.waveRenderer;\n    }\n  }, {\n    key: \"isConfigDisabled\",\n    value: function isConfigDisabled() {\n      var disabled = false;\n\n      if (this.config && typeof this.config.disabled === 'boolean') {\n        disabled = this.config.disabled;\n      }\n\n      if (this.animationType === 'NoopAnimations') {\n        disabled = true;\n      }\n\n      return disabled;\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.waveRenderer) {\n        this.waveRenderer.destroy();\n      }\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.renderWaveIfEnabled();\n    }\n  }, {\n    key: \"renderWaveIfEnabled\",\n    value: function renderWaveIfEnabled() {\n      if (!this.waveDisabled && this.elementRef.nativeElement) {\n        this.waveRenderer = new NzWaveRenderer(this.elementRef.nativeElement, this.ngZone, this.nzWaveExtraNode, this.platformId);\n      }\n    }\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      this.waveDisabled = true;\n\n      if (this.waveRenderer) {\n        this.waveRenderer.removeTriggerEvent();\n        this.waveRenderer.removeStyleAndExtraNode();\n      }\n    }\n  }, {\n    key: \"enable\",\n    value: function enable() {\n      // config priority\n      this.waveDisabled = this.isConfigDisabled() || false;\n\n      if (this.waveRenderer) {\n        this.waveRenderer.bindTriggerEvent();\n      }\n    }\n  }]);\n\n  return NzWaveDirective;\n}();\n\nNzWaveDirective.ɵfac = function NzWaveDirective_Factory(t) {\n  return new (t || NzWaveDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(NZ_WAVE_GLOBAL_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID));\n};\n\nNzWaveDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: NzWaveDirective,\n  selectors: [[\"\", \"nz-wave\", \"\"], [\"button\", \"nz-button\", \"\", 3, \"nzType\", \"link\", 3, \"nzType\", \"text\"]],\n  inputs: {\n    nzWaveExtraNode: \"nzWaveExtraNode\"\n  },\n  exportAs: [\"nzWave\"]\n});\n\nNzWaveDirective.ctorParameters = function () {\n  return [{\n    type: NgZone\n  }, {\n    type: ElementRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [NZ_WAVE_GLOBAL_CONFIG]\n    }]\n  }, {\n    type: String,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }];\n};\n\nNzWaveDirective.propDecorators = {\n  nzWaveExtraNode: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzWaveDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[nz-wave],button[nz-button]:not([nzType=\"link\"]):not([nzType=\"text\"])',\n      exportAs: 'nzWave'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [NZ_WAVE_GLOBAL_CONFIG]\n      }]\n    }, {\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    nzWaveExtraNode: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzWaveModule = function NzWaveModule() {\n  _classCallCheck(this, NzWaveModule);\n};\n\nNzWaveModule.ɵfac = function NzWaveModule_Factory(t) {\n  return new (t || NzWaveModule)();\n};\n\nNzWaveModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: NzWaveModule\n});\nNzWaveModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [[PlatformModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzWaveModule, [{\n    type: NgModule,\n    args: [{\n      imports: [PlatformModule],\n      exports: [NzWaveDirective],\n      declarations: [NzWaveDirective]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzWaveModule, {\n    declarations: function declarations() {\n      return [NzWaveDirective];\n    },\n    imports: function imports() {\n      return [PlatformModule];\n    },\n    exports: function exports() {\n      return [NzWaveDirective];\n    }\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NZ_WAVE_GLOBAL_CONFIG, NZ_WAVE_GLOBAL_CONFIG_FACTORY, NZ_WAVE_GLOBAL_DEFAULT_CONFIG, NzWaveDirective, NzWaveModule, NzWaveRenderer }; //# sourceMappingURL=ng-zorro-antd-core-wave.js.map","map":{"version":3,"sources":["/Users/mac/WebstormProjects/github-page/node_modules/ng-zorro-antd/__ivy_ngcc__/fesm2015/ng-zorro-antd-core-wave.js"],"names":["Platform","PlatformModule","InjectionToken","Directive","NgZone","ElementRef","Optional","Inject","PLATFORM_ID","Input","NgModule","ANIMATION_MODULE_TYPE","ɵngcc0","NzWaveRenderer","triggerElement","ngZone","insertExtraNode","platformId","waveTransitionDuration","styleForPseudo","extraNode","lastTime","onClick","event","getAttribute","target","tagName","className","indexOf","fadeOutWave","platform","clickHandler","bind","bindTriggerEvent","isBrowser","runOutsideAngular","removeTriggerEvent","addEventListener","removeEventListener","document","body","contains","removeChild","removeStyleAndExtraNode","node","waveColor","getWaveColor","setAttribute","waveAttributeName","Date","now","isValidColor","createElement","innerHTML","appendChild","runTimeoutOutsideZone","removeAttribute","color","isNotGrey","test","match","nodeStyle","getComputedStyle","getPropertyValue","fn","delay","setTimeout","NZ_WAVE_GLOBAL_DEFAULT_CONFIG","disabled","NZ_WAVE_GLOBAL_CONFIG","providedIn","factory","NZ_WAVE_GLOBAL_CONFIG_FACTORY","NzWaveDirective","elementRef","config","animationType","nzWaveExtraNode","waveDisabled","isConfigDisabled","waveRenderer","destroy","renderWaveIfEnabled","nativeElement","ɵfac","NzWaveDirective_Factory","t","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","type","selectors","inputs","exportAs","ctorParameters","undefined","decorators","args","String","propDecorators","ngDevMode","ɵsetClassMetadata","selector","NzWaveModule","NzWaveModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations","ngJitMode","ɵɵsetNgModuleScope"],"mappings":"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","sourcesContent":["import { Platform, PlatformModule } from '@angular/cdk/platform';\nimport { InjectionToken, Directive, NgZone, ElementRef, Optional, Inject, PLATFORM_ID, Input, NgModule } from '@angular/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport * as ɵngcc0 from '@angular/core';\nclass NzWaveRenderer {\n    constructor(triggerElement, ngZone, insertExtraNode, platformId) {\n        this.triggerElement = triggerElement;\n        this.ngZone = ngZone;\n        this.insertExtraNode = insertExtraNode;\n        this.platformId = platformId;\n        this.waveTransitionDuration = 400;\n        this.styleForPseudo = null;\n        this.extraNode = null;\n        this.lastTime = 0;\n        this.onClick = (event) => {\n            if (!this.triggerElement ||\n                !this.triggerElement.getAttribute ||\n                this.triggerElement.getAttribute('disabled') ||\n                event.target.tagName === 'INPUT' ||\n                this.triggerElement.className.indexOf('disabled') >= 0) {\n                return;\n            }\n            this.fadeOutWave();\n        };\n        this.platform = new Platform(this.platformId);\n        this.clickHandler = this.onClick.bind(this);\n        this.bindTriggerEvent();\n    }\n    get waveAttributeName() {\n        return this.insertExtraNode ? 'ant-click-animating' : 'ant-click-animating-without-extra-node';\n    }\n    bindTriggerEvent() {\n        if (this.platform.isBrowser) {\n            this.ngZone.runOutsideAngular(() => {\n                this.removeTriggerEvent();\n                if (this.triggerElement) {\n                    this.triggerElement.addEventListener('click', this.clickHandler, true);\n                }\n            });\n        }\n    }\n    removeTriggerEvent() {\n        if (this.triggerElement) {\n            this.triggerElement.removeEventListener('click', this.clickHandler, true);\n        }\n    }\n    removeStyleAndExtraNode() {\n        if (this.styleForPseudo && document.body.contains(this.styleForPseudo)) {\n            document.body.removeChild(this.styleForPseudo);\n            this.styleForPseudo = null;\n        }\n        if (this.insertExtraNode && this.triggerElement.contains(this.extraNode)) {\n            this.triggerElement.removeChild(this.extraNode);\n        }\n    }\n    destroy() {\n        this.removeTriggerEvent();\n        this.removeStyleAndExtraNode();\n    }\n    fadeOutWave() {\n        const node = this.triggerElement;\n        const waveColor = this.getWaveColor(node);\n        node.setAttribute(this.waveAttributeName, 'true');\n        if (Date.now() < this.lastTime + this.waveTransitionDuration) {\n            return;\n        }\n        if (this.isValidColor(waveColor)) {\n            if (!this.styleForPseudo) {\n                this.styleForPseudo = document.createElement('style');\n            }\n            this.styleForPseudo.innerHTML = `\n      [ant-click-animating-without-extra-node='true']::after, .ant-click-animating-node {\n        --antd-wave-shadow-color: ${waveColor};\n      }`;\n            document.body.appendChild(this.styleForPseudo);\n        }\n        if (this.insertExtraNode) {\n            if (!this.extraNode) {\n                this.extraNode = document.createElement('div');\n            }\n            this.extraNode.className = 'ant-click-animating-node';\n            node.appendChild(this.extraNode);\n        }\n        this.lastTime = Date.now();\n        this.runTimeoutOutsideZone(() => {\n            node.removeAttribute(this.waveAttributeName);\n            this.removeStyleAndExtraNode();\n        }, this.waveTransitionDuration);\n    }\n    isValidColor(color) {\n        return (!!color &&\n            color !== '#ffffff' &&\n            color !== 'rgb(255, 255, 255)' &&\n            this.isNotGrey(color) &&\n            !/rgba\\(\\d*, \\d*, \\d*, 0\\)/.test(color) &&\n            color !== 'transparent');\n    }\n    isNotGrey(color) {\n        const match = color.match(/rgba?\\((\\d*), (\\d*), (\\d*)(, [\\.\\d]*)?\\)/);\n        if (match && match[1] && match[2] && match[3]) {\n            return !(match[1] === match[2] && match[2] === match[3]);\n        }\n        return true;\n    }\n    getWaveColor(node) {\n        const nodeStyle = getComputedStyle(node);\n        return (nodeStyle.getPropertyValue('border-top-color') || // Firefox Compatible\n            nodeStyle.getPropertyValue('border-color') ||\n            nodeStyle.getPropertyValue('background-color'));\n    }\n    runTimeoutOutsideZone(fn, delay) {\n        this.ngZone.runOutsideAngular(() => setTimeout(fn, delay));\n    }\n}\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst NZ_WAVE_GLOBAL_DEFAULT_CONFIG = {\n    disabled: false\n};\nconst NZ_WAVE_GLOBAL_CONFIG = new InjectionToken('nz-wave-global-options', {\n    providedIn: 'root',\n    factory: NZ_WAVE_GLOBAL_CONFIG_FACTORY\n});\nfunction NZ_WAVE_GLOBAL_CONFIG_FACTORY() {\n    return NZ_WAVE_GLOBAL_DEFAULT_CONFIG;\n}\nclass NzWaveDirective {\n    constructor(ngZone, elementRef, config, animationType, platformId) {\n        this.ngZone = ngZone;\n        this.elementRef = elementRef;\n        this.config = config;\n        this.animationType = animationType;\n        this.platformId = platformId;\n        this.nzWaveExtraNode = false;\n        this.waveDisabled = false;\n        this.waveDisabled = this.isConfigDisabled();\n    }\n    get disabled() {\n        return this.waveDisabled;\n    }\n    get rendererRef() {\n        return this.waveRenderer;\n    }\n    isConfigDisabled() {\n        let disabled = false;\n        if (this.config && typeof this.config.disabled === 'boolean') {\n            disabled = this.config.disabled;\n        }\n        if (this.animationType === 'NoopAnimations') {\n            disabled = true;\n        }\n        return disabled;\n    }\n    ngOnDestroy() {\n        if (this.waveRenderer) {\n            this.waveRenderer.destroy();\n        }\n    }\n    ngOnInit() {\n        this.renderWaveIfEnabled();\n    }\n    renderWaveIfEnabled() {\n        if (!this.waveDisabled && this.elementRef.nativeElement) {\n            this.waveRenderer = new NzWaveRenderer(this.elementRef.nativeElement, this.ngZone, this.nzWaveExtraNode, this.platformId);\n        }\n    }\n    disable() {\n        this.waveDisabled = true;\n        if (this.waveRenderer) {\n            this.waveRenderer.removeTriggerEvent();\n            this.waveRenderer.removeStyleAndExtraNode();\n        }\n    }\n    enable() {\n        // config priority\n        this.waveDisabled = this.isConfigDisabled() || false;\n        if (this.waveRenderer) {\n            this.waveRenderer.bindTriggerEvent();\n        }\n    }\n}\nNzWaveDirective.ɵfac = function NzWaveDirective_Factory(t) { return new (t || NzWaveDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(NZ_WAVE_GLOBAL_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID)); };\nNzWaveDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: NzWaveDirective, selectors: [[\"\", \"nz-wave\", \"\"], [\"button\", \"nz-button\", \"\", 3, \"nzType\", \"link\", 3, \"nzType\", \"text\"]], inputs: { nzWaveExtraNode: \"nzWaveExtraNode\" }, exportAs: [\"nzWave\"] });\nNzWaveDirective.ctorParameters = () => [\n    { type: NgZone },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [NZ_WAVE_GLOBAL_CONFIG,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }\n];\nNzWaveDirective.propDecorators = {\n    nzWaveExtraNode: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzWaveDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[nz-wave],button[nz-button]:not([nzType=\"link\"]):not([nzType=\"text\"])',\n                exportAs: 'nzWave'\n            }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [NZ_WAVE_GLOBAL_CONFIG]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }]; }, { nzWaveExtraNode: [{\n            type: Input\n        }] }); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzWaveModule {\n}\nNzWaveModule.ɵfac = function NzWaveModule_Factory(t) { return new (t || NzWaveModule)(); };\nNzWaveModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NzWaveModule });\nNzWaveModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[PlatformModule]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzWaveModule, [{\n        type: NgModule,\n        args: [{\n                imports: [PlatformModule],\n                exports: [NzWaveDirective],\n                declarations: [NzWaveDirective]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzWaveModule, { declarations: function () { return [NzWaveDirective]; }, imports: function () { return [PlatformModule]; }, exports: function () { return [NzWaveDirective]; } }); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NZ_WAVE_GLOBAL_CONFIG, NZ_WAVE_GLOBAL_CONFIG_FACTORY, NZ_WAVE_GLOBAL_DEFAULT_CONFIG, NzWaveDirective, NzWaveModule, NzWaveRenderer };\n\n//# sourceMappingURL=ng-zorro-antd-core-wave.js.map"]},"metadata":{},"sourceType":"module"}