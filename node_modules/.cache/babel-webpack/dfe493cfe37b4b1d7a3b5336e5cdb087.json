{"ast":null,"code":"import _classCallCheck from \"/Users/mac/WebstormProjects/github-page/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { __decorate, __metadata } from 'tslib';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Input, NgModule } from '@angular/core';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { CommonModule } from '@angular/common';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from 'ng-zorro-antd/core/outlet';\n\nfunction NzDividerComponent_span_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r1.nzText);\n  }\n}\n\nfunction NzDividerComponent_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 1);\n    ɵngcc0.ɵɵtemplate(1, NzDividerComponent_span_0_ng_container_1_Template, 2, 1, \"ng-container\", 2);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r0.nzText);\n  }\n}\n\nvar NzDividerComponent = function NzDividerComponent(elementRef) {\n  _classCallCheck(this, NzDividerComponent);\n\n  this.elementRef = elementRef;\n  this.nzType = 'horizontal';\n  this.nzOrientation = 'center';\n  this.nzDashed = false;\n  this.nzPlain = false; // TODO: move to host after View Engine deprecation\n\n  this.elementRef.nativeElement.classList.add('ant-divider');\n};\n\nNzDividerComponent.ɵfac = function NzDividerComponent_Factory(t) {\n  return new (t || NzDividerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nNzDividerComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: NzDividerComponent,\n  selectors: [[\"nz-divider\"]],\n  hostVars: 16,\n  hostBindings: function NzDividerComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"ant-divider-horizontal\", ctx.nzType === \"horizontal\")(\"ant-divider-vertical\", ctx.nzType === \"vertical\")(\"ant-divider-with-text\", ctx.nzText)(\"ant-divider-plain\", ctx.nzPlain)(\"ant-divider-with-text-left\", ctx.nzText && ctx.nzOrientation === \"left\")(\"ant-divider-with-text-right\", ctx.nzText && ctx.nzOrientation === \"right\")(\"ant-divider-with-text-center\", ctx.nzText && ctx.nzOrientation === \"center\")(\"ant-divider-dashed\", ctx.nzDashed);\n    }\n  },\n  inputs: {\n    nzType: \"nzType\",\n    nzOrientation: \"nzOrientation\",\n    nzDashed: \"nzDashed\",\n    nzPlain: \"nzPlain\",\n    nzText: \"nzText\"\n  },\n  exportAs: [\"nzDivider\"],\n  decls: 1,\n  vars: 1,\n  consts: [[\"class\", \"ant-divider-inner-text\", 4, \"ngIf\"], [1, \"ant-divider-inner-text\"], [4, \"nzStringTemplateOutlet\"]],\n  template: function NzDividerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NzDividerComponent_span_0_Template, 2, 1, \"span\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzText);\n    }\n  },\n  directives: [ɵngcc1.NgIf, ɵngcc2.NzStringTemplateOutletDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNzDividerComponent.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }];\n};\n\nNzDividerComponent.propDecorators = {\n  nzText: [{\n    type: Input\n  }],\n  nzType: [{\n    type: Input\n  }],\n  nzOrientation: [{\n    type: Input\n  }],\n  nzDashed: [{\n    type: Input\n  }],\n  nzPlain: [{\n    type: Input\n  }]\n};\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzDividerComponent.prototype, \"nzDashed\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzDividerComponent.prototype, \"nzPlain\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzDividerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-divider',\n      exportAs: 'nzDivider',\n      preserveWhitespaces: false,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"\\n    <span *ngIf=\\\"nzText\\\" class=\\\"ant-divider-inner-text\\\">\\n      <ng-container *nzStringTemplateOutlet=\\\"nzText\\\">{{ nzText }}</ng-container>\\n    </span>\\n  \",\n      host: {\n        '[class.ant-divider-horizontal]': \"nzType === 'horizontal'\",\n        '[class.ant-divider-vertical]': \"nzType === 'vertical'\",\n        '[class.ant-divider-with-text]': \"nzText\",\n        '[class.ant-divider-plain]': \"nzPlain\",\n        '[class.ant-divider-with-text-left]': \"nzText && nzOrientation === 'left'\",\n        '[class.ant-divider-with-text-right]': \"nzText && nzOrientation === 'right'\",\n        '[class.ant-divider-with-text-center]': \"nzText && nzOrientation === 'center'\",\n        '[class.ant-divider-dashed]': \"nzDashed\"\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    nzType: [{\n      type: Input\n    }],\n    nzOrientation: [{\n      type: Input\n    }],\n    nzDashed: [{\n      type: Input\n    }],\n    nzPlain: [{\n      type: Input\n    }],\n    nzText: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzDividerModule = function NzDividerModule() {\n  _classCallCheck(this, NzDividerModule);\n};\n\nNzDividerModule.ɵfac = function NzDividerModule_Factory(t) {\n  return new (t || NzDividerModule)();\n};\n\nNzDividerModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: NzDividerModule\n});\nNzDividerModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [[BidiModule, CommonModule, NzOutletModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzDividerModule, [{\n    type: NgModule,\n    args: [{\n      imports: [BidiModule, CommonModule, NzOutletModule],\n      declarations: [NzDividerComponent],\n      exports: [NzDividerComponent]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzDividerModule, {\n    declarations: function declarations() {\n      return [NzDividerComponent];\n    },\n    imports: function imports() {\n      return [BidiModule, CommonModule, NzOutletModule];\n    },\n    exports: function exports() {\n      return [NzDividerComponent];\n    }\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzDividerComponent, NzDividerModule }; //# sourceMappingURL=ng-zorro-antd-divider.js.map","map":{"version":3,"sources":["/Users/mac/WebstormProjects/github-page/node_modules/ng-zorro-antd/__ivy_ngcc__/fesm2015/ng-zorro-antd-divider.js"],"names":["__decorate","__metadata","Component","ViewEncapsulation","ChangeDetectionStrategy","ElementRef","Input","NgModule","InputBoolean","BidiModule","CommonModule","NzOutletModule","ɵngcc0","ɵngcc1","ɵngcc2","NzDividerComponent_span_0_ng_container_1_Template","rf","ctx","ɵɵelementContainerStart","ɵɵtext","ɵɵelementContainerEnd","ctx_r1","ɵɵnextContext","ɵɵadvance","ɵɵtextInterpolate","nzText","NzDividerComponent_span_0_Template","ɵɵelementStart","ɵɵtemplate","ɵɵelementEnd","ctx_r0","ɵɵproperty","NzDividerComponent","elementRef","nzType","nzOrientation","nzDashed","nzPlain","nativeElement","classList","add","ɵfac","NzDividerComponent_Factory","t","ɵɵdirectiveInject","ɵcmp","ɵɵdefineComponent","type","selectors","hostVars","hostBindings","NzDividerComponent_HostBindings","ɵɵclassProp","inputs","exportAs","decls","vars","consts","template","NzDividerComponent_Template","directives","NgIf","NzStringTemplateOutletDirective","encapsulation","changeDetection","ctorParameters","propDecorators","Object","prototype","ngDevMode","ɵsetClassMetadata","args","selector","preserveWhitespaces","None","OnPush","host","NzDividerModule","NzDividerModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","declarations","exports","ngJitMode","ɵɵsetNgModuleScope"],"mappings":"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","sourcesContent":["import { __decorate, __metadata } from 'tslib';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Input, NgModule } from '@angular/core';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { CommonModule } from '@angular/common';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from 'ng-zorro-antd/core/outlet';\n\nfunction NzDividerComponent_span_0_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r1.nzText);\n} }\nfunction NzDividerComponent_span_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 1);\n    ɵngcc0.ɵɵtemplate(1, NzDividerComponent_span_0_ng_container_1_Template, 2, 1, \"ng-container\", 2);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r0.nzText);\n} }\nclass NzDividerComponent {\n    constructor(elementRef) {\n        this.elementRef = elementRef;\n        this.nzType = 'horizontal';\n        this.nzOrientation = 'center';\n        this.nzDashed = false;\n        this.nzPlain = false;\n        // TODO: move to host after View Engine deprecation\n        this.elementRef.nativeElement.classList.add('ant-divider');\n    }\n}\nNzDividerComponent.ɵfac = function NzDividerComponent_Factory(t) { return new (t || NzDividerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nNzDividerComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NzDividerComponent, selectors: [[\"nz-divider\"]], hostVars: 16, hostBindings: function NzDividerComponent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"ant-divider-horizontal\", ctx.nzType === \"horizontal\")(\"ant-divider-vertical\", ctx.nzType === \"vertical\")(\"ant-divider-with-text\", ctx.nzText)(\"ant-divider-plain\", ctx.nzPlain)(\"ant-divider-with-text-left\", ctx.nzText && ctx.nzOrientation === \"left\")(\"ant-divider-with-text-right\", ctx.nzText && ctx.nzOrientation === \"right\")(\"ant-divider-with-text-center\", ctx.nzText && ctx.nzOrientation === \"center\")(\"ant-divider-dashed\", ctx.nzDashed);\n    } }, inputs: { nzType: \"nzType\", nzOrientation: \"nzOrientation\", nzDashed: \"nzDashed\", nzPlain: \"nzPlain\", nzText: \"nzText\" }, exportAs: [\"nzDivider\"], decls: 1, vars: 1, consts: [[\"class\", \"ant-divider-inner-text\", 4, \"ngIf\"], [1, \"ant-divider-inner-text\"], [4, \"nzStringTemplateOutlet\"]], template: function NzDividerComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NzDividerComponent_span_0_Template, 2, 1, \"span\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzText);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc2.NzStringTemplateOutletDirective], encapsulation: 2, changeDetection: 0 });\nNzDividerComponent.ctorParameters = () => [\n    { type: ElementRef }\n];\nNzDividerComponent.propDecorators = {\n    nzText: [{ type: Input }],\n    nzType: [{ type: Input }],\n    nzOrientation: [{ type: Input }],\n    nzDashed: [{ type: Input }],\n    nzPlain: [{ type: Input }]\n};\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Object)\n], NzDividerComponent.prototype, \"nzDashed\", void 0);\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Object)\n], NzDividerComponent.prototype, \"nzPlain\", void 0);\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzDividerComponent, [{\n        type: Component,\n        args: [{\n                selector: 'nz-divider',\n                exportAs: 'nzDivider',\n                preserveWhitespaces: false,\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                template: `\n    <span *ngIf=\"nzText\" class=\"ant-divider-inner-text\">\n      <ng-container *nzStringTemplateOutlet=\"nzText\">{{ nzText }}</ng-container>\n    </span>\n  `,\n                host: {\n                    '[class.ant-divider-horizontal]': `nzType === 'horizontal'`,\n                    '[class.ant-divider-vertical]': `nzType === 'vertical'`,\n                    '[class.ant-divider-with-text]': `nzText`,\n                    '[class.ant-divider-plain]': `nzPlain`,\n                    '[class.ant-divider-with-text-left]': `nzText && nzOrientation === 'left'`,\n                    '[class.ant-divider-with-text-right]': `nzText && nzOrientation === 'right'`,\n                    '[class.ant-divider-with-text-center]': `nzText && nzOrientation === 'center'`,\n                    '[class.ant-divider-dashed]': `nzDashed`\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { nzType: [{\n            type: Input\n        }], nzOrientation: [{\n            type: Input\n        }], nzDashed: [{\n            type: Input\n        }], nzPlain: [{\n            type: Input\n        }], nzText: [{\n            type: Input\n        }] }); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzDividerModule {\n}\nNzDividerModule.ɵfac = function NzDividerModule_Factory(t) { return new (t || NzDividerModule)(); };\nNzDividerModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NzDividerModule });\nNzDividerModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[BidiModule, CommonModule, NzOutletModule]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzDividerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule, CommonModule, NzOutletModule],\n                declarations: [NzDividerComponent],\n                exports: [NzDividerComponent]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzDividerModule, { declarations: function () { return [NzDividerComponent]; }, imports: function () { return [BidiModule, CommonModule, NzOutletModule]; }, exports: function () { return [NzDividerComponent]; } }); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzDividerComponent, NzDividerModule };\n\n//# sourceMappingURL=ng-zorro-antd-divider.js.map"]},"metadata":{},"sourceType":"module"}