{"ast":null,"code":"import _classCallCheck from \"/Users/mac/WebstormProjects/github-page/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mac/WebstormProjects/github-page/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { __decorate, __metadata } from 'tslib';\nimport { FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Renderer2, ElementRef, Output, forwardRef, Optional, ChangeDetectorRef, ViewChild, Input, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { CommonModule } from '@angular/common';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/forms';\nimport * as ɵngcc4 from '@angular/common';\nvar _c0 = [\"*\"];\nvar _c1 = [\"inputElement\"];\nvar _c2 = [\"nz-checkbox\", \"\"];\n\nfunction NzCheckboxGroupComponent_label_0_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"label\", 1);\n    ɵngcc0.ɵɵlistener(\"nzCheckedChange\", function NzCheckboxGroupComponent_label_0_Template_label_nzCheckedChange_0_listener($event) {\n      var restoredCtx = ɵngcc0.ɵɵrestoreView(_r3);\n      var o_r1 = restoredCtx.$implicit;\n      var ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ctx_r2.onCheckedChange(o_r1, $event);\n    });\n    ɵngcc0.ɵɵelementStart(1, \"span\");\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var o_r1 = ctx.$implicit;\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"nzDisabled\", o_r1.disabled || ctx_r0.nzDisabled)(\"nzChecked\", o_r1.checked);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(o_r1.label);\n  }\n}\n\nvar NzCheckboxWrapperComponent = /*#__PURE__*/function () {\n  function NzCheckboxWrapperComponent(renderer, elementRef) {\n    _classCallCheck(this, NzCheckboxWrapperComponent);\n\n    this.nzOnChange = new EventEmitter();\n    this.checkboxList = [];\n    renderer.addClass(elementRef.nativeElement, 'ant-checkbox-group');\n  }\n\n  _createClass(NzCheckboxWrapperComponent, [{\n    key: \"addCheckbox\",\n    value: function addCheckbox(value) {\n      this.checkboxList.push(value);\n    }\n  }, {\n    key: \"removeCheckbox\",\n    value: function removeCheckbox(value) {\n      this.checkboxList.splice(this.checkboxList.indexOf(value), 1);\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange() {\n      var listOfCheckedValue = this.checkboxList.filter(function (item) {\n        return item.nzChecked;\n      }).map(function (item) {\n        return item.nzValue;\n      });\n      this.nzOnChange.emit(listOfCheckedValue);\n    }\n  }]);\n\n  return NzCheckboxWrapperComponent;\n}();\n\nNzCheckboxWrapperComponent.ɵfac = function NzCheckboxWrapperComponent_Factory(t) {\n  return new (t || NzCheckboxWrapperComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nNzCheckboxWrapperComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: NzCheckboxWrapperComponent,\n  selectors: [[\"nz-checkbox-wrapper\"]],\n  outputs: {\n    nzOnChange: \"nzOnChange\"\n  },\n  exportAs: [\"nzCheckboxWrapper\"],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function NzCheckboxWrapperComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNzCheckboxWrapperComponent.ctorParameters = function () {\n  return [{\n    type: Renderer2\n  }, {\n    type: ElementRef\n  }];\n};\n\nNzCheckboxWrapperComponent.propDecorators = {\n  nzOnChange: [{\n    type: Output\n  }]\n};\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nvar NzCheckboxComponent = /*#__PURE__*/function () {\n  function NzCheckboxComponent(elementRef, nzCheckboxWrapperComponent, cdr, focusMonitor, directionality) {\n    _classCallCheck(this, NzCheckboxComponent);\n\n    this.elementRef = elementRef;\n    this.nzCheckboxWrapperComponent = nzCheckboxWrapperComponent;\n    this.cdr = cdr;\n    this.focusMonitor = focusMonitor;\n    this.directionality = directionality;\n    this.dir = 'ltr';\n    this.destroy$ = new Subject();\n\n    this.onChange = function () {};\n\n    this.onTouched = function () {};\n\n    this.nzCheckedChange = new EventEmitter();\n    this.nzValue = null;\n    this.nzAutoFocus = false;\n    this.nzDisabled = false;\n    this.nzIndeterminate = false;\n    this.nzChecked = false; // TODO: move to host after View Engine deprecation\n\n    this.elementRef.nativeElement.classList.add('ant-checkbox-wrapper');\n  }\n\n  _createClass(NzCheckboxComponent, [{\n    key: \"hostClick\",\n    value: function hostClick(e) {\n      e.preventDefault();\n      this.focus();\n      this.innerCheckedChange(!this.nzChecked);\n    }\n  }, {\n    key: \"innerCheckedChange\",\n    value: function innerCheckedChange(checked) {\n      if (!this.nzDisabled) {\n        this.nzChecked = checked;\n        this.onChange(this.nzChecked);\n        this.nzCheckedChange.emit(this.nzChecked);\n\n        if (this.nzCheckboxWrapperComponent) {\n          this.nzCheckboxWrapperComponent.onChange();\n        }\n      }\n    }\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(value) {\n      this.nzChecked = value;\n      this.cdr.markForCheck();\n    }\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this.onChange = fn;\n    }\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(disabled) {\n      this.nzDisabled = disabled;\n      this.cdr.markForCheck();\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this.focusMonitor.focusVia(this.inputElement, 'keyboard');\n    }\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      this.inputElement.nativeElement.blur();\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this = this;\n\n      var _a;\n\n      this.focusMonitor.monitor(this.elementRef, true).subscribe(function (focusOrigin) {\n        if (!focusOrigin) {\n          Promise.resolve().then(function () {\n            return _this.onTouched();\n          });\n        }\n      });\n\n      if (this.nzCheckboxWrapperComponent) {\n        this.nzCheckboxWrapperComponent.addCheckbox(this);\n      }\n\n      (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe(function (direction) {\n        _this.dir = direction;\n\n        _this.cdr.detectChanges();\n      });\n      this.dir = this.directionality.value;\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      if (this.nzAutoFocus) {\n        this.focus();\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.focusMonitor.stopMonitoring(this.elementRef);\n\n      if (this.nzCheckboxWrapperComponent) {\n        this.nzCheckboxWrapperComponent.removeCheckbox(this);\n      }\n\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n  }]);\n\n  return NzCheckboxComponent;\n}();\n\nNzCheckboxComponent.ɵfac = function NzCheckboxComponent_Factory(t) {\n  return new (t || NzCheckboxComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(NzCheckboxWrapperComponent, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8));\n};\n\nNzCheckboxComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: NzCheckboxComponent,\n  selectors: [[\"\", \"nz-checkbox\", \"\"]],\n  viewQuery: function NzCheckboxComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c1, 7);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.inputElement = _t.first);\n    }\n  },\n  hostVars: 4,\n  hostBindings: function NzCheckboxComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function NzCheckboxComponent_click_HostBindingHandler($event) {\n        return ctx.hostClick($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"ant-checkbox-wrapper-checked\", ctx.nzChecked)(\"ant-checkbox-rtl\", ctx.dir === \"rtl\");\n    }\n  },\n  inputs: {\n    nzValue: \"nzValue\",\n    nzAutoFocus: \"nzAutoFocus\",\n    nzDisabled: \"nzDisabled\",\n    nzIndeterminate: \"nzIndeterminate\",\n    nzChecked: \"nzChecked\"\n  },\n  outputs: {\n    nzCheckedChange: \"nzCheckedChange\"\n  },\n  exportAs: [\"nzCheckbox\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () {\n      return NzCheckboxComponent;\n    }),\n    multi: true\n  }])],\n  attrs: _c2,\n  ngContentSelectors: _c0,\n  decls: 6,\n  vars: 10,\n  consts: [[1, \"ant-checkbox\"], [\"type\", \"checkbox\", 1, \"ant-checkbox-input\", 3, \"checked\", \"ngModel\", \"disabled\", \"ngModelChange\", \"click\"], [\"inputElement\", \"\"], [1, \"ant-checkbox-inner\"]],\n  template: function NzCheckboxComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"input\", 1, 2);\n      ɵngcc0.ɵɵlistener(\"ngModelChange\", function NzCheckboxComponent_Template_input_ngModelChange_1_listener($event) {\n        return ctx.innerCheckedChange($event);\n      })(\"click\", function NzCheckboxComponent_Template_input_click_1_listener($event) {\n        return $event.stopPropagation();\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelement(3, \"span\", 3);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(4, \"span\");\n      ɵngcc0.ɵɵprojection(5);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"ant-checkbox-checked\", ctx.nzChecked && !ctx.nzIndeterminate)(\"ant-checkbox-disabled\", ctx.nzDisabled)(\"ant-checkbox-indeterminate\", ctx.nzIndeterminate);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"checked\", ctx.nzChecked)(\"ngModel\", ctx.nzChecked)(\"disabled\", ctx.nzDisabled);\n      ɵngcc0.ɵɵattribute(\"autofocus\", ctx.nzAutoFocus ? \"autofocus\" : null);\n    }\n  },\n  directives: [ɵngcc3.CheckboxControlValueAccessor, ɵngcc3.NgControlStatus, ɵngcc3.NgModel],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNzCheckboxComponent.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: NzCheckboxWrapperComponent,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: FocusMonitor\n  }, {\n    type: Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }];\n};\n\nNzCheckboxComponent.propDecorators = {\n  inputElement: [{\n    type: ViewChild,\n    args: ['inputElement', {\n      static: true\n    }]\n  }],\n  nzCheckedChange: [{\n    type: Output\n  }],\n  nzValue: [{\n    type: Input\n  }],\n  nzAutoFocus: [{\n    type: Input\n  }],\n  nzDisabled: [{\n    type: Input\n  }],\n  nzIndeterminate: [{\n    type: Input\n  }],\n  nzChecked: [{\n    type: Input\n  }]\n};\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzCheckboxComponent.prototype, \"nzAutoFocus\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzCheckboxComponent.prototype, \"nzDisabled\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzCheckboxComponent.prototype, \"nzIndeterminate\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzCheckboxComponent.prototype, \"nzChecked\", void 0);\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzCheckboxGroupComponent = /*#__PURE__*/function () {\n  function NzCheckboxGroupComponent(elementRef, focusMonitor, cdr, directionality) {\n    _classCallCheck(this, NzCheckboxGroupComponent);\n\n    this.elementRef = elementRef;\n    this.focusMonitor = focusMonitor;\n    this.cdr = cdr;\n    this.directionality = directionality;\n\n    this.onChange = function () {};\n\n    this.onTouched = function () {};\n\n    this.options = [];\n    this.nzDisabled = false;\n    this.dir = 'ltr';\n    this.destroy$ = new Subject(); // TODO: move to host after View Engine deprecation\n\n    this.elementRef.nativeElement.classList.add('ant-checkbox-group');\n  }\n\n  _createClass(NzCheckboxGroupComponent, [{\n    key: \"trackByOption\",\n    value: function trackByOption(_, option) {\n      return option.value;\n    }\n  }, {\n    key: \"onCheckedChange\",\n    value: function onCheckedChange(option, checked) {\n      option.checked = checked;\n      this.onChange(this.options);\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this2 = this;\n\n      var _a;\n\n      this.focusMonitor.monitor(this.elementRef, true).subscribe(function (focusOrigin) {\n        if (!focusOrigin) {\n          Promise.resolve().then(function () {\n            return _this2.onTouched();\n          });\n        }\n      });\n      (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe(function (direction) {\n        _this2.dir = direction;\n\n        _this2.cdr.detectChanges();\n      });\n      this.dir = this.directionality.value;\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.focusMonitor.stopMonitoring(this.elementRef);\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(value) {\n      this.options = value;\n      this.cdr.markForCheck();\n    }\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this.onChange = fn;\n    }\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(disabled) {\n      this.nzDisabled = disabled;\n      this.cdr.markForCheck();\n    }\n  }]);\n\n  return NzCheckboxGroupComponent;\n}();\n\nNzCheckboxGroupComponent.ɵfac = function NzCheckboxGroupComponent_Factory(t) {\n  return new (t || NzCheckboxGroupComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8));\n};\n\nNzCheckboxGroupComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: NzCheckboxGroupComponent,\n  selectors: [[\"nz-checkbox-group\"]],\n  hostVars: 2,\n  hostBindings: function NzCheckboxGroupComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"ant-checkbox-group-rtl\", ctx.dir === \"rtl\");\n    }\n  },\n  inputs: {\n    nzDisabled: \"nzDisabled\"\n  },\n  exportAs: [\"nzCheckboxGroup\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () {\n      return NzCheckboxGroupComponent;\n    }),\n    multi: true\n  }])],\n  decls: 1,\n  vars: 2,\n  consts: [[\"nz-checkbox\", \"\", \"class\", \"ant-checkbox-group-item\", 3, \"nzDisabled\", \"nzChecked\", \"nzCheckedChange\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"nz-checkbox\", \"\", 1, \"ant-checkbox-group-item\", 3, \"nzDisabled\", \"nzChecked\", \"nzCheckedChange\"]],\n  template: function NzCheckboxGroupComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NzCheckboxGroupComponent_label_0_Template, 3, 3, \"label\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.options)(\"ngForTrackBy\", ctx.trackByOption);\n    }\n  },\n  directives: [ɵngcc4.NgForOf, NzCheckboxComponent],\n  encapsulation: 2\n});\n\nNzCheckboxGroupComponent.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: FocusMonitor\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }];\n};\n\nNzCheckboxGroupComponent.propDecorators = {\n  nzDisabled: [{\n    type: Input\n  }]\n};\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzCheckboxGroupComponent.prototype, \"nzDisabled\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzCheckboxWrapperComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-checkbox-wrapper',\n      exportAs: 'nzCheckboxWrapper',\n      preserveWhitespaces: false,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n    <ng-content></ng-content>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    nzOnChange: [{\n      type: Output\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzCheckboxComponent, [{\n    type: Component,\n    args: [{\n      selector: '[nz-checkbox]',\n      exportAs: 'nzCheckbox',\n      preserveWhitespaces: false,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n    <span\\n      class=\\\"ant-checkbox\\\"\\n      [class.ant-checkbox-checked]=\\\"nzChecked && !nzIndeterminate\\\"\\n      [class.ant-checkbox-disabled]=\\\"nzDisabled\\\"\\n      [class.ant-checkbox-indeterminate]=\\\"nzIndeterminate\\\"\\n    >\\n      <input\\n        #inputElement\\n        type=\\\"checkbox\\\"\\n        class=\\\"ant-checkbox-input\\\"\\n        [attr.autofocus]=\\\"nzAutoFocus ? 'autofocus' : null\\\"\\n        [checked]=\\\"nzChecked\\\"\\n        [ngModel]=\\\"nzChecked\\\"\\n        [disabled]=\\\"nzDisabled\\\"\\n        (ngModelChange)=\\\"innerCheckedChange($event)\\\"\\n        (click)=\\\"$event.stopPropagation()\\\"\\n      />\\n      <span class=\\\"ant-checkbox-inner\\\"></span>\\n    </span>\\n    <span><ng-content></ng-content></span>\\n  \",\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(function () {\n          return NzCheckboxComponent;\n        }),\n        multi: true\n      }],\n      host: {\n        '[class.ant-checkbox-wrapper-checked]': 'nzChecked',\n        '[class.ant-checkbox-rtl]': \"dir === 'rtl'\",\n        '(click)': 'hostClick($event)'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: NzCheckboxWrapperComponent,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc1.FocusMonitor\n    }, {\n      type: ɵngcc2.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    nzCheckedChange: [{\n      type: Output\n    }],\n    nzValue: [{\n      type: Input\n    }],\n    nzAutoFocus: [{\n      type: Input\n    }],\n    nzDisabled: [{\n      type: Input\n    }],\n    nzIndeterminate: [{\n      type: Input\n    }],\n    nzChecked: [{\n      type: Input\n    }],\n    inputElement: [{\n      type: ViewChild,\n      args: ['inputElement', {\n        static: true\n      }]\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzCheckboxGroupComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-checkbox-group',\n      exportAs: 'nzCheckboxGroup',\n      preserveWhitespaces: false,\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n    <label\\n      nz-checkbox\\n      class=\\\"ant-checkbox-group-item\\\"\\n      *ngFor=\\\"let o of options; trackBy: trackByOption\\\"\\n      [nzDisabled]=\\\"o.disabled || nzDisabled\\\"\\n      [nzChecked]=\\\"o.checked!\\\"\\n      (nzCheckedChange)=\\\"onCheckedChange(o, $event)\\\"\\n    >\\n      <span>{{ o.label }}</span>\\n    </label>\\n  \",\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(function () {\n          return NzCheckboxGroupComponent;\n        }),\n        multi: true\n      }],\n      host: {\n        '[class.ant-checkbox-group-rtl]': \"dir === 'rtl'\"\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc1.FocusMonitor\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc2.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    nzDisabled: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzCheckboxModule = function NzCheckboxModule() {\n  _classCallCheck(this, NzCheckboxModule);\n};\n\nNzCheckboxModule.ɵfac = function NzCheckboxModule_Factory(t) {\n  return new (t || NzCheckboxModule)();\n};\n\nNzCheckboxModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: NzCheckboxModule\n});\nNzCheckboxModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [[BidiModule, CommonModule, FormsModule, A11yModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzCheckboxModule, [{\n    type: NgModule,\n    args: [{\n      imports: [BidiModule, CommonModule, FormsModule, A11yModule],\n      declarations: [NzCheckboxComponent, NzCheckboxGroupComponent, NzCheckboxWrapperComponent],\n      exports: [NzCheckboxComponent, NzCheckboxGroupComponent, NzCheckboxWrapperComponent]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzCheckboxModule, {\n    declarations: function declarations() {\n      return [NzCheckboxComponent, NzCheckboxGroupComponent, NzCheckboxWrapperComponent];\n    },\n    imports: function imports() {\n      return [BidiModule, CommonModule, FormsModule, A11yModule];\n    },\n    exports: function exports() {\n      return [NzCheckboxComponent, NzCheckboxGroupComponent, NzCheckboxWrapperComponent];\n    }\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzCheckboxComponent, NzCheckboxGroupComponent, NzCheckboxModule, NzCheckboxWrapperComponent }; //# sourceMappingURL=ng-zorro-antd-checkbox.js.map","map":{"version":3,"sources":["/Users/mac/WebstormProjects/github-page/node_modules/ng-zorro-antd/__ivy_ngcc__/fesm2015/ng-zorro-antd-checkbox.js"],"names":["__decorate","__metadata","FocusMonitor","A11yModule","Directionality","BidiModule","EventEmitter","Component","ChangeDetectionStrategy","ViewEncapsulation","Renderer2","ElementRef","Output","forwardRef","Optional","ChangeDetectorRef","ViewChild","Input","NgModule","NG_VALUE_ACCESSOR","FormsModule","InputBoolean","Subject","takeUntil","CommonModule","ɵngcc0","ɵngcc1","ɵngcc2","ɵngcc3","ɵngcc4","_c0","_c1","_c2","NzCheckboxGroupComponent_label_0_Template","rf","ctx","_r3","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","NzCheckboxGroupComponent_label_0_Template_label_nzCheckedChange_0_listener","$event","restoredCtx","ɵɵrestoreView","o_r1","$implicit","ctx_r2","ɵɵnextContext","onCheckedChange","ɵɵtext","ɵɵelementEnd","ctx_r0","ɵɵproperty","disabled","nzDisabled","checked","ɵɵadvance","ɵɵtextInterpolate","label","NzCheckboxWrapperComponent","renderer","elementRef","nzOnChange","checkboxList","addClass","nativeElement","value","push","splice","indexOf","listOfCheckedValue","filter","item","nzChecked","map","nzValue","emit","ɵfac","NzCheckboxWrapperComponent_Factory","t","ɵɵdirectiveInject","ɵcmp","ɵɵdefineComponent","type","selectors","outputs","exportAs","ngContentSelectors","decls","vars","template","NzCheckboxWrapperComponent_Template","ɵɵprojectionDef","ɵɵprojection","encapsulation","changeDetection","ctorParameters","propDecorators","NzCheckboxComponent","nzCheckboxWrapperComponent","cdr","focusMonitor","directionality","dir","destroy$","onChange","onTouched","nzCheckedChange","nzAutoFocus","nzIndeterminate","classList","add","e","preventDefault","focus","innerCheckedChange","markForCheck","fn","focusVia","inputElement","blur","_a","monitor","subscribe","focusOrigin","Promise","resolve","then","addCheckbox","change","pipe","direction","detectChanges","stopMonitoring","removeCheckbox","next","complete","NzCheckboxComponent_Factory","viewQuery","NzCheckboxComponent_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","hostVars","hostBindings","NzCheckboxComponent_HostBindings","NzCheckboxComponent_click_HostBindingHandler","hostClick","ɵɵclassProp","inputs","features","ɵɵProvidersFeature","provide","useExisting","multi","attrs","consts","NzCheckboxComponent_Template","NzCheckboxComponent_Template_input_ngModelChange_1_listener","NzCheckboxComponent_Template_input_click_1_listener","stopPropagation","ɵɵelement","ɵɵattribute","directives","CheckboxControlValueAccessor","NgControlStatus","NgModel","decorators","args","static","Object","prototype","NzCheckboxGroupComponent","options","_","option","NzCheckboxGroupComponent_Factory","NzCheckboxGroupComponent_HostBindings","NzCheckboxGroupComponent_Template","ɵɵtemplate","trackByOption","NgForOf","ngDevMode","ɵsetClassMetadata","selector","preserveWhitespaces","OnPush","None","providers","host","NzCheckboxModule","NzCheckboxModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","declarations","exports","ngJitMode","ɵɵsetNgModuleScope"],"mappings":"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","sourcesContent":["import { __decorate, __metadata } from 'tslib';\nimport { FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Renderer2, ElementRef, Output, forwardRef, Optional, ChangeDetectorRef, ViewChild, Input, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { CommonModule } from '@angular/common';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/forms';\nimport * as ɵngcc4 from '@angular/common';\n\nconst _c0 = [\"*\"];\nconst _c1 = [\"inputElement\"];\nconst _c2 = [\"nz-checkbox\", \"\"];\nfunction NzCheckboxGroupComponent_label_0_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"label\", 1);\n    ɵngcc0.ɵɵlistener(\"nzCheckedChange\", function NzCheckboxGroupComponent_label_0_Template_label_nzCheckedChange_0_listener($event) { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r3); const o_r1 = restoredCtx.$implicit; const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2.onCheckedChange(o_r1, $event); });\n    ɵngcc0.ɵɵelementStart(1, \"span\");\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const o_r1 = ctx.$implicit;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"nzDisabled\", o_r1.disabled || ctx_r0.nzDisabled)(\"nzChecked\", o_r1.checked);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(o_r1.label);\n} }\nclass NzCheckboxWrapperComponent {\n    constructor(renderer, elementRef) {\n        this.nzOnChange = new EventEmitter();\n        this.checkboxList = [];\n        renderer.addClass(elementRef.nativeElement, 'ant-checkbox-group');\n    }\n    addCheckbox(value) {\n        this.checkboxList.push(value);\n    }\n    removeCheckbox(value) {\n        this.checkboxList.splice(this.checkboxList.indexOf(value), 1);\n    }\n    onChange() {\n        const listOfCheckedValue = this.checkboxList.filter(item => item.nzChecked).map(item => item.nzValue);\n        this.nzOnChange.emit(listOfCheckedValue);\n    }\n}\nNzCheckboxWrapperComponent.ɵfac = function NzCheckboxWrapperComponent_Factory(t) { return new (t || NzCheckboxWrapperComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nNzCheckboxWrapperComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NzCheckboxWrapperComponent, selectors: [[\"nz-checkbox-wrapper\"]], outputs: { nzOnChange: \"nzOnChange\" }, exportAs: [\"nzCheckboxWrapper\"], ngContentSelectors: _c0, decls: 1, vars: 0, template: function NzCheckboxWrapperComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2, changeDetection: 0 });\nNzCheckboxWrapperComponent.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: ElementRef }\n];\nNzCheckboxWrapperComponent.propDecorators = {\n    nzOnChange: [{ type: Output }]\n};\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzCheckboxComponent {\n    constructor(elementRef, nzCheckboxWrapperComponent, cdr, focusMonitor, directionality) {\n        this.elementRef = elementRef;\n        this.nzCheckboxWrapperComponent = nzCheckboxWrapperComponent;\n        this.cdr = cdr;\n        this.focusMonitor = focusMonitor;\n        this.directionality = directionality;\n        this.dir = 'ltr';\n        this.destroy$ = new Subject();\n        this.onChange = () => { };\n        this.onTouched = () => { };\n        this.nzCheckedChange = new EventEmitter();\n        this.nzValue = null;\n        this.nzAutoFocus = false;\n        this.nzDisabled = false;\n        this.nzIndeterminate = false;\n        this.nzChecked = false;\n        // TODO: move to host after View Engine deprecation\n        this.elementRef.nativeElement.classList.add('ant-checkbox-wrapper');\n    }\n    hostClick(e) {\n        e.preventDefault();\n        this.focus();\n        this.innerCheckedChange(!this.nzChecked);\n    }\n    innerCheckedChange(checked) {\n        if (!this.nzDisabled) {\n            this.nzChecked = checked;\n            this.onChange(this.nzChecked);\n            this.nzCheckedChange.emit(this.nzChecked);\n            if (this.nzCheckboxWrapperComponent) {\n                this.nzCheckboxWrapperComponent.onChange();\n            }\n        }\n    }\n    writeValue(value) {\n        this.nzChecked = value;\n        this.cdr.markForCheck();\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    setDisabledState(disabled) {\n        this.nzDisabled = disabled;\n        this.cdr.markForCheck();\n    }\n    focus() {\n        this.focusMonitor.focusVia(this.inputElement, 'keyboard');\n    }\n    blur() {\n        this.inputElement.nativeElement.blur();\n    }\n    ngOnInit() {\n        var _a;\n        this.focusMonitor.monitor(this.elementRef, true).subscribe(focusOrigin => {\n            if (!focusOrigin) {\n                Promise.resolve().then(() => this.onTouched());\n            }\n        });\n        if (this.nzCheckboxWrapperComponent) {\n            this.nzCheckboxWrapperComponent.addCheckbox(this);\n        }\n        (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe((direction) => {\n            this.dir = direction;\n            this.cdr.detectChanges();\n        });\n        this.dir = this.directionality.value;\n    }\n    ngAfterViewInit() {\n        if (this.nzAutoFocus) {\n            this.focus();\n        }\n    }\n    ngOnDestroy() {\n        this.focusMonitor.stopMonitoring(this.elementRef);\n        if (this.nzCheckboxWrapperComponent) {\n            this.nzCheckboxWrapperComponent.removeCheckbox(this);\n        }\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\nNzCheckboxComponent.ɵfac = function NzCheckboxComponent_Factory(t) { return new (t || NzCheckboxComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(NzCheckboxWrapperComponent, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8)); };\nNzCheckboxComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NzCheckboxComponent, selectors: [[\"\", \"nz-checkbox\", \"\"]], viewQuery: function NzCheckboxComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c1, 7);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.inputElement = _t.first);\n    } }, hostVars: 4, hostBindings: function NzCheckboxComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function NzCheckboxComponent_click_HostBindingHandler($event) { return ctx.hostClick($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"ant-checkbox-wrapper-checked\", ctx.nzChecked)(\"ant-checkbox-rtl\", ctx.dir === \"rtl\");\n    } }, inputs: { nzValue: \"nzValue\", nzAutoFocus: \"nzAutoFocus\", nzDisabled: \"nzDisabled\", nzIndeterminate: \"nzIndeterminate\", nzChecked: \"nzChecked\" }, outputs: { nzCheckedChange: \"nzCheckedChange\" }, exportAs: [\"nzCheckbox\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            {\n                provide: NG_VALUE_ACCESSOR,\n                useExisting: forwardRef(() => NzCheckboxComponent),\n                multi: true\n            }\n        ])], attrs: _c2, ngContentSelectors: _c0, decls: 6, vars: 10, consts: [[1, \"ant-checkbox\"], [\"type\", \"checkbox\", 1, \"ant-checkbox-input\", 3, \"checked\", \"ngModel\", \"disabled\", \"ngModelChange\", \"click\"], [\"inputElement\", \"\"], [1, \"ant-checkbox-inner\"]], template: function NzCheckboxComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"input\", 1, 2);\n        ɵngcc0.ɵɵlistener(\"ngModelChange\", function NzCheckboxComponent_Template_input_ngModelChange_1_listener($event) { return ctx.innerCheckedChange($event); })(\"click\", function NzCheckboxComponent_Template_input_click_1_listener($event) { return $event.stopPropagation(); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(3, \"span\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"span\");\n        ɵngcc0.ɵɵprojection(5);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"ant-checkbox-checked\", ctx.nzChecked && !ctx.nzIndeterminate)(\"ant-checkbox-disabled\", ctx.nzDisabled)(\"ant-checkbox-indeterminate\", ctx.nzIndeterminate);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"checked\", ctx.nzChecked)(\"ngModel\", ctx.nzChecked)(\"disabled\", ctx.nzDisabled);\n        ɵngcc0.ɵɵattribute(\"autofocus\", ctx.nzAutoFocus ? \"autofocus\" : null);\n    } }, directives: [ɵngcc3.CheckboxControlValueAccessor, ɵngcc3.NgControlStatus, ɵngcc3.NgModel], encapsulation: 2, changeDetection: 0 });\nNzCheckboxComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NzCheckboxWrapperComponent, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef },\n    { type: FocusMonitor },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nNzCheckboxComponent.propDecorators = {\n    inputElement: [{ type: ViewChild, args: ['inputElement', { static: true },] }],\n    nzCheckedChange: [{ type: Output }],\n    nzValue: [{ type: Input }],\n    nzAutoFocus: [{ type: Input }],\n    nzDisabled: [{ type: Input }],\n    nzIndeterminate: [{ type: Input }],\n    nzChecked: [{ type: Input }]\n};\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Object)\n], NzCheckboxComponent.prototype, \"nzAutoFocus\", void 0);\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Object)\n], NzCheckboxComponent.prototype, \"nzDisabled\", void 0);\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Object)\n], NzCheckboxComponent.prototype, \"nzIndeterminate\", void 0);\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Object)\n], NzCheckboxComponent.prototype, \"nzChecked\", void 0);\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzCheckboxGroupComponent {\n    constructor(elementRef, focusMonitor, cdr, directionality) {\n        this.elementRef = elementRef;\n        this.focusMonitor = focusMonitor;\n        this.cdr = cdr;\n        this.directionality = directionality;\n        this.onChange = () => { };\n        this.onTouched = () => { };\n        this.options = [];\n        this.nzDisabled = false;\n        this.dir = 'ltr';\n        this.destroy$ = new Subject();\n        // TODO: move to host after View Engine deprecation\n        this.elementRef.nativeElement.classList.add('ant-checkbox-group');\n    }\n    trackByOption(_, option) {\n        return option.value;\n    }\n    onCheckedChange(option, checked) {\n        option.checked = checked;\n        this.onChange(this.options);\n    }\n    ngOnInit() {\n        var _a;\n        this.focusMonitor.monitor(this.elementRef, true).subscribe(focusOrigin => {\n            if (!focusOrigin) {\n                Promise.resolve().then(() => this.onTouched());\n            }\n        });\n        (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe((direction) => {\n            this.dir = direction;\n            this.cdr.detectChanges();\n        });\n        this.dir = this.directionality.value;\n    }\n    ngOnDestroy() {\n        this.focusMonitor.stopMonitoring(this.elementRef);\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n    writeValue(value) {\n        this.options = value;\n        this.cdr.markForCheck();\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    setDisabledState(disabled) {\n        this.nzDisabled = disabled;\n        this.cdr.markForCheck();\n    }\n}\nNzCheckboxGroupComponent.ɵfac = function NzCheckboxGroupComponent_Factory(t) { return new (t || NzCheckboxGroupComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8)); };\nNzCheckboxGroupComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NzCheckboxGroupComponent, selectors: [[\"nz-checkbox-group\"]], hostVars: 2, hostBindings: function NzCheckboxGroupComponent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"ant-checkbox-group-rtl\", ctx.dir === \"rtl\");\n    } }, inputs: { nzDisabled: \"nzDisabled\" }, exportAs: [\"nzCheckboxGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            {\n                provide: NG_VALUE_ACCESSOR,\n                useExisting: forwardRef(() => NzCheckboxGroupComponent),\n                multi: true\n            }\n        ])], decls: 1, vars: 2, consts: [[\"nz-checkbox\", \"\", \"class\", \"ant-checkbox-group-item\", 3, \"nzDisabled\", \"nzChecked\", \"nzCheckedChange\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"nz-checkbox\", \"\", 1, \"ant-checkbox-group-item\", 3, \"nzDisabled\", \"nzChecked\", \"nzCheckedChange\"]], template: function NzCheckboxGroupComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NzCheckboxGroupComponent_label_0_Template, 3, 3, \"label\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.options)(\"ngForTrackBy\", ctx.trackByOption);\n    } }, directives: [ɵngcc4.NgForOf, NzCheckboxComponent], encapsulation: 2 });\nNzCheckboxGroupComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nNzCheckboxGroupComponent.propDecorators = {\n    nzDisabled: [{ type: Input }]\n};\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Object)\n], NzCheckboxGroupComponent.prototype, \"nzDisabled\", void 0);\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzCheckboxWrapperComponent, [{\n        type: Component,\n        args: [{\n                selector: 'nz-checkbox-wrapper',\n                exportAs: 'nzCheckboxWrapper',\n                preserveWhitespaces: false,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                template: `\n    <ng-content></ng-content>\n  `\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, { nzOnChange: [{\n            type: Output\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzCheckboxComponent, [{\n        type: Component,\n        args: [{\n                selector: '[nz-checkbox]',\n                exportAs: 'nzCheckbox',\n                preserveWhitespaces: false,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                template: `\n    <span\n      class=\"ant-checkbox\"\n      [class.ant-checkbox-checked]=\"nzChecked && !nzIndeterminate\"\n      [class.ant-checkbox-disabled]=\"nzDisabled\"\n      [class.ant-checkbox-indeterminate]=\"nzIndeterminate\"\n    >\n      <input\n        #inputElement\n        type=\"checkbox\"\n        class=\"ant-checkbox-input\"\n        [attr.autofocus]=\"nzAutoFocus ? 'autofocus' : null\"\n        [checked]=\"nzChecked\"\n        [ngModel]=\"nzChecked\"\n        [disabled]=\"nzDisabled\"\n        (ngModelChange)=\"innerCheckedChange($event)\"\n        (click)=\"$event.stopPropagation()\"\n      />\n      <span class=\"ant-checkbox-inner\"></span>\n    </span>\n    <span><ng-content></ng-content></span>\n  `,\n                providers: [\n                    {\n                        provide: NG_VALUE_ACCESSOR,\n                        useExisting: forwardRef(() => NzCheckboxComponent),\n                        multi: true\n                    }\n                ],\n                host: {\n                    '[class.ant-checkbox-wrapper-checked]': 'nzChecked',\n                    '[class.ant-checkbox-rtl]': `dir === 'rtl'`,\n                    '(click)': 'hostClick($event)'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: NzCheckboxWrapperComponent, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { nzCheckedChange: [{\n            type: Output\n        }], nzValue: [{\n            type: Input\n        }], nzAutoFocus: [{\n            type: Input\n        }], nzDisabled: [{\n            type: Input\n        }], nzIndeterminate: [{\n            type: Input\n        }], nzChecked: [{\n            type: Input\n        }], inputElement: [{\n            type: ViewChild,\n            args: ['inputElement', { static: true }]\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzCheckboxGroupComponent, [{\n        type: Component,\n        args: [{\n                selector: 'nz-checkbox-group',\n                exportAs: 'nzCheckboxGroup',\n                preserveWhitespaces: false,\n                encapsulation: ViewEncapsulation.None,\n                template: `\n    <label\n      nz-checkbox\n      class=\"ant-checkbox-group-item\"\n      *ngFor=\"let o of options; trackBy: trackByOption\"\n      [nzDisabled]=\"o.disabled || nzDisabled\"\n      [nzChecked]=\"o.checked!\"\n      (nzCheckedChange)=\"onCheckedChange(o, $event)\"\n    >\n      <span>{{ o.label }}</span>\n    </label>\n  `,\n                providers: [\n                    {\n                        provide: NG_VALUE_ACCESSOR,\n                        useExisting: forwardRef(() => NzCheckboxGroupComponent),\n                        multi: true\n                    }\n                ],\n                host: {\n                    '[class.ant-checkbox-group-rtl]': `dir === 'rtl'`\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { nzDisabled: [{\n            type: Input\n        }] }); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzCheckboxModule {\n}\nNzCheckboxModule.ɵfac = function NzCheckboxModule_Factory(t) { return new (t || NzCheckboxModule)(); };\nNzCheckboxModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NzCheckboxModule });\nNzCheckboxModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[BidiModule, CommonModule, FormsModule, A11yModule]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzCheckboxModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule, CommonModule, FormsModule, A11yModule],\n                declarations: [NzCheckboxComponent, NzCheckboxGroupComponent, NzCheckboxWrapperComponent],\n                exports: [NzCheckboxComponent, NzCheckboxGroupComponent, NzCheckboxWrapperComponent]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzCheckboxModule, { declarations: function () { return [NzCheckboxComponent, NzCheckboxGroupComponent, NzCheckboxWrapperComponent]; }, imports: function () { return [BidiModule, CommonModule, FormsModule, A11yModule]; }, exports: function () { return [NzCheckboxComponent, NzCheckboxGroupComponent, NzCheckboxWrapperComponent]; } }); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzCheckboxComponent, NzCheckboxGroupComponent, NzCheckboxModule, NzCheckboxWrapperComponent };\n\n//# sourceMappingURL=ng-zorro-antd-checkbox.js.map"]},"metadata":{},"sourceType":"module"}